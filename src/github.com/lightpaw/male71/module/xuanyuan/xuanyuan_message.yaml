# 轩辕会武

# 每个玩家有一个积分，根据积分排名，找排行榜前X名，后Y名作为对手

# 排行榜重置处理，更新排行榜，更新完成后，遍历在线英雄

# 排行榜是否为空(用于功能开放)
# 1、登陆时候，如果无排行榜，服务器主动推送(is_empty = true)（有排行榜不推送）
# 2、每日重置，如果从无排行榜变成有排行榜，服务主动推送(is_empty = false)
rank_is_empty:
  s2c:
    is_empty: bool

# 获取数据(第一次打开时候请求)
self_info:
  c2s:
  s2c:
    rank: int // 排名，0表示未上榜
    score: int // 积分
    win: int // 赢的次数
    lose: int // 输的次数
    range_id: int // 默认分组id
    first_target_rank: int // 挑战玩家列表中第一个玩家的排名
    targets: bytes[] // shared_proto.XuanyuanTargetProto

# 获取分组挑战目标列表（每次打开面板或者切页时候请求，客户端缓存10秒，每2次数据请求之间至少间隔10秒以上）
list_target:
  c2s:
    range_id: int // 分组id
  s2c:
    range_id: int // 分组id
    first_target_rank: int // 挑战玩家id列表中第一个玩家的排名
    targets: bytes[] // shared_proto.XuanyuanTargetProto
  s2c_fail:
    invalid_range: 无效的分组id

# 根据玩家id，查询挑战部队数据（用这个数据更新外面那个战力）
query_target_troop:
  c2s:
    id: bytes // 玩家id
  s2c:
    compress: snappy
    id: bytes // 玩家id
    version: int // 挑战部队版本号
    player: bytes // shared_proto.CombatPlayerProto 玩家部队数据
  s2c_fail:
    invalid_id: 无效的id

# 挑战
#
# 收到返回消息，将玩家添加到今日已挑战列表，更新剩余挑战次数
challenge:
  c2s:
    id: bytes // 玩家id
    version: int // 挑战版本号
  s2c:
    id: bytes // 玩家id
    link: string // 战斗回放地址
    add_score: int // 加多少积分
  s2c_fail:
    invalid_id: 无效的id
    challenged: 目标已经挑战过了
    times_limit: 挑战次数不足
    version: 挑战目标阵容已改变
    captain_not_enough: 上阵武将个数不足
    server_error: 服务器忙，请稍后重试

# 更新自己的数据
update_xy_info:
  s2c:
    score: int // 当前积分
    win: int // 胜利次数
    lose: int // 失败次数

# 更新记录
add_record:
  s2c:
    id: int // 记录id
    data: bytes // shared_proto.XuanyuanRecordProto 轩辕会武记录

# 请求记录列表
list_record:
  c2s:
    id: int // 第一次发0
    up: bool // true表示往上翻（发最大的id），false表示往下翻（发最小的id）
  s2c:
    compress: snappy
    id: int // 第一次发0
    up: bool // true表示往上翻，false表示往下翻
    ids: int[] // 记录id
    data: bytes[] // shared_proto.XuanyuanRecordProto[] 轩辕会武记录

client_pb_import:
  "shared.proto"

server_pb_import:
 - "github.com/lightpaw/male7/pb/shared_proto/base.proto"

# 领取排名奖励
collect_rank_prize:
  c2s:
  s2c:
    prize: shared_proto.PrizeProto // 领取到的奖励
  s2c_fail:
    collected: 已领取过奖励

# 轩辕会武每日重置
reset:
  s2c: