// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/server_proto/depot.proto
// DO NOT EDIT!

package server_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HeroDepotServerProto struct {
	Goods              map[uint64]uint64       `protobuf:"bytes,1,rep,name=goods" json:"goods,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Equipments         []*EquipmentServerProto `protobuf:"bytes,2,rep,name=equipments" json:"equipments,omitempty"`
	TempExpiredTime    map[uint64]int64        `protobuf:"bytes,3,rep,name=temp_expired_time,json=tempExpiredTime" json:"temp_expired_time,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Baowu              map[uint64]uint64       `protobuf:"bytes,4,rep,name=baowu" json:"baowu,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UnlockBaowu        uint64                  `protobuf:"varint,5,opt,name=unlock_baowu,json=unlockBaowu,proto3" json:"unlock_baowu,omitempty"`
	UnlockBaowuEndTime int64                   `protobuf:"varint,6,opt,name=unlock_baowu_end_time,json=unlockBaowuEndTime,proto3" json:"unlock_baowu_end_time,omitempty"`
	MiaoBaowuTimes     uint64                  `protobuf:"varint,7,opt,name=miao_baowu_times,json=miaoBaowuTimes,proto3" json:"miao_baowu_times,omitempty"`
	BaowuLog           [][]byte                `protobuf:"bytes,8,rep,name=baowu_log,json=baowuLog" json:"baowu_log,omitempty"`
}

func (m *HeroDepotServerProto) Reset()                    { *m = HeroDepotServerProto{} }
func (m *HeroDepotServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroDepotServerProto) ProtoMessage()               {}
func (*HeroDepotServerProto) Descriptor() ([]byte, []int) { return fileDescriptorDepot, []int{0} }

func (m *HeroDepotServerProto) GetGoods() map[uint64]uint64 {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *HeroDepotServerProto) GetEquipments() []*EquipmentServerProto {
	if m != nil {
		return m.Equipments
	}
	return nil
}

func (m *HeroDepotServerProto) GetTempExpiredTime() map[uint64]int64 {
	if m != nil {
		return m.TempExpiredTime
	}
	return nil
}

func (m *HeroDepotServerProto) GetBaowu() map[uint64]uint64 {
	if m != nil {
		return m.Baowu
	}
	return nil
}

func (m *HeroDepotServerProto) GetUnlockBaowu() uint64 {
	if m != nil {
		return m.UnlockBaowu
	}
	return 0
}

func (m *HeroDepotServerProto) GetUnlockBaowuEndTime() int64 {
	if m != nil {
		return m.UnlockBaowuEndTime
	}
	return 0
}

func (m *HeroDepotServerProto) GetMiaoBaowuTimes() uint64 {
	if m != nil {
		return m.MiaoBaowuTimes
	}
	return 0
}

func (m *HeroDepotServerProto) GetBaowuLog() [][]byte {
	if m != nil {
		return m.BaowuLog
	}
	return nil
}

// 开启了的装备合成
type HeroOpenCombineEquipServerProto struct {
	OpenEquipCombine []uint64 `protobuf:"varint,1,rep,packed,name=open_equip_combine,json=openEquipCombine" json:"open_equip_combine,omitempty"`
}

func (m *HeroOpenCombineEquipServerProto) Reset()         { *m = HeroOpenCombineEquipServerProto{} }
func (m *HeroOpenCombineEquipServerProto) String() string { return proto.CompactTextString(m) }
func (*HeroOpenCombineEquipServerProto) ProtoMessage()    {}
func (*HeroOpenCombineEquipServerProto) Descriptor() ([]byte, []int) {
	return fileDescriptorDepot, []int{1}
}

func (m *HeroOpenCombineEquipServerProto) GetOpenEquipCombine() []uint64 {
	if m != nil {
		return m.OpenEquipCombine
	}
	return nil
}

func init() {
	proto.RegisterType((*HeroDepotServerProto)(nil), "proto.HeroDepotServerProto")
	proto.RegisterType((*HeroOpenCombineEquipServerProto)(nil), "proto.HeroOpenCombineEquipServerProto")
}
func (m *HeroDepotServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroDepotServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Goods) > 0 {
		for k, _ := range m.Goods {
			dAtA[i] = 0xa
			i++
			v := m.Goods[k]
			mapSize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			i = encodeVarintDepot(dAtA, i, uint64(mapSize))
			dAtA[i] = 0x8
			i++
			i = encodeVarintDepot(dAtA, i, uint64(k))
			dAtA[i] = 0x10
			i++
			i = encodeVarintDepot(dAtA, i, uint64(v))
		}
	}
	if len(m.Equipments) > 0 {
		for _, msg := range m.Equipments {
			dAtA[i] = 0x12
			i++
			i = encodeVarintDepot(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TempExpiredTime) > 0 {
		for k, _ := range m.TempExpiredTime {
			dAtA[i] = 0x1a
			i++
			v := m.TempExpiredTime[k]
			mapSize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			i = encodeVarintDepot(dAtA, i, uint64(mapSize))
			dAtA[i] = 0x8
			i++
			i = encodeVarintDepot(dAtA, i, uint64(k))
			dAtA[i] = 0x10
			i++
			i = encodeVarintDepot(dAtA, i, uint64(v))
		}
	}
	if len(m.Baowu) > 0 {
		for k, _ := range m.Baowu {
			dAtA[i] = 0x22
			i++
			v := m.Baowu[k]
			mapSize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			i = encodeVarintDepot(dAtA, i, uint64(mapSize))
			dAtA[i] = 0x8
			i++
			i = encodeVarintDepot(dAtA, i, uint64(k))
			dAtA[i] = 0x10
			i++
			i = encodeVarintDepot(dAtA, i, uint64(v))
		}
	}
	if m.UnlockBaowu != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintDepot(dAtA, i, uint64(m.UnlockBaowu))
	}
	if m.UnlockBaowuEndTime != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintDepot(dAtA, i, uint64(m.UnlockBaowuEndTime))
	}
	if m.MiaoBaowuTimes != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintDepot(dAtA, i, uint64(m.MiaoBaowuTimes))
	}
	if len(m.BaowuLog) > 0 {
		for _, b := range m.BaowuLog {
			dAtA[i] = 0x42
			i++
			i = encodeVarintDepot(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	return i, nil
}

func (m *HeroOpenCombineEquipServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroOpenCombineEquipServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OpenEquipCombine) > 0 {
		dAtA2 := make([]byte, len(m.OpenEquipCombine)*10)
		var j1 int
		for _, num := range m.OpenEquipCombine {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		dAtA[i] = 0xa
		i++
		i = encodeVarintDepot(dAtA, i, uint64(j1))
		i += copy(dAtA[i:], dAtA2[:j1])
	}
	return i, nil
}

func encodeFixed64Depot(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Depot(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintDepot(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *HeroDepotServerProto) Size() (n int) {
	var l int
	_ = l
	if len(m.Goods) > 0 {
		for k, v := range m.Goods {
			_ = k
			_ = v
			mapEntrySize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			n += mapEntrySize + 1 + sovDepot(uint64(mapEntrySize))
		}
	}
	if len(m.Equipments) > 0 {
		for _, e := range m.Equipments {
			l = e.Size()
			n += 1 + l + sovDepot(uint64(l))
		}
	}
	if len(m.TempExpiredTime) > 0 {
		for k, v := range m.TempExpiredTime {
			_ = k
			_ = v
			mapEntrySize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			n += mapEntrySize + 1 + sovDepot(uint64(mapEntrySize))
		}
	}
	if len(m.Baowu) > 0 {
		for k, v := range m.Baowu {
			_ = k
			_ = v
			mapEntrySize := 1 + sovDepot(uint64(k)) + 1 + sovDepot(uint64(v))
			n += mapEntrySize + 1 + sovDepot(uint64(mapEntrySize))
		}
	}
	if m.UnlockBaowu != 0 {
		n += 1 + sovDepot(uint64(m.UnlockBaowu))
	}
	if m.UnlockBaowuEndTime != 0 {
		n += 1 + sovDepot(uint64(m.UnlockBaowuEndTime))
	}
	if m.MiaoBaowuTimes != 0 {
		n += 1 + sovDepot(uint64(m.MiaoBaowuTimes))
	}
	if len(m.BaowuLog) > 0 {
		for _, b := range m.BaowuLog {
			l = len(b)
			n += 1 + l + sovDepot(uint64(l))
		}
	}
	return n
}

func (m *HeroOpenCombineEquipServerProto) Size() (n int) {
	var l int
	_ = l
	if len(m.OpenEquipCombine) > 0 {
		l = 0
		for _, e := range m.OpenEquipCombine {
			l += sovDepot(uint64(e))
		}
		n += 1 + sovDepot(uint64(l)) + l
	}
	return n
}

func sovDepot(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozDepot(x uint64) (n int) {
	return sovDepot(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HeroDepotServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDepot
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroDepotServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroDepotServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDepot
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var keykey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				keykey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			var mapkey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				mapkey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if m.Goods == nil {
				m.Goods = make(map[uint64]uint64)
			}
			if iNdEx < postIndex {
				var valuekey uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					valuekey |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				var mapvalue uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					mapvalue |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Goods[mapkey] = mapvalue
			} else {
				var mapvalue uint64
				m.Goods[mapkey] = mapvalue
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Equipments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDepot
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Equipments = append(m.Equipments, &EquipmentServerProto{})
			if err := m.Equipments[len(m.Equipments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TempExpiredTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDepot
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var keykey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				keykey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			var mapkey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				mapkey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if m.TempExpiredTime == nil {
				m.TempExpiredTime = make(map[uint64]int64)
			}
			if iNdEx < postIndex {
				var valuekey uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					valuekey |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				var mapvalue int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					mapvalue |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TempExpiredTime[mapkey] = mapvalue
			} else {
				var mapvalue int64
				m.TempExpiredTime[mapkey] = mapvalue
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Baowu", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDepot
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var keykey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				keykey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			var mapkey uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				mapkey |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if m.Baowu == nil {
				m.Baowu = make(map[uint64]uint64)
			}
			if iNdEx < postIndex {
				var valuekey uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					valuekey |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				var mapvalue uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					mapvalue |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Baowu[mapkey] = mapvalue
			} else {
				var mapvalue uint64
				m.Baowu[mapkey] = mapvalue
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockBaowu", wireType)
			}
			m.UnlockBaowu = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockBaowu |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockBaowuEndTime", wireType)
			}
			m.UnlockBaowuEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockBaowuEndTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoBaowuTimes", wireType)
			}
			m.MiaoBaowuTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoBaowuTimes |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaowuLog", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDepot
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaowuLog = append(m.BaowuLog, make([]byte, postIndex-iNdEx))
			copy(m.BaowuLog[len(m.BaowuLog)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDepot(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDepot
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroOpenCombineEquipServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDepot
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroOpenCombineEquipServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroOpenCombineEquipServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OpenEquipCombine = append(m.OpenEquipCombine, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDepot
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDepot
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OpenEquipCombine = append(m.OpenEquipCombine, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenEquipCombine", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDepot(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDepot
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDepot(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDepot
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDepot
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthDepot
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDepot
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDepot(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDepot = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDepot   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/server_proto/depot.proto", fileDescriptorDepot)
}

var fileDescriptorDepot = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x6a, 0xd4, 0x40,
	0x14, 0xc6, 0x9d, 0xcd, 0xa6, 0xd6, 0xd3, 0x45, 0xd7, 0x61, 0x85, 0xb0, 0x85, 0x35, 0xf6, 0x42,
	0x72, 0x21, 0x1b, 0xff, 0x20, 0x2e, 0xea, 0xd5, 0x6a, 0xb0, 0x17, 0x42, 0x25, 0xf6, 0x4a, 0x84,
	0x90, 0xec, 0x1e, 0xd2, 0xd0, 0x4c, 0x66, 0x4c, 0x26, 0xad, 0xbd, 0xf5, 0x29, 0x7c, 0x24, 0x2f,
	0x7d, 0x04, 0x59, 0x5f, 0x44, 0xe6, 0x4c, 0xa4, 0x11, 0x8a, 0x65, 0xaf, 0x66, 0xf2, 0xcd, 0xef,
	0xfb, 0x32, 0xe7, 0xe4, 0x04, 0x9e, 0xe7, 0x85, 0x3e, 0x69, 0xb3, 0xf9, 0x4a, 0x8a, 0xb0, 0x2c,
	0xf2, 0x13, 0xad, 0xd2, 0xf3, 0x50, 0xa4, 0x25, 0xbe, 0x08, 0x55, 0x16, 0x36, 0x58, 0x9f, 0x61,
	0x9d, 0xa8, 0x5a, 0x6a, 0x19, 0xae, 0x51, 0x49, 0x3d, 0xa7, 0x3d, 0x77, 0x69, 0x99, 0x6e, 0xe1,
	0xce, 0xa5, 0x5c, 0x37, 0xd6, 0x7d, 0xf0, 0xcd, 0x85, 0xc9, 0x21, 0xd6, 0xf2, 0xad, 0x49, 0xfc,
	0x48, 0xd4, 0x07, 0x8a, 0x7d, 0x0d, 0x2e, 0x71, 0x1e, 0xf3, 0x9d, 0x60, 0xef, 0xe9, 0x43, 0xcb,
	0xcf, 0xaf, 0x62, 0xe7, 0xef, 0x0c, 0x18, 0x55, 0xba, 0xbe, 0x88, 0xad, 0x89, 0xbf, 0x02, 0xc0,
	0x2f, 0x6d, 0xa1, 0x04, 0x56, 0xba, 0xf1, 0x06, 0x14, 0xb1, 0xdf, 0x45, 0x44, 0x7f, 0x0f, 0x7a,
	0x11, 0x71, 0x0f, 0xe7, 0x9f, 0xe1, 0xae, 0x46, 0xa1, 0x12, 0xfc, 0xaa, 0x8a, 0x1a, 0xd7, 0x89,
	0x2e, 0x04, 0x7a, 0x0e, 0x65, 0x3c, 0xfe, 0xdf, 0x35, 0x8e, 0x51, 0xa8, 0xc8, 0x7a, 0x8e, 0x0b,
	0x81, 0xf6, 0x42, 0x77, 0xf4, 0xbf, 0xaa, 0x29, 0x2c, 0x4b, 0xe5, 0x79, 0xeb, 0x0d, 0xaf, 0x2f,
	0x6c, 0x69, 0xc0, 0xae, 0x30, 0x32, 0xf1, 0x07, 0x30, 0x6a, 0xab, 0x52, 0xae, 0x4e, 0x13, 0x1b,
	0xe2, 0xfa, 0x2c, 0x18, 0xc6, 0x7b, 0x56, 0x23, 0x9c, 0x3f, 0x81, 0x7b, 0x7d, 0x24, 0xc1, 0xaa,
	0x2b, 0x61, 0xc7, 0x67, 0x81, 0x13, 0xf3, 0x1e, 0x1b, 0x55, 0xf6, 0x4e, 0x01, 0x8c, 0x45, 0x91,
	0xca, 0xce, 0x60, 0xe0, 0xc6, 0xbb, 0x49, 0xc9, 0xb7, 0x8d, 0x4e, 0xac, 0x01, 0x1b, 0xbe, 0x0f,
	0xb7, 0x2c, 0x54, 0xca, 0xdc, 0xdb, 0xf5, 0x9d, 0x60, 0x14, 0xef, 0x92, 0xf0, 0x5e, 0xe6, 0xd3,
	0x05, 0xc0, 0xe5, 0xa7, 0xe0, 0x63, 0x70, 0x4e, 0xf1, 0xc2, 0x63, 0x94, 0x63, 0xb6, 0x7c, 0x02,
	0xee, 0x59, 0x5a, 0xb6, 0xe8, 0x0d, 0x48, 0xb3, 0x0f, 0x2f, 0x07, 0x0b, 0x36, 0x5d, 0xc2, 0xe4,
	0xaa, 0xee, 0x5d, 0x97, 0xe1, 0xf4, 0x33, 0x16, 0x00, 0x97, 0xfd, 0xda, 0xe6, 0xed, 0x07, 0x47,
	0x70, 0xdf, 0xb4, 0xff, 0x48, 0x61, 0xf5, 0x46, 0x8a, 0xac, 0xa8, 0x90, 0x66, 0xa4, 0x3f, 0x8e,
	0x8f, 0x80, 0x4b, 0x85, 0x55, 0x42, 0x63, 0x92, 0xac, 0x2c, 0x45, 0xb3, 0x39, 0x8c, 0xc7, 0xe6,
	0x84, 0x1c, 0x9d, 0x7b, 0xe9, 0xff, 0xd8, 0xcc, 0xd8, 0xcf, 0xcd, 0x8c, 0xfd, 0xda, 0xcc, 0xd8,
	0xf7, 0xdf, 0xb3, 0x1b, 0x87, 0xec, 0xd3, 0xa8, 0xff, 0x0f, 0x64, 0x3b, 0xb4, 0x3c, 0xfb, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x6e, 0xe6, 0xf2, 0x16, 0x75, 0x03, 0x00, 0x00,
}
