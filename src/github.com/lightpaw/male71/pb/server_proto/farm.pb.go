// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/server_proto/farm.proto
// DO NOT EDIT!

package server_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto7 "github.com/lightpaw/male7/pb/shared_proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 每个玩家自己的农场
type HeroFarmServerProto struct {
	HeroId       int64                       `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	HeroName     string                      `protobuf:"bytes,4,opt,name=hero_name,json=heroName,proto3" json:"hero_name,omitempty"`
	GuildFlag    string                      `protobuf:"bytes,5,opt,name=guild_flag,json=guildFlag,proto3" json:"guild_flag,omitempty"`
	FarmCube     []*proto7.FarmCubeProto     `protobuf:"bytes,2,rep,name=farm_cube,json=farmCube" json:"farm_cube,omitempty"`
	ReservedCube []*proto7.FarmCubeProto     `protobuf:"bytes,3,rep,name=reserved_cube,json=reservedCube" json:"reserved_cube,omitempty"`
	Log          []*proto7.FarmStealLogProto `protobuf:"bytes,6,rep,name=log" json:"log,omitempty"`
}

func (m *HeroFarmServerProto) Reset()                    { *m = HeroFarmServerProto{} }
func (m *HeroFarmServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroFarmServerProto) ProtoMessage()               {}
func (*HeroFarmServerProto) Descriptor() ([]byte, []int) { return fileDescriptorFarm, []int{0} }

func (m *HeroFarmServerProto) GetHeroId() int64 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *HeroFarmServerProto) GetHeroName() string {
	if m != nil {
		return m.HeroName
	}
	return ""
}

func (m *HeroFarmServerProto) GetGuildFlag() string {
	if m != nil {
		return m.GuildFlag
	}
	return ""
}

func (m *HeroFarmServerProto) GetFarmCube() []*proto7.FarmCubeProto {
	if m != nil {
		return m.FarmCube
	}
	return nil
}

func (m *HeroFarmServerProto) GetReservedCube() []*proto7.FarmCubeProto {
	if m != nil {
		return m.ReservedCube
	}
	return nil
}

func (m *HeroFarmServerProto) GetLog() []*proto7.FarmStealLogProto {
	if m != nil {
		return m.Log
	}
	return nil
}

func init() {
	proto.RegisterType((*HeroFarmServerProto)(nil), "proto.HeroFarmServerProto")
}
func (m *HeroFarmServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroFarmServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.HeroId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintFarm(dAtA, i, uint64(m.HeroId))
	}
	if len(m.FarmCube) > 0 {
		for _, msg := range m.FarmCube {
			dAtA[i] = 0x12
			i++
			i = encodeVarintFarm(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ReservedCube) > 0 {
		for _, msg := range m.ReservedCube {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintFarm(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.HeroName) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintFarm(dAtA, i, uint64(len(m.HeroName)))
		i += copy(dAtA[i:], m.HeroName)
	}
	if len(m.GuildFlag) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintFarm(dAtA, i, uint64(len(m.GuildFlag)))
		i += copy(dAtA[i:], m.GuildFlag)
	}
	if len(m.Log) > 0 {
		for _, msg := range m.Log {
			dAtA[i] = 0x32
			i++
			i = encodeVarintFarm(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeFixed64Farm(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Farm(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintFarm(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *HeroFarmServerProto) Size() (n int) {
	var l int
	_ = l
	if m.HeroId != 0 {
		n += 1 + sovFarm(uint64(m.HeroId))
	}
	if len(m.FarmCube) > 0 {
		for _, e := range m.FarmCube {
			l = e.Size()
			n += 1 + l + sovFarm(uint64(l))
		}
	}
	if len(m.ReservedCube) > 0 {
		for _, e := range m.ReservedCube {
			l = e.Size()
			n += 1 + l + sovFarm(uint64(l))
		}
	}
	l = len(m.HeroName)
	if l > 0 {
		n += 1 + l + sovFarm(uint64(l))
	}
	l = len(m.GuildFlag)
	if l > 0 {
		n += 1 + l + sovFarm(uint64(l))
	}
	if len(m.Log) > 0 {
		for _, e := range m.Log {
			l = e.Size()
			n += 1 + l + sovFarm(uint64(l))
		}
	}
	return n
}

func sovFarm(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozFarm(x uint64) (n int) {
	return sovFarm(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HeroFarmServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFarm
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroFarmServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroFarmServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroId", wireType)
			}
			m.HeroId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeroId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FarmCube", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFarm
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FarmCube = append(m.FarmCube, &proto7.FarmCubeProto{})
			if err := m.FarmCube[len(m.FarmCube)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservedCube", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFarm
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReservedCube = append(m.ReservedCube, &proto7.FarmCubeProto{})
			if err := m.ReservedCube[len(m.ReservedCube)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeroName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFarm
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeroName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildFlag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFarm
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildFlag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Log", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFarm
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Log = append(m.Log, &proto7.FarmStealLogProto{})
			if err := m.Log[len(m.Log)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFarm(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFarm
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFarm(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFarm
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFarm
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthFarm
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowFarm
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipFarm(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthFarm = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFarm   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/server_proto/farm.proto", fileDescriptorFarm)
}

var fileDescriptorFarm = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xcd, 0xd6, 0xad, 0xdb, 0xb8, 0x5e, 0xaa, 0x60, 0x50, 0x2c, 0xc5, 0x53, 0xf1, 0xd0,
	0xe2, 0x1f, 0x10, 0xaf, 0x0a, 0xcb, 0x0a, 0x22, 0xd2, 0xbd, 0x79, 0x29, 0xe9, 0x76, 0x9a, 0x16,
	0x12, 0x53, 0x62, 0xab, 0x2f, 0xe0, 0x43, 0xf8, 0x48, 0x1e, 0x7d, 0x04, 0xa9, 0x2f, 0x22, 0x99,
	0x2a, 0x2c, 0x08, 0x7a, 0x9a, 0xcc, 0x64, 0x7e, 0xdf, 0xf7, 0x31, 0xf4, 0x4c, 0xd4, 0x6d, 0xd5,
	0xe5, 0xf1, 0x52, 0xab, 0x44, 0xd6, 0xa2, 0x6a, 0x1b, 0xfe, 0x9c, 0x28, 0x2e, 0xe1, 0x3c, 0x69,
	0xf2, 0xe4, 0x11, 0xcc, 0x13, 0x98, 0xac, 0x31, 0xba, 0xd5, 0x49, 0xc9, 0x8d, 0x8a, 0xf1, 0xe9,
	0x8f, 0xb1, 0xec, 0xfd, 0x03, 0x57, 0xdc, 0x40, 0xf1, 0x0b, 0x3e, 0x7c, 0x19, 0xd1, 0xed, 0x39,
	0x18, 0x3d, 0xe3, 0x46, 0x2d, 0xd0, 0xe0, 0x0e, 0x45, 0x77, 0xe9, 0x46, 0x05, 0x46, 0x67, 0x75,
	0xc1, 0x48, 0x48, 0x22, 0x27, 0x75, 0x6d, 0x7b, 0x5d, 0xf8, 0xc7, 0xd4, 0xb3, 0x78, 0xb6, 0xec,
	0x72, 0x60, 0xa3, 0xd0, 0x89, 0x36, 0x4f, 0x76, 0x06, 0xad, 0xd8, 0x6a, 0x5c, 0x75, 0x39, 0xa0,
	0x42, 0x3a, 0x29, 0xbf, 0x5b, 0xff, 0x82, 0x6e, 0x19, 0xc0, 0xf4, 0xc5, 0x80, 0x39, 0x7f, 0x60,
	0xd3, 0x9f, 0x55, 0x44, 0xf7, 0xa9, 0x87, 0x31, 0x1e, 0xb8, 0x02, 0xb6, 0x1e, 0x92, 0xc8, 0x4b,
	0x27, 0x76, 0x70, 0xcb, 0x15, 0xf8, 0x07, 0x94, 0x8a, 0xae, 0x96, 0x45, 0x56, 0x4a, 0x2e, 0xd8,
	0x18, 0x7f, 0x3d, 0x9c, 0xcc, 0x24, 0x17, 0xfe, 0x11, 0x75, 0xa4, 0x16, 0xcc, 0x45, 0x33, 0xb6,
	0x62, 0xb6, 0x68, 0x81, 0xcb, 0x1b, 0x2d, 0x06, 0x43, 0xbb, 0x74, 0x19, 0xbe, 0xf5, 0x01, 0x79,
	0xef, 0x03, 0xf2, 0xd1, 0x07, 0xe4, 0xf5, 0x33, 0x58, 0x9b, 0x93, 0xfb, 0xe9, 0xea, 0xc1, 0x73,
	0x17, 0xcb, 0xe9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0x41, 0xa2, 0x0b, 0xa4, 0x01, 0x00,
	0x00,
}
