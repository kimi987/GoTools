// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/server_proto/hero_gen.proto
// DO NOT EDIT!

package server_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HeroGenServerProto struct {
	Xuanyuan      *HeroGenXuanyuanServerProto      `protobuf:"bytes,1,opt,name=xuanyuan" json:"xuanyuan,omitempty"`
	MiscData      *HeroGenMiscDataServerProto      `protobuf:"bytes,2,opt,name=misc_data,json=miscData" json:"misc_data,omitempty"`
	FarmExtra     *HeroGenFarmExtraServerProto     `protobuf:"bytes,3,opt,name=farm_extra,json=farmExtra" json:"farm_extra,omitempty"`
	Country       *HeroGenCountryServerProto       `protobuf:"bytes,4,opt,name=country" json:"country,omitempty"`
	Shop          *HeroGenShopServerProto          `protobuf:"bytes,5,opt,name=shop" json:"shop,omitempty"`
	GuildWorkshop *HeroGenGuildWorkshopServerProto `protobuf:"bytes,6,opt,name=guild_workshop,json=guildWorkshop" json:"guild_workshop,omitempty"`
	Product       *HeroGenProductServerProto       `protobuf:"bytes,7,opt,name=product" json:"product,omitempty"`
}

func (m *HeroGenServerProto) Reset()                    { *m = HeroGenServerProto{} }
func (m *HeroGenServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenServerProto) ProtoMessage()               {}
func (*HeroGenServerProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{0} }

func (m *HeroGenServerProto) GetXuanyuan() *HeroGenXuanyuanServerProto {
	if m != nil {
		return m.Xuanyuan
	}
	return nil
}

func (m *HeroGenServerProto) GetMiscData() *HeroGenMiscDataServerProto {
	if m != nil {
		return m.MiscData
	}
	return nil
}

func (m *HeroGenServerProto) GetFarmExtra() *HeroGenFarmExtraServerProto {
	if m != nil {
		return m.FarmExtra
	}
	return nil
}

func (m *HeroGenServerProto) GetCountry() *HeroGenCountryServerProto {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *HeroGenServerProto) GetShop() *HeroGenShopServerProto {
	if m != nil {
		return m.Shop
	}
	return nil
}

func (m *HeroGenServerProto) GetGuildWorkshop() *HeroGenGuildWorkshopServerProto {
	if m != nil {
		return m.GuildWorkshop
	}
	return nil
}

func (m *HeroGenServerProto) GetProduct() *HeroGenProductServerProto {
	if m != nil {
		return m.Product
	}
	return nil
}

type HeroGenXuanyuanServerProto struct {
	ChallengeTarget    []int64 `protobuf:"varint,1,rep,packed,name=challenge_target,json=challengeTarget" json:"challenge_target,omitempty"`
	Score              uint64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	LostScore          uint64  `protobuf:"varint,3,opt,name=lost_score,json=lostScore,proto3" json:"lost_score,omitempty"`
	Win                uint64  `protobuf:"varint,4,opt,name=win,proto3" json:"win,omitempty"`
	Lose               uint64  `protobuf:"varint,5,opt,name=lose,proto3" json:"lose,omitempty"`
	RankPrizeCollected bool    `protobuf:"varint,6,opt,name=rank_prize_collected,json=rankPrizeCollected,proto3" json:"rank_prize_collected,omitempty"`
	LastResetTime      int64   `protobuf:"varint,7,opt,name=last_reset_time,json=lastResetTime,proto3" json:"last_reset_time,omitempty"`
}

func (m *HeroGenXuanyuanServerProto) Reset()         { *m = HeroGenXuanyuanServerProto{} }
func (m *HeroGenXuanyuanServerProto) String() string { return proto.CompactTextString(m) }
func (*HeroGenXuanyuanServerProto) ProtoMessage()    {}
func (*HeroGenXuanyuanServerProto) Descriptor() ([]byte, []int) {
	return fileDescriptorHeroGen, []int{1}
}

func (m *HeroGenXuanyuanServerProto) GetChallengeTarget() []int64 {
	if m != nil {
		return m.ChallengeTarget
	}
	return nil
}

func (m *HeroGenXuanyuanServerProto) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *HeroGenXuanyuanServerProto) GetLostScore() uint64 {
	if m != nil {
		return m.LostScore
	}
	return 0
}

func (m *HeroGenXuanyuanServerProto) GetWin() uint64 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *HeroGenXuanyuanServerProto) GetLose() uint64 {
	if m != nil {
		return m.Lose
	}
	return 0
}

func (m *HeroGenXuanyuanServerProto) GetRankPrizeCollected() bool {
	if m != nil {
		return m.RankPrizeCollected
	}
	return false
}

func (m *HeroGenXuanyuanServerProto) GetLastResetTime() int64 {
	if m != nil {
		return m.LastResetTime
	}
	return 0
}

type HeroGenMiscDataServerProto struct {
	WeeklyResetTime             int64  `protobuf:"varint,14,opt,name=weekly_reset_time,json=weeklyResetTime,proto3" json:"weekly_reset_time,omitempty"`
	DailyResetTime              int64  `protobuf:"varint,1,opt,name=daily_reset_time,json=dailyResetTime,proto3" json:"daily_reset_time,omitempty"`
	SeasonResetTime             int64  `protobuf:"varint,2,opt,name=season_reset_time,json=seasonResetTime,proto3" json:"season_reset_time,omitempty"`
	DefenserNextFullSoldierTime int64  `protobuf:"varint,3,opt,name=defenser_next_full_soldier_time,json=defenserNextFullSoldierTime,proto3" json:"defenser_next_full_soldier_time,omitempty"`
	DefenserDontAutoFullSoldier bool   `protobuf:"varint,4,opt,name=defenser_dont_auto_full_soldier,json=defenserDontAutoFullSoldier,proto3" json:"defenser_dont_auto_full_soldier,omitempty"`
	IsRestoreProsperity         bool   `protobuf:"varint,5,opt,name=is_restore_prosperity,json=isRestoreProsperity,proto3" json:"is_restore_prosperity,omitempty"`
	NextCollectTaxTime          int64  `protobuf:"varint,6,opt,name=next_collect_tax_time,json=nextCollectTaxTime,proto3" json:"next_collect_tax_time,omitempty"`
	FishPoint                   uint64 `protobuf:"varint,7,opt,name=fish_point,json=fishPoint,proto3" json:"fish_point,omitempty"`
	FishCombo                   uint64 `protobuf:"varint,11,opt,name=fish_combo,json=fishCombo,proto3" json:"fish_combo,omitempty"`
	FishPointExchangeIndex      int32  `protobuf:"varint,10,opt,name=fishPointExchangeIndex,proto3" json:"fishPointExchangeIndex,omitempty"`
	BanChatEndTime              int64  `protobuf:"varint,8,opt,name=ban_chat_end_time,json=banChatEndTime,proto3" json:"ban_chat_end_time,omitempty"`
	BanLoginEndTime             int64  `protobuf:"varint,9,opt,name=ban_login_end_time,json=banLoginEndTime,proto3" json:"ban_login_end_time,omitempty"`
	DailyZeroResetTime          int64  `protobuf:"varint,12,opt,name=daily_zero_reset_time,json=dailyZeroResetTime,proto3" json:"daily_zero_reset_time,omitempty"`
	DailyMcResetTime            int64  `protobuf:"varint,13,opt,name=daily_mc_reset_time,json=dailyMcResetTime,proto3" json:"daily_mc_reset_time,omitempty"`
}

func (m *HeroGenMiscDataServerProto) Reset()         { *m = HeroGenMiscDataServerProto{} }
func (m *HeroGenMiscDataServerProto) String() string { return proto.CompactTextString(m) }
func (*HeroGenMiscDataServerProto) ProtoMessage()    {}
func (*HeroGenMiscDataServerProto) Descriptor() ([]byte, []int) {
	return fileDescriptorHeroGen, []int{2}
}

func (m *HeroGenMiscDataServerProto) GetWeeklyResetTime() int64 {
	if m != nil {
		return m.WeeklyResetTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetDailyResetTime() int64 {
	if m != nil {
		return m.DailyResetTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetSeasonResetTime() int64 {
	if m != nil {
		return m.SeasonResetTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetDefenserNextFullSoldierTime() int64 {
	if m != nil {
		return m.DefenserNextFullSoldierTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetDefenserDontAutoFullSoldier() bool {
	if m != nil {
		return m.DefenserDontAutoFullSoldier
	}
	return false
}

func (m *HeroGenMiscDataServerProto) GetIsRestoreProsperity() bool {
	if m != nil {
		return m.IsRestoreProsperity
	}
	return false
}

func (m *HeroGenMiscDataServerProto) GetNextCollectTaxTime() int64 {
	if m != nil {
		return m.NextCollectTaxTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetFishPoint() uint64 {
	if m != nil {
		return m.FishPoint
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetFishCombo() uint64 {
	if m != nil {
		return m.FishCombo
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetFishPointExchangeIndex() int32 {
	if m != nil {
		return m.FishPointExchangeIndex
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetBanChatEndTime() int64 {
	if m != nil {
		return m.BanChatEndTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetBanLoginEndTime() int64 {
	if m != nil {
		return m.BanLoginEndTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetDailyZeroResetTime() int64 {
	if m != nil {
		return m.DailyZeroResetTime
	}
	return 0
}

func (m *HeroGenMiscDataServerProto) GetDailyMcResetTime() int64 {
	if m != nil {
		return m.DailyMcResetTime
	}
	return 0
}

type HeroGenFarmExtraServerProto struct {
	DailyStealGold  int32 `protobuf:"varint,1,opt,name=daily_steal_gold,json=dailyStealGold,proto3" json:"daily_steal_gold,omitempty"`
	DailyStealStone int32 `protobuf:"varint,2,opt,name=daily_steal_stone,json=dailyStealStone,proto3" json:"daily_steal_stone,omitempty"`
}

func (m *HeroGenFarmExtraServerProto) Reset()         { *m = HeroGenFarmExtraServerProto{} }
func (m *HeroGenFarmExtraServerProto) String() string { return proto.CompactTextString(m) }
func (*HeroGenFarmExtraServerProto) ProtoMessage()    {}
func (*HeroGenFarmExtraServerProto) Descriptor() ([]byte, []int) {
	return fileDescriptorHeroGen, []int{3}
}

func (m *HeroGenFarmExtraServerProto) GetDailyStealGold() int32 {
	if m != nil {
		return m.DailyStealGold
	}
	return 0
}

func (m *HeroGenFarmExtraServerProto) GetDailyStealStone() int32 {
	if m != nil {
		return m.DailyStealStone
	}
	return 0
}

type HeroGenCountryServerProto struct {
	CountryId            uint64 `protobuf:"varint,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	NewUserExpiredTime   int64  `protobuf:"varint,2,opt,name=new_user_expired_time,json=newUserExpiredTime,proto3" json:"new_user_expired_time,omitempty"`
	NormalExpiredTime    int64  `protobuf:"varint,3,opt,name=normal_expired_time,json=normalExpiredTime,proto3" json:"normal_expired_time,omitempty"`
	AppointOnSameDay     bool   `protobuf:"varint,4,opt,name=appoint_on_same_day,json=appointOnSameDay,proto3" json:"appoint_on_same_day,omitempty"`
	DailySalaryCollected bool   `protobuf:"varint,5,opt,name=daily_salary_collected,json=dailySalaryCollected,proto3" json:"daily_salary_collected,omitempty"`
}

func (m *HeroGenCountryServerProto) Reset()                    { *m = HeroGenCountryServerProto{} }
func (m *HeroGenCountryServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenCountryServerProto) ProtoMessage()               {}
func (*HeroGenCountryServerProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{4} }

func (m *HeroGenCountryServerProto) GetCountryId() uint64 {
	if m != nil {
		return m.CountryId
	}
	return 0
}

func (m *HeroGenCountryServerProto) GetNewUserExpiredTime() int64 {
	if m != nil {
		return m.NewUserExpiredTime
	}
	return 0
}

func (m *HeroGenCountryServerProto) GetNormalExpiredTime() int64 {
	if m != nil {
		return m.NormalExpiredTime
	}
	return 0
}

func (m *HeroGenCountryServerProto) GetAppointOnSameDay() bool {
	if m != nil {
		return m.AppointOnSameDay
	}
	return false
}

func (m *HeroGenCountryServerProto) GetDailySalaryCollected() bool {
	if m != nil {
		return m.DailySalaryCollected
	}
	return false
}

type HeroGenShopServerProto struct {
	BlackMarketDailyRefreshTimes uint64 `protobuf:"varint,1,opt,name=black_market_daily_refresh_times,json=blackMarketDailyRefreshTimes,proto3" json:"black_market_daily_refresh_times,omitempty"`
	BlackMarketNextRefreshTime   int64  `protobuf:"varint,2,opt,name=black_market_next_refresh_time,json=blackMarketNextRefreshTime,proto3" json:"black_market_next_refresh_time,omitempty"`
}

func (m *HeroGenShopServerProto) Reset()                    { *m = HeroGenShopServerProto{} }
func (m *HeroGenShopServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenShopServerProto) ProtoMessage()               {}
func (*HeroGenShopServerProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{5} }

func (m *HeroGenShopServerProto) GetBlackMarketDailyRefreshTimes() uint64 {
	if m != nil {
		return m.BlackMarketDailyRefreshTimes
	}
	return 0
}

func (m *HeroGenShopServerProto) GetBlackMarketNextRefreshTime() int64 {
	if m != nil {
		return m.BlackMarketNextRefreshTime
	}
	return 0
}

type HeroGenGuildWorkshopServerProto struct {
	DailyBuildTimes uint64 `protobuf:"varint,1,opt,name=daily_build_times,json=dailyBuildTimes,proto3" json:"daily_build_times,omitempty"`
	DailyHurtTimes  uint64 `protobuf:"varint,3,opt,name=daily_hurt_times,json=dailyHurtTimes,proto3" json:"daily_hurt_times,omitempty"`
	NextHurtTime    int64  `protobuf:"varint,4,opt,name=next_hurt_time,json=nextHurtTime,proto3" json:"next_hurt_time,omitempty"`
}

func (m *HeroGenGuildWorkshopServerProto) Reset()         { *m = HeroGenGuildWorkshopServerProto{} }
func (m *HeroGenGuildWorkshopServerProto) String() string { return proto.CompactTextString(m) }
func (*HeroGenGuildWorkshopServerProto) ProtoMessage()    {}
func (*HeroGenGuildWorkshopServerProto) Descriptor() ([]byte, []int) {
	return fileDescriptorHeroGen, []int{6}
}

func (m *HeroGenGuildWorkshopServerProto) GetDailyBuildTimes() uint64 {
	if m != nil {
		return m.DailyBuildTimes
	}
	return 0
}

func (m *HeroGenGuildWorkshopServerProto) GetDailyHurtTimes() uint64 {
	if m != nil {
		return m.DailyHurtTimes
	}
	return 0
}

func (m *HeroGenGuildWorkshopServerProto) GetNextHurtTime() int64 {
	if m != nil {
		return m.NextHurtTime
	}
	return 0
}

type HeroGenProductServerProto struct {
	YuanbaoGiftLimit uint64 `protobuf:"varint,1,opt,name=yuanbao_gift_limit,json=yuanbaoGiftLimit,proto3" json:"yuanbao_gift_limit,omitempty"`
}

func (m *HeroGenProductServerProto) Reset()                    { *m = HeroGenProductServerProto{} }
func (m *HeroGenProductServerProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenProductServerProto) ProtoMessage()               {}
func (*HeroGenProductServerProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{7} }

func (m *HeroGenProductServerProto) GetYuanbaoGiftLimit() uint64 {
	if m != nil {
		return m.YuanbaoGiftLimit
	}
	return 0
}

func init() {
	proto.RegisterType((*HeroGenServerProto)(nil), "proto.HeroGenServerProto")
	proto.RegisterType((*HeroGenXuanyuanServerProto)(nil), "proto.HeroGenXuanyuanServerProto")
	proto.RegisterType((*HeroGenMiscDataServerProto)(nil), "proto.HeroGenMiscDataServerProto")
	proto.RegisterType((*HeroGenFarmExtraServerProto)(nil), "proto.HeroGenFarmExtraServerProto")
	proto.RegisterType((*HeroGenCountryServerProto)(nil), "proto.HeroGenCountryServerProto")
	proto.RegisterType((*HeroGenShopServerProto)(nil), "proto.HeroGenShopServerProto")
	proto.RegisterType((*HeroGenGuildWorkshopServerProto)(nil), "proto.HeroGenGuildWorkshopServerProto")
	proto.RegisterType((*HeroGenProductServerProto)(nil), "proto.HeroGenProductServerProto")
}
func (m *HeroGenServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Xuanyuan != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Xuanyuan.Size()))
		n1, err := m.Xuanyuan.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.MiscData != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.MiscData.Size()))
		n2, err := m.MiscData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.FarmExtra != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FarmExtra.Size()))
		n3, err := m.FarmExtra.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Country != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Country.Size()))
		n4, err := m.Country.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.Shop != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Shop.Size()))
		n5, err := m.Shop.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.GuildWorkshop != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.GuildWorkshop.Size()))
		n6, err := m.GuildWorkshop.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.Product != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Product.Size()))
		n7, err := m.Product.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func (m *HeroGenXuanyuanServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenXuanyuanServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ChallengeTarget) > 0 {
		dAtA9 := make([]byte, len(m.ChallengeTarget)*10)
		var j8 int
		for _, num1 := range m.ChallengeTarget {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		dAtA[i] = 0xa
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(j8))
		i += copy(dAtA[i:], dAtA9[:j8])
	}
	if m.Score != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Score))
	}
	if m.LostScore != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.LostScore))
	}
	if m.Win != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Win))
	}
	if m.Lose != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Lose))
	}
	if m.RankPrizeCollected {
		dAtA[i] = 0x30
		i++
		if m.RankPrizeCollected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.LastResetTime != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.LastResetTime))
	}
	return i, nil
}

func (m *HeroGenMiscDataServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenMiscDataServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyResetTime != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyResetTime))
	}
	if m.SeasonResetTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.SeasonResetTime))
	}
	if m.DefenserNextFullSoldierTime != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DefenserNextFullSoldierTime))
	}
	if m.DefenserDontAutoFullSoldier {
		dAtA[i] = 0x20
		i++
		if m.DefenserDontAutoFullSoldier {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsRestoreProsperity {
		dAtA[i] = 0x28
		i++
		if m.IsRestoreProsperity {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.NextCollectTaxTime != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NextCollectTaxTime))
	}
	if m.FishPoint != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishPoint))
	}
	if m.BanChatEndTime != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BanChatEndTime))
	}
	if m.BanLoginEndTime != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BanLoginEndTime))
	}
	if m.FishPointExchangeIndex != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishPointExchangeIndex))
	}
	if m.FishCombo != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishCombo))
	}
	if m.DailyZeroResetTime != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyZeroResetTime))
	}
	if m.DailyMcResetTime != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyMcResetTime))
	}
	if m.WeeklyResetTime != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.WeeklyResetTime))
	}
	return i, nil
}

func (m *HeroGenFarmExtraServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenFarmExtraServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyStealGold != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyStealGold))
	}
	if m.DailyStealStone != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyStealStone))
	}
	return i, nil
}

func (m *HeroGenCountryServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenCountryServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CountryId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.CountryId))
	}
	if m.NewUserExpiredTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NewUserExpiredTime))
	}
	if m.NormalExpiredTime != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NormalExpiredTime))
	}
	if m.AppointOnSameDay {
		dAtA[i] = 0x20
		i++
		if m.AppointOnSameDay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DailySalaryCollected {
		dAtA[i] = 0x28
		i++
		if m.DailySalaryCollected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *HeroGenShopServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenShopServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.BlackMarketDailyRefreshTimes != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BlackMarketDailyRefreshTimes))
	}
	if m.BlackMarketNextRefreshTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BlackMarketNextRefreshTime))
	}
	return i, nil
}

func (m *HeroGenGuildWorkshopServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenGuildWorkshopServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyBuildTimes != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyBuildTimes))
	}
	if m.DailyHurtTimes != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyHurtTimes))
	}
	if m.NextHurtTime != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NextHurtTime))
	}
	return i, nil
}

func (m *HeroGenProductServerProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenProductServerProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.YuanbaoGiftLimit != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.YuanbaoGiftLimit))
	}
	return i, nil
}

func encodeFixed64HeroGen(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32HeroGen(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintHeroGen(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *HeroGenServerProto) Size() (n int) {
	var l int
	_ = l
	if m.Xuanyuan != nil {
		l = m.Xuanyuan.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.MiscData != nil {
		l = m.MiscData.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.FarmExtra != nil {
		l = m.FarmExtra.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Country != nil {
		l = m.Country.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Shop != nil {
		l = m.Shop.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.GuildWorkshop != nil {
		l = m.GuildWorkshop.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Product != nil {
		l = m.Product.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	return n
}

func (m *HeroGenXuanyuanServerProto) Size() (n int) {
	var l int
	_ = l
	if len(m.ChallengeTarget) > 0 {
		l = 0
		for _, e := range m.ChallengeTarget {
			l += sovHeroGen(uint64(e))
		}
		n += 1 + sovHeroGen(uint64(l)) + l
	}
	if m.Score != 0 {
		n += 1 + sovHeroGen(uint64(m.Score))
	}
	if m.LostScore != 0 {
		n += 1 + sovHeroGen(uint64(m.LostScore))
	}
	if m.Win != 0 {
		n += 1 + sovHeroGen(uint64(m.Win))
	}
	if m.Lose != 0 {
		n += 1 + sovHeroGen(uint64(m.Lose))
	}
	if m.RankPrizeCollected {
		n += 2
	}
	if m.LastResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.LastResetTime))
	}
	return n
}

func (m *HeroGenMiscDataServerProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyResetTime))
	}
	if m.SeasonResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.SeasonResetTime))
	}
	if m.DefenserNextFullSoldierTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DefenserNextFullSoldierTime))
	}
	if m.DefenserDontAutoFullSoldier {
		n += 2
	}
	if m.IsRestoreProsperity {
		n += 2
	}
	if m.NextCollectTaxTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NextCollectTaxTime))
	}
	if m.FishPoint != 0 {
		n += 1 + sovHeroGen(uint64(m.FishPoint))
	}
	if m.BanChatEndTime != 0 {
		n += 1 + sovHeroGen(uint64(m.BanChatEndTime))
	}
	if m.BanLoginEndTime != 0 {
		n += 1 + sovHeroGen(uint64(m.BanLoginEndTime))
	}
	if m.FishPointExchangeIndex != 0 {
		n += 1 + sovHeroGen(uint64(m.FishPointExchangeIndex))
	}
	if m.FishCombo != 0 {
		n += 1 + sovHeroGen(uint64(m.FishCombo))
	}
	if m.DailyZeroResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyZeroResetTime))
	}
	if m.DailyMcResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyMcResetTime))
	}
	if m.WeeklyResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.WeeklyResetTime))
	}
	return n
}

func (m *HeroGenFarmExtraServerProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyStealGold != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyStealGold))
	}
	if m.DailyStealStone != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyStealStone))
	}
	return n
}

func (m *HeroGenCountryServerProto) Size() (n int) {
	var l int
	_ = l
	if m.CountryId != 0 {
		n += 1 + sovHeroGen(uint64(m.CountryId))
	}
	if m.NewUserExpiredTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NewUserExpiredTime))
	}
	if m.NormalExpiredTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NormalExpiredTime))
	}
	if m.AppointOnSameDay {
		n += 2
	}
	if m.DailySalaryCollected {
		n += 2
	}
	return n
}

func (m *HeroGenShopServerProto) Size() (n int) {
	var l int
	_ = l
	if m.BlackMarketDailyRefreshTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.BlackMarketDailyRefreshTimes))
	}
	if m.BlackMarketNextRefreshTime != 0 {
		n += 1 + sovHeroGen(uint64(m.BlackMarketNextRefreshTime))
	}
	return n
}

func (m *HeroGenGuildWorkshopServerProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyBuildTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyBuildTimes))
	}
	if m.DailyHurtTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyHurtTimes))
	}
	if m.NextHurtTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NextHurtTime))
	}
	return n
}

func (m *HeroGenProductServerProto) Size() (n int) {
	var l int
	_ = l
	if m.YuanbaoGiftLimit != 0 {
		n += 1 + sovHeroGen(uint64(m.YuanbaoGiftLimit))
	}
	return n
}

func sovHeroGen(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozHeroGen(x uint64) (n int) {
	return sovHeroGen(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HeroGenServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Xuanyuan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Xuanyuan == nil {
				m.Xuanyuan = &HeroGenXuanyuanServerProto{}
			}
			if err := m.Xuanyuan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiscData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiscData == nil {
				m.MiscData = &HeroGenMiscDataServerProto{}
			}
			if err := m.MiscData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FarmExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FarmExtra == nil {
				m.FarmExtra = &HeroGenFarmExtraServerProto{}
			}
			if err := m.FarmExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Country == nil {
				m.Country = &HeroGenCountryServerProto{}
			}
			if err := m.Country.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Shop == nil {
				m.Shop = &HeroGenShopServerProto{}
			}
			if err := m.Shop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildWorkshop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuildWorkshop == nil {
				m.GuildWorkshop = &HeroGenGuildWorkshopServerProto{}
			}
			if err := m.GuildWorkshop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Product == nil {
				m.Product = &HeroGenProductServerProto{}
			}
			if err := m.Product.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenXuanyuanServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenXuanyuanServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenXuanyuanServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHeroGen
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ChallengeTarget = append(m.ChallengeTarget, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowHeroGen
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthHeroGen
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowHeroGen
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ChallengeTarget = append(m.ChallengeTarget, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ChallengeTarget", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LostScore", wireType)
			}
			m.LostScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LostScore |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Win", wireType)
			}
			m.Win = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Win |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lose", wireType)
			}
			m.Lose = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lose |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankPrizeCollected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RankPrizeCollected = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastResetTime", wireType)
			}
			m.LastResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenMiscDataServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenMiscDataServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenMiscDataServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyResetTime", wireType)
			}
			m.DailyResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonResetTime", wireType)
			}
			m.SeasonResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenserNextFullSoldierTime", wireType)
			}
			m.DefenserNextFullSoldierTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefenserNextFullSoldierTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenserDontAutoFullSoldier", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefenserDontAutoFullSoldier = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRestoreProsperity", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsRestoreProsperity = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextCollectTaxTime", wireType)
			}
			m.NextCollectTaxTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextCollectTaxTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishPoint", wireType)
			}
			m.FishPoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishPoint |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BanChatEndTime", wireType)
			}
			m.BanChatEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BanChatEndTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BanLoginEndTime", wireType)
			}
			m.BanLoginEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BanLoginEndTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishPointExchangeIndex", wireType)
			}
			m.FishPointExchangeIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishPointExchangeIndex |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishCombo", wireType)
			}
			m.FishCombo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishCombo |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyZeroResetTime", wireType)
			}
			m.DailyZeroResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyZeroResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyMcResetTime", wireType)
			}
			m.DailyMcResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyMcResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeeklyResetTime", wireType)
			}
			m.WeeklyResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeeklyResetTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenFarmExtraServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenFarmExtraServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenFarmExtraServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyStealGold", wireType)
			}
			m.DailyStealGold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyStealGold |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyStealStone", wireType)
			}
			m.DailyStealStone = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyStealStone |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenCountryServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenCountryServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenCountryServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountryId", wireType)
			}
			m.CountryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CountryId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUserExpiredTime", wireType)
			}
			m.NewUserExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewUserExpiredTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NormalExpiredTime", wireType)
			}
			m.NormalExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NormalExpiredTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppointOnSameDay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AppointOnSameDay = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailySalaryCollected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DailySalaryCollected = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenShopServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenShopServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenShopServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackMarketDailyRefreshTimes", wireType)
			}
			m.BlackMarketDailyRefreshTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlackMarketDailyRefreshTimes |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackMarketNextRefreshTime", wireType)
			}
			m.BlackMarketNextRefreshTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlackMarketNextRefreshTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenGuildWorkshopServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenGuildWorkshopServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenGuildWorkshopServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyBuildTimes", wireType)
			}
			m.DailyBuildTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyBuildTimes |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyHurtTimes", wireType)
			}
			m.DailyHurtTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyHurtTimes |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHurtTime", wireType)
			}
			m.NextHurtTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextHurtTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenProductServerProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenProductServerProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenProductServerProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YuanbaoGiftLimit", wireType)
			}
			m.YuanbaoGiftLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.YuanbaoGiftLimit |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipHeroGen(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthHeroGen
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowHeroGen
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipHeroGen(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthHeroGen = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowHeroGen   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/server_proto/hero_gen.proto", fileDescriptorHeroGen)
}

var fileDescriptorHeroGen = []byte{
	// 1072 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xdf, 0x6e, 0x1b, 0xc5,
	0x17, 0xfe, 0x6d, 0x6d, 0xb7, 0xf1, 0x34, 0x7f, 0x27, 0x69, 0xe4, 0x5f, 0x4b, 0x52, 0x63, 0xa1,
	0x2a, 0x05, 0x9a, 0xd0, 0x82, 0x00, 0x21, 0x81, 0xd4, 0xfc, 0x8f, 0xd4, 0x40, 0xb4, 0x0e, 0x02,
	0xf5, 0x66, 0x34, 0xde, 0x1d, 0x7b, 0x47, 0x99, 0x9d, 0x59, 0xcd, 0xcc, 0x62, 0xbb, 0x97, 0x3c,
	0x05, 0x37, 0xdc, 0xf1, 0x22, 0xdc, 0x71, 0xd9, 0x47, 0x40, 0xe1, 0x35, 0xb8, 0x40, 0x73, 0x66,
	0xbd, 0xde, 0x55, 0x13, 0xb8, 0xb2, 0x7d, 0xbe, 0xef, 0x3b, 0x7b, 0xe6, 0x9c, 0x6f, 0xce, 0x1a,
	0x7d, 0x39, 0xe2, 0x36, 0xc9, 0x07, 0xbb, 0x91, 0x4a, 0xf7, 0x04, 0x1f, 0x25, 0x36, 0xa3, 0xe3,
	0xbd, 0x94, 0x0a, 0xf6, 0xc5, 0x5e, 0x36, 0xd8, 0x33, 0x4c, 0xff, 0xc4, 0x34, 0xc9, 0xb4, 0xb2,
	0x6a, 0x2f, 0x61, 0x5a, 0x91, 0x11, 0x93, 0xbb, 0xf0, 0x13, 0xb7, 0xe0, 0xa3, 0xf7, 0xb6, 0x81,
	0xf0, 0x29, 0xd3, 0xea, 0x84, 0xc9, 0x3e, 0xb0, 0x2f, 0x00, 0xfd, 0x1a, 0x2d, 0x4c, 0x72, 0x2a,
	0xa7, 0x39, 0x95, 0x9d, 0xa0, 0x1b, 0xec, 0xdc, 0x7f, 0xf1, 0xbe, 0xd7, 0xed, 0x16, 0xe4, 0x1f,
	0x0b, 0xb4, 0x22, 0x0a, 0x4b, 0x09, 0xfe, 0x06, 0xb5, 0x53, 0x6e, 0x22, 0x12, 0x53, 0x4b, 0x3b,
	0x77, 0x6e, 0xd2, 0x9f, 0x73, 0x13, 0x1d, 0x52, 0x4b, 0x6b, 0xfa, 0xb4, 0x08, 0xe2, 0x97, 0x08,
	0x0d, 0xa9, 0x4e, 0x09, 0x9b, 0x58, 0x4d, 0x3b, 0x0d, 0x48, 0xd0, 0xab, 0x27, 0x38, 0xa6, 0x3a,
	0x3d, 0x72, 0x70, 0x35, 0x43, 0x7b, 0x38, 0x8b, 0xe2, 0xaf, 0xd0, 0xbd, 0x48, 0xe5, 0xd2, 0xea,
	0x69, 0xa7, 0x09, 0xfa, 0x6e, 0x5d, 0x7f, 0xe0, 0xc1, 0xaa, 0x7a, 0x26, 0xc0, 0xcf, 0x51, 0xd3,
	0x24, 0x2a, 0xeb, 0xb4, 0x40, 0xb8, 0x55, 0x17, 0xf6, 0x13, 0x95, 0x55, 0x55, 0x40, 0xc5, 0xe7,
	0x68, 0x79, 0x94, 0x73, 0x11, 0x93, 0xb1, 0xd2, 0x57, 0x20, 0xbe, 0x0b, 0xe2, 0x27, 0x75, 0xf1,
	0x89, 0xe3, 0xfc, 0x50, 0x50, 0xaa, 0x59, 0x96, 0x46, 0x55, 0xc4, 0x55, 0x9f, 0x69, 0x15, 0xe7,
	0x91, 0xed, 0xdc, 0xbb, 0xa9, 0xfa, 0x0b, 0x0f, 0xd6, 0xaa, 0x2f, 0x04, 0xbd, 0xbf, 0x03, 0xf4,
	0xf0, 0xf6, 0x29, 0xe1, 0xa7, 0x68, 0x35, 0x4a, 0xa8, 0x10, 0x4c, 0x8e, 0x18, 0xb1, 0x54, 0x8f,
	0x98, 0xed, 0x04, 0xdd, 0xc6, 0x4e, 0x23, 0x5c, 0x29, 0xe3, 0x97, 0x10, 0xc6, 0x1b, 0xa8, 0x65,
	0x22, 0xa5, 0x19, 0x8c, 0xb0, 0x19, 0xfa, 0x1f, 0x78, 0x0b, 0x21, 0xa1, 0x8c, 0x25, 0x1e, 0x6a,
	0x00, 0xd4, 0x76, 0x91, 0x3e, 0xc0, 0xab, 0xa8, 0x31, 0xe6, 0x12, 0x9a, 0xde, 0x0c, 0xdd, 0x57,
	0x8c, 0x51, 0x53, 0x28, 0xc3, 0xa0, 0x9d, 0xcd, 0x10, 0xbe, 0xe3, 0x4f, 0xd0, 0x86, 0xa6, 0xf2,
	0x8a, 0x64, 0x9a, 0xbf, 0x61, 0x24, 0x52, 0x42, 0xb0, 0xc8, 0xb2, 0x18, 0xba, 0xb6, 0x10, 0x62,
	0x87, 0x5d, 0x38, 0xe8, 0x60, 0x86, 0xe0, 0x27, 0x68, 0x45, 0x50, 0x63, 0x89, 0x66, 0x86, 0x59,
	0x62, 0x79, 0xca, 0xa0, 0x35, 0x8d, 0x70, 0xc9, 0x85, 0x43, 0x17, 0xbd, 0xe4, 0x29, 0xeb, 0xfd,
	0xde, 0x2a, 0x8f, 0x7f, 0x83, 0xc9, 0xf0, 0x0e, 0x5a, 0x8d, 0x29, 0x17, 0xd3, 0x6a, 0x9e, 0x00,
	0xf2, 0x2c, 0x43, 0xbc, 0x4c, 0x84, 0x3f, 0x44, 0x6b, 0x86, 0x51, 0xa3, 0x64, 0x95, 0x7a, 0x07,
	0xa8, 0x2b, 0x1e, 0x98, 0x73, 0x0f, 0xd1, 0xe3, 0x98, 0x0d, 0x99, 0x34, 0x4c, 0x13, 0xc9, 0x26,
	0x96, 0x0c, 0x73, 0x21, 0x88, 0x51, 0x22, 0xe6, 0x4c, 0x7b, 0x65, 0x03, 0x94, 0x8f, 0x66, 0xb4,
	0x6f, 0xd9, 0xc4, 0x1e, 0xe7, 0x42, 0xf4, 0x3d, 0xe7, 0x9d, 0x2c, 0xb1, 0x92, 0x96, 0xd0, 0xdc,
	0xaa, 0x5a, 0x2a, 0x68, 0xeb, 0xc2, 0x3c, 0xcb, 0xa1, 0x92, 0xf6, 0x65, 0x6e, 0x55, 0x25, 0x13,
	0x7e, 0x81, 0x1e, 0x70, 0xe3, 0x6a, 0xb6, 0x4a, 0x33, 0x77, 0xf9, 0x4d, 0xc6, 0x34, 0xb7, 0x53,
	0xe8, 0xff, 0x42, 0xb8, 0xce, 0x4d, 0xe8, 0xb1, 0x8b, 0x12, 0xc2, 0xcf, 0xd1, 0x03, 0x28, 0xbb,
	0x18, 0x04, 0xb1, 0x74, 0xe2, 0xab, 0xbe, 0x0b, 0x55, 0x63, 0x07, 0x16, 0xa3, 0xb8, 0xa4, 0x13,
	0x28, 0x76, 0x0b, 0xa1, 0x21, 0x37, 0x09, 0xc9, 0x14, 0x97, 0xde, 0xa5, 0xcd, 0xb0, 0xed, 0x22,
	0x17, 0x2e, 0x80, 0x9f, 0xa2, 0xb5, 0x01, 0x95, 0x24, 0x4a, 0xa8, 0x25, 0x4c, 0xc6, 0x3e, 0xdb,
	0x82, 0x6f, 0xf4, 0x80, 0xca, 0x83, 0x84, 0xda, 0x23, 0x19, 0x43, 0xa6, 0x8f, 0x10, 0x76, 0x54,
	0xa1, 0x46, 0x5c, 0xce, 0xb9, 0x6d, 0xdf, 0xe9, 0x01, 0x95, 0xaf, 0x1c, 0x30, 0x23, 0x7f, 0x8e,
	0x36, 0xcb, 0x87, 0x1c, 0x4d, 0xa2, 0x84, 0xca, 0x11, 0x3b, 0x93, 0x31, 0x9b, 0x74, 0x50, 0x37,
	0xd8, 0x69, 0x85, 0xb7, 0xa0, 0x65, 0xb9, 0x91, 0x4a, 0x07, 0xaa, 0x73, 0x7f, 0x5e, 0xee, 0x81,
	0x0b, 0xb8, 0x06, 0x78, 0x5b, 0xbc, 0x71, 0x6b, 0xb2, 0x32, 0xf0, 0x45, 0xdf, 0x00, 0x00, 0x5f,
	0x33, 0xad, 0xe6, 0x33, 0x7f, 0x86, 0xd6, 0xbd, 0x24, 0x8d, 0xaa, 0x82, 0x25, 0x10, 0x78, 0x93,
	0x9d, 0x47, 0x35, 0x3b, 0x8d, 0x19, 0xbb, 0xaa, 0x3b, 0x6f, 0xd9, 0x1f, 0xd2, 0x03, 0x73, 0x0f,
	0x1b, 0xf4, 0xe8, 0x5f, 0xd6, 0xdc, 0xdc, 0xc3, 0xc6, 0x32, 0x2a, 0xc8, 0x48, 0x89, 0x18, 0x3c,
	0xdc, 0x2a, 0x3c, 0xdc, 0x77, 0xe1, 0x13, 0x25, 0x62, 0xf7, 0xd0, 0x2a, 0xd3, 0x58, 0x25, 0xbd,
	0x87, 0x5b, 0xe1, 0xca, 0x9c, 0xda, 0x77, 0xe1, 0xde, 0xcf, 0x77, 0xd0, 0xff, 0x6f, 0x5d, 0x8e,
	0xae, 0x7f, 0xc5, 0x7a, 0x24, 0xdc, 0x3f, 0xad, 0x19, 0xb6, 0x8b, 0xc8, 0x59, 0xec, 0x0d, 0x34,
	0x26, 0xb9, 0xb3, 0x2e, 0x9b, 0x64, 0x5c, 0xb3, 0xb8, 0x7a, 0x61, 0xb0, 0x64, 0xe3, 0xef, 0x0d,
	0xd3, 0x47, 0x1e, 0x82, 0x86, 0xec, 0xa2, 0x75, 0xa9, 0x74, 0x4a, 0x45, 0x5d, 0xe0, 0xef, 0xc9,
	0x9a, 0x87, 0xaa, 0xfc, 0x67, 0x68, 0x9d, 0x66, 0xe0, 0x36, 0xa2, 0x24, 0x31, 0x34, 0x65, 0x24,
	0xa6, 0xd3, 0xe2, 0x46, 0xac, 0x16, 0xd0, 0x77, 0xb2, 0x4f, 0x53, 0x76, 0x48, 0xa7, 0xf8, 0x33,
	0xb4, 0x59, 0x1c, 0x9d, 0x0a, 0xaa, 0xa7, 0x95, 0x1d, 0xe3, 0xef, 0xc1, 0x86, 0x3f, 0x3f, 0x80,
	0xe5, 0x96, 0xe9, 0xfd, 0x16, 0xa0, 0xcd, 0x9b, 0x17, 0x3d, 0x3e, 0x46, 0xdd, 0x81, 0xa0, 0xd1,
	0x15, 0x49, 0xa9, 0xbe, 0x62, 0x96, 0xcc, 0xd6, 0xc8, 0x50, 0x33, 0x93, 0x40, 0xed, 0xa6, 0xe8,
	0xcb, 0x7b, 0xc0, 0x3b, 0x07, 0xda, 0xa1, 0x5f, 0x2a, 0x40, 0x72, 0xc7, 0x30, 0x78, 0x1f, 0x6d,
	0xd7, 0xf2, 0xc0, 0xc5, 0xab, 0xa6, 0x29, 0x7a, 0xf6, 0xb0, 0x92, 0xc5, 0x6d, 0x8b, 0x4a, 0x92,
	0xde, 0xaf, 0x01, 0x7a, 0xfc, 0x1f, 0xaf, 0x94, 0xf9, 0xec, 0x07, 0xf0, 0x62, 0xaa, 0x16, 0xe8,
	0x67, 0xbf, 0xef, 0xe2, 0xbe, 0xa6, 0xd2, 0x51, 0x49, 0xae, 0x6d, 0x41, 0xf5, 0x9b, 0xdd, 0x3b,
	0xea, 0x34, 0xd7, 0xd6, 0x33, 0x3f, 0x40, 0xcb, 0x50, 0x70, 0x49, 0x84, 0x01, 0x34, 0xc2, 0x45,
	0x17, 0x9d, 0xd1, 0x7a, 0x67, 0xa5, 0x95, 0xde, 0x7d, 0x53, 0xe1, 0x8f, 0x11, 0x76, 0x2f, 0xa5,
	0x01, 0x55, 0x64, 0xc4, 0x87, 0x96, 0x08, 0x9e, 0x72, 0x5b, 0x54, 0xb6, 0x5a, 0x20, 0x27, 0x7c,
	0x68, 0x5f, 0xb9, 0xf8, 0x7e, 0xf7, 0x8f, 0xeb, 0xed, 0xe0, 0xed, 0xf5, 0x76, 0xf0, 0xe7, 0xf5,
	0x76, 0xf0, 0xcb, 0x5f, 0xdb, 0xff, 0x3b, 0x0d, 0x5e, 0x2f, 0x56, 0xff, 0xd9, 0x0c, 0xee, 0xc2,
	0xc7, 0xa7, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x71, 0x44, 0x52, 0xb4, 0x0d, 0x09, 0x00, 0x00,
}
