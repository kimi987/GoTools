// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/shared_proto/config.proto
// DO NOT EDIT!

package shared_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Config struct {
	//    DomesticConfig domestic = 1;
	//
	//    MilitaryConfig military = 2;
	Gen                 *ConfigGen                      `protobuf:"bytes,4,opt,name=gen" json:"gen,omitempty"`
	BuildingLayout      []*BuildingLayoutProto          `protobuf:"bytes,1,rep,name=building_layout,json=buildingLayout" json:"building_layout,omitempty"`
	BuildingData        []*BuildingDataProto            `protobuf:"bytes,2,rep,name=building_data,json=buildingData" json:"building_data,omitempty"`
	BuildingUnlockData  []*BuildingUnlockDataProto      `protobuf:"bytes,76,rep,name=building_unlock_data,json=buildingUnlockData" json:"building_unlock_data,omitempty"`
	TechnologyData      []*TechnologyDataProto          `protobuf:"bytes,3,rep,name=technology_data,json=technologyData" json:"technology_data,omitempty"`
	Soldier             []*SoldierLevelProto            `protobuf:"bytes,7,rep,name=soldier" json:"soldier,omitempty"`
	Hero                []*HeroLevelProto               `protobuf:"bytes,8,rep,name=hero" json:"hero,omitempty"`
	GuildLevel          []*GuildLevelProto              `protobuf:"bytes,9,rep,name=guild_level,json=guildLevel" json:"guild_level,omitempty"`
	GuildClassLevel     []*GuildClassLevelProto         `protobuf:"bytes,10,rep,name=guild_class_level,json=guildClassLevel" json:"guild_class_level,omitempty"`
	GuildClassTitle     []*GuildClassTitleDataProto     `protobuf:"bytes,37,rep,name=guild_class_title,json=guildClassTitle" json:"guild_class_title,omitempty"`
	GuildDonate         []*GuildDonateProto             `protobuf:"bytes,31,rep,name=guild_donate,json=guildDonate" json:"guild_donate,omitempty"`
	GuildTarget         []*GuildTargetProto             `protobuf:"bytes,43,rep,name=guild_target,json=guildTarget" json:"guild_target,omitempty"`
	GuildEventPrize     []*GuildEventPrizeDataProto     `protobuf:"bytes,85,rep,name=guild_event_prize,json=guildEventPrize" json:"guild_event_prize,omitempty"`
	GuildBigBox         []*GuildBigBoxDataProto         `protobuf:"bytes,86,rep,name=guild_big_box,json=guildBigBox" json:"guild_big_box,omitempty"`
	GuildTechnology     []*GuildTechnologyDataProto     `protobuf:"bytes,97,rep,name=guild_technology,json=guildTechnology" json:"guild_technology,omitempty"`
	GuildPermissionShow []*GuildPermissionShowProto     `protobuf:"bytes,98,rep,name=guild_permission_show,json=guildPermissionShow" json:"guild_permission_show,omitempty"`
	GuildPrestigePrize  []*GuildPrestigePrizeDataProto  `protobuf:"bytes,123,rep,name=guild_prestige_prize,json=guildPrestigePrize" json:"guild_prestige_prize,omitempty"`
	GuildTaskEvaluate   []*GuildTaskEvaluateDataProto   `protobuf:"bytes,5,rep,name=guild_task_evaluate,json=guildTaskEvaluate" json:"guild_task_evaluate,omitempty"`
	GuildTask           []*GuildTaskDataProto           `protobuf:"bytes,6,rep,name=guild_task,json=guildTask" json:"guild_task,omitempty"`
	BaseLevel           []*BaseLevelProto               `protobuf:"bytes,11,rep,name=base_level,json=baseLevel" json:"base_level,omitempty"`
	Goods               []*GoodsDataProto               `protobuf:"bytes,12,rep,name=goods" json:"goods,omitempty"`
	Equipment           []*EquipmentDataProto           `protobuf:"bytes,13,rep,name=equipment" json:"equipment,omitempty"`
	EquipmentQuality    []*EquipmentQualityProto        `protobuf:"bytes,14,rep,name=equipment_quality,json=equipmentQuality" json:"equipment_quality,omitempty"`
	EquipmentRefined    []*EquipmentRefinedProto        `protobuf:"bytes,15,rep,name=equipment_refined,json=equipmentRefined" json:"equipment_refined,omitempty"`
	EquipmentTaoz       []*EquipmentTaozProto           `protobuf:"bytes,16,rep,name=equipment_taoz,json=equipmentTaoz" json:"equipment_taoz,omitempty"`
	GoodsQuality        []*GoodsQualityProto            `protobuf:"bytes,125,rep,name=goods_quality,json=goodsQuality" json:"goods_quality,omitempty"`
	CaptainLevel        []*CaptainLevelProto            `protobuf:"bytes,17,rep,name=captain_level,json=captainLevel" json:"captain_level,omitempty"`
	CaptainAbility      []*CaptainAbilityProto          `protobuf:"bytes,18,rep,name=captain_ability,json=captainAbility" json:"captain_ability,omitempty"`
	TrainingLevel       []*TrainingLevelProto           `protobuf:"bytes,19,rep,name=training_level,json=trainingLevel" json:"training_level,omitempty"`
	CaptainRebirthLevel []*CaptainRebirthLevelProto     `protobuf:"bytes,30,rep,name=captain_rebirth_level,json=captainRebirthLevel" json:"captain_rebirth_level,omitempty"`
	Tower               []*TowerDataProto               `protobuf:"bytes,20,rep,name=tower" json:"tower,omitempty"`
	MainTask            []*TaskDataProto                `protobuf:"bytes,21,rep,name=main_task,json=mainTask" json:"main_task,omitempty"`
	BranchTask          []*TaskDataProto                `protobuf:"bytes,22,rep,name=branch_task,json=branchTask" json:"branch_task,omitempty"`
	BaYeTask            []*TaskDataProto                `protobuf:"bytes,67,rep,name=ba_ye_task,json=baYeTask" json:"ba_ye_task,omitempty"`
	BaYeStage           []*BaYeStageDataProto           `protobuf:"bytes,68,rep,name=ba_ye_stage,json=baYeStage" json:"ba_ye_stage,omitempty"`
	AchieveTask         []*TaskDataProto                `protobuf:"bytes,70,rep,name=achieve_task,json=achieveTask" json:"achieve_task,omitempty"`
	ActiveDegreeTask    []*TaskDataProto                `protobuf:"bytes,71,rep,name=active_degree_task,json=activeDegreeTask" json:"active_degree_task,omitempty"`
	ActiveDegreePrize   []*ActiveDegreePrizeProto       `protobuf:"bytes,72,rep,name=active_degree_prize,json=activeDegreePrize" json:"active_degree_prize,omitempty"`
	TaskBox             []*TaskBoxProto                 `protobuf:"bytes,23,rep,name=task_box,json=taskBox" json:"task_box,omitempty"`
	TaskMiscData        *TaskMiscDataProto              `protobuf:"bytes,96,opt,name=task_misc_data,json=taskMiscData" json:"task_misc_data,omitempty"`
	BwzlTask            []*TaskDataProto                `protobuf:"bytes,116,rep,name=bwzl_task,json=bwzlTask" json:"bwzl_task,omitempty"`
	BwzlPrize           []*BwzlPrizeDataProto           `protobuf:"bytes,117,rep,name=bwzl_prize,json=bwzlPrize" json:"bwzl_prize,omitempty"`
	CaptainSoulData     []*CaptainSoulDataProto         `protobuf:"bytes,24,rep,name=captain_soul_data,json=captainSoulData" json:"captain_soul_data,omitempty"`
	FishingShow         []*FishingShowProto             `protobuf:"bytes,25,rep,name=fishing_show,json=fishingShow" json:"fishing_show,omitempty"`
	FishingCost         []*FishingCostProto             `protobuf:"bytes,26,rep,name=fishing_cost,json=fishingCost" json:"fishing_cost,omitempty"`
	CaptainSoulFetters  []*CaptainSoulFettersProto      `protobuf:"bytes,27,rep,name=captain_soul_fetters,json=captainSoulFetters" json:"captain_soul_fetters,omitempty"`
	CaptainSoulMisc     *CaptainSoulMiscProto           `protobuf:"bytes,69,opt,name=captain_soul_misc,json=captainSoulMisc" json:"captain_soul_misc,omitempty"`
	TieJiangPuLevel     []*TieJiangPuLevelProto         `protobuf:"bytes,28,rep,name=tie_jiang_pu_level,json=tieJiangPuLevel" json:"tie_jiang_pu_level,omitempty"`
	EquipCombine        []*EquipCombineDataProto        `protobuf:"bytes,29,rep,name=equip_combine,json=equipCombine" json:"equip_combine,omitempty"`
	SpellConfig         []*SpellProto                   `protobuf:"bytes,32,rep,name=spell_config,json=spellConfig" json:"spell_config,omitempty"`
	Gem                 []*GemDataProto                 `protobuf:"bytes,33,rep,name=gem" json:"gem,omitempty"`
	GemSlot             []*GemSlotDataProto             `protobuf:"bytes,34,rep,name=gem_slot,json=gemSlot" json:"gem_slot,omitempty"`
	RaceData            []*RaceDataProto                `protobuf:"bytes,35,rep,name=race_data,json=raceData" json:"race_data,omitempty"`
	Shop                []*ShopProto                    `protobuf:"bytes,36,rep,name=shop" json:"shop,omitempty"`
	SecretTower         []*SecretTowerDataProto         `protobuf:"bytes,38,rep,name=secret_tower,json=secretTower" json:"secret_tower,omitempty"`
	SecretTowerMisc     *SecretTowerMiscProto           `protobuf:"bytes,39,opt,name=secret_tower_misc,json=secretTowerMisc" json:"secret_tower_misc,omitempty"`
	RegionData          []*RegionDataProto              `protobuf:"bytes,73,rep,name=region_data,json=regionData" json:"region_data,omitempty"`
	NpcBaseData         []*NpcBaseDataProto             `protobuf:"bytes,74,rep,name=npc_base_data,json=npcBaseData" json:"npc_base_data,omitempty"`
	MultiLevelNpcData   []*RegionMultiLevelNpcDataProto `protobuf:"bytes,87,rep,name=multi_level_npc_data,json=multiLevelNpcData" json:"multi_level_npc_data,omitempty"`
	MultiLevelNpcType   []*RegionMultiLevelNpcTypeProto `protobuf:"bytes,88,rep,name=multi_level_npc_type,json=multiLevelNpcType" json:"multi_level_npc_type,omitempty"`
	// 默认国家
	DefaultCountry    []*DefaultCountryProto    `protobuf:"bytes,42,rep,name=default_country,json=defaultCountry" json:"default_country,omitempty"`
	CountryMisc       *CountryMiscProto         `protobuf:"bytes,52,opt,name=country_misc,json=countryMisc" json:"country_misc,omitempty"`
	RankMisc          *RankMiscProto            `protobuf:"bytes,44,opt,name=rank_misc,json=rankMisc" json:"rank_misc,omitempty"`
	BaiZhanMisc       *BaiZhanMiscProto         `protobuf:"bytes,45,opt,name=bai_zhan_misc,json=baiZhanMisc" json:"bai_zhan_misc,omitempty"`
	JunXianLevel      []*JunXianLevelDataProto  `protobuf:"bytes,46,rep,name=jun_xian_level,json=junXianLevel" json:"jun_xian_level,omitempty"`
	JunXianLevelPrize []*JunXianLevelPrizeProto `protobuf:"bytes,47,rep,name=jun_xian_level_prize,json=junXianLevelPrize" json:"jun_xian_level_prize,omitempty"`
	DungeonChapter    []*DungeonChapterProto    `protobuf:"bytes,49,rep,name=dungeon_chapter,json=dungeonChapter" json:"dungeon_chapter,omitempty"`
	DungeonMisc       *DungeonMiscProto         `protobuf:"bytes,51,opt,name=dungeon_misc,json=dungeonMisc" json:"dungeon_misc,omitempty"`
	CityEventData     []*CityEventDataProto     `protobuf:"bytes,53,rep,name=city_event_data,json=cityEventData" json:"city_event_data,omitempty"`
	CityEventMisc     *CityEventMiscProto       `protobuf:"bytes,54,opt,name=city_event_misc,json=cityEventMisc" json:"city_event_misc,omitempty"`
	TagMisc           *TagMiscProto             `protobuf:"bytes,56,opt,name=tag_misc,json=tagMisc" json:"tag_misc,omitempty"`
	Strategy          []*StrategyDataProto      `protobuf:"bytes,57,rep,name=strategy" json:"strategy,omitempty"`
	CaptainGenerator  []*CaptainGeneratorProto  `protobuf:"bytes,58,rep,name=captain_generator,json=captainGenerator" json:"captain_generator,omitempty"`
	CaptainSeeker     []*CaptainSeekerProto     `protobuf:"bytes,91,rep,name=captain_seeker,json=captainSeeker" json:"captain_seeker,omitempty"`
	JiuGuanData       []*JiuGuanDataProto       `protobuf:"bytes,59,rep,name=jiu_guan_data,json=jiuGuanData" json:"jiu_guan_data,omitempty"`
	JiuGuanMisc       *JiuGuanMiscDataProto     `protobuf:"bytes,60,opt,name=jiu_guan_misc,json=jiuGuanMisc" json:"jiu_guan_misc,omitempty"`
	// 模块配置
	GoodsConfig          *GoodsConfigProto              `protobuf:"bytes,61,opt,name=goods_config,json=goodsConfig" json:"goods_config,omitempty"`
	MilitaryConfig       *MilitaryConfigProto           `protobuf:"bytes,62,opt,name=military_config,json=militaryConfig" json:"military_config,omitempty"`
	RegionConfig         *RegionConfigProto             `protobuf:"bytes,63,opt,name=region_config,json=regionConfig" json:"region_config,omitempty"`
	MiscConfig           *MiscConfigProto               `protobuf:"bytes,64,opt,name=misc_config,json=miscConfig" json:"misc_config,omitempty"`
	GuildConfig          *GuildConfigProto              `protobuf:"bytes,65,opt,name=guild_config,json=guildConfig" json:"guild_config,omitempty"`
	GradonConfig         *GradonConfigProto             `protobuf:"bytes,90,opt,name=gradon_config,json=gradonConfig" json:"gradon_config,omitempty"`
	JunYingLevelData     []*JunYingLevelDataProto       `protobuf:"bytes,66,rep,name=jun_ying_level_data,json=junYingLevelData" json:"jun_ying_level_data,omitempty"`
	JunYingMisc          *JunYingMiscProto              `protobuf:"bytes,92,opt,name=jun_ying_misc,json=junYingMisc" json:"jun_ying_misc,omitempty"`
	GuanFuLevelData      []*GuanFuLevelProto            `protobuf:"bytes,75,rep,name=guan_fu_level_data,json=guanFuLevelData" json:"guan_fu_level_data,omitempty"`
	FunctionOpenDatas    []*FunctionOpenDataProto       `protobuf:"bytes,77,rep,name=function_open_datas,json=functionOpenDatas" json:"function_open_datas,omitempty"`
	GuiZuLevelDatas      []*GuiZuLevelDataProto         `protobuf:"bytes,78,rep,name=gui_zu_level_datas,json=guiZuLevelDatas" json:"gui_zu_level_datas,omitempty"`
	DiaoKeMiscData       *DiaoKeMiscDataProto           `protobuf:"bytes,79,opt,name=diao_ke_misc_data,json=diaoKeMiscData" json:"diao_ke_misc_data,omitempty"`
	Icons                []*IconProto                   `protobuf:"bytes,80,rep,name=icons" json:"icons,omitempty"`
	PveTroopDatas        []*PveTroopDataProto           `protobuf:"bytes,81,rep,name=pve_troop_datas,json=pveTroopDatas" json:"pve_troop_datas,omitempty"`
	OuterCityDatas       []*OuterCityDataProto          `protobuf:"bytes,82,rep,name=outer_city_datas,json=outerCityDatas" json:"outer_city_datas,omitempty"`
	OuterCityLayoutDatas []*OuterCityLayoutDataProto    `protobuf:"bytes,83,rep,name=outer_city_layout_datas,json=outerCityLayoutDatas" json:"outer_city_layout_datas,omitempty"`
	CountdownPrizeDesc   []*CountdownPrizeDescDataProto `protobuf:"bytes,84,rep,name=countdown_prize_desc,json=countdownPrizeDesc" json:"countdown_prize_desc,omitempty"`
	TreasuryTreeData     []*TreasuryTreeDataProto       `protobuf:"bytes,89,rep,name=treasury_tree_data,json=treasuryTreeData" json:"treasury_tree_data,omitempty"`
	ZhengWuRefresh       []*ZhengWuRefreshDataProto     `protobuf:"bytes,93,rep,name=zheng_wu_refresh,json=zhengWuRefresh" json:"zheng_wu_refresh,omitempty"`
	ZhengWuMisc          *ZhengWuMiscProto              `protobuf:"bytes,94,opt,name=zheng_wu_misc,json=zhengWuMisc" json:"zheng_wu_misc,omitempty"`
	AchieveTaskStarPrize []*AchieveTaskStarPrizeProto   `protobuf:"bytes,95,rep,name=achieve_task_star_prize,json=achieveTaskStarPrize" json:"achieve_task_star_prize,omitempty"`
	ZhanJiangChapter     []*ZhanJiangChapterProto       `protobuf:"bytes,99,rep,name=zhan_jiang_chapter,json=zhanJiangChapter" json:"zhan_jiang_chapter,omitempty"`
	ZhanJiangMisc        *ZhanJiangMiscDataProto        `protobuf:"bytes,120,opt,name=zhan_jiang_misc,json=zhanJiangMisc" json:"zhan_jiang_misc,omitempty"`
	StrongerData         []*StrongerDataProto           `protobuf:"bytes,102,rep,name=stronger_data,json=strongerData" json:"stronger_data,omitempty"`
	Setting              []*StringPair                  `protobuf:"bytes,100,rep,name=setting" json:"setting,omitempty"`
	I18N                 []*I18NDataProto               `protobuf:"bytes,101,rep,name=i18n" json:"i18n,omitempty"`
	CaptainOfficial      []*CaptainOfficialProto        `protobuf:"bytes,103,rep,name=captain_official,json=captainOfficial" json:"captain_official,omitempty"`
	Question             []*QuestionProto               `protobuf:"bytes,104,rep,name=question" json:"question,omitempty"`
	QuestionSaying       []*QuestionSayingProto         `protobuf:"bytes,105,rep,name=question_saying,json=questionSaying" json:"question_saying,omitempty"`
	QuestionPrize        []*QuestionPrizeProto          `protobuf:"bytes,106,rep,name=question_prize,json=questionPrize" json:"question_prize,omitempty"`
	QuestionMisc         *QuestionMiscProto             `protobuf:"bytes,107,opt,name=question_misc,json=questionMisc" json:"question_misc,omitempty"`
	SurveyDatas          []*SurveyDataProto             `protobuf:"bytes,108,rep,name=survey_datas,json=surveyDatas" json:"survey_datas,omitempty"`
	AmountShowSortDatas  []*AmountShowSortProto         `protobuf:"bytes,109,rep,name=amount_show_sort_datas,json=amountShowSortDatas" json:"amount_show_sort_datas,omitempty"`
	ResistXiongNuMisc    *ResistXiongNuMiscProto        `protobuf:"bytes,110,opt,name=resist_xiong_nu_misc,json=resistXiongNuMisc" json:"resist_xiong_nu_misc,omitempty"`
	ResistXiongNuData    []*ResistXiongNuDataProto      `protobuf:"bytes,111,rep,name=resist_xiong_nu_data,json=resistXiongNuData" json:"resist_xiong_nu_data,omitempty"`
	ResistXiongNuScore   []*ResistXiongNuScoreProto     `protobuf:"bytes,112,rep,name=resist_xiong_nu_score,json=resistXiongNuScore" json:"resist_xiong_nu_score,omitempty"`
	WorkshopRefreshCosts []*WorkshopRefreshCostProto    `protobuf:"bytes,113,rep,name=workshop_refresh_costs,json=workshopRefreshCosts" json:"workshop_refresh_costs,omitempty"`
	Heads                []*HeadProto                   `protobuf:"bytes,114,rep,name=heads" json:"heads,omitempty"`
	Bodys                []*BodyProto                   `protobuf:"bytes,115,rep,name=bodys" json:"bodys,omitempty"`
	SeasonDatas          []*SeasonDataProto             `protobuf:"bytes,118,rep,name=season_datas,json=seasonDatas" json:"season_datas,omitempty"`
	SeasonMisc           *SeasonMiscProto               `protobuf:"bytes,119,opt,name=season_misc,json=seasonMisc" json:"season_misc,omitempty"`
	FarmResConfig        []*FarmResConfigProto          `protobuf:"bytes,121,rep,name=farm_res_config,json=farmResConfig" json:"farm_res_config,omitempty"`
	FarmMiscConfig       *FarmMiscConfigProto           `protobuf:"bytes,122,opt,name=farm_misc_config,json=farmMiscConfig" json:"farm_misc_config,omitempty"`
	DianquanMisc         *DianquanMiscProto             `protobuf:"bytes,124,opt,name=dianquan_misc,json=dianquanMisc" json:"dianquan_misc,omitempty"`
	HebiPrize            []*HebiPrizeProto              `protobuf:"bytes,128,rep,name=hebi_prize,json=hebiPrize" json:"hebi_prize,omitempty"`
	HebiMisc             *HebiMiscProto                 `protobuf:"bytes,129,opt,name=hebi_misc,json=hebiMisc" json:"hebi_misc,omitempty"`
	TeachData            []*TeachChapterDataProto       `protobuf:"bytes,130,rep,name=teach_data,json=teachData" json:"teach_data,omitempty"`
	TimeLimitGiftGroups  []*TimeLimitGiftGroupDataProto `protobuf:"bytes,131,rep,name=time_limit_gift_groups,json=timeLimitGiftGroups" json:"time_limit_gift_groups,omitempty"`
	RandomEvent          []*RandomEventDataProto        `protobuf:"bytes,135,rep,name=random_event,json=randomEvent" json:"random_event,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{0} }

func (m *Config) GetGen() *ConfigGen {
	if m != nil {
		return m.Gen
	}
	return nil
}

func (m *Config) GetBuildingLayout() []*BuildingLayoutProto {
	if m != nil {
		return m.BuildingLayout
	}
	return nil
}

func (m *Config) GetBuildingData() []*BuildingDataProto {
	if m != nil {
		return m.BuildingData
	}
	return nil
}

func (m *Config) GetBuildingUnlockData() []*BuildingUnlockDataProto {
	if m != nil {
		return m.BuildingUnlockData
	}
	return nil
}

func (m *Config) GetTechnologyData() []*TechnologyDataProto {
	if m != nil {
		return m.TechnologyData
	}
	return nil
}

func (m *Config) GetSoldier() []*SoldierLevelProto {
	if m != nil {
		return m.Soldier
	}
	return nil
}

func (m *Config) GetHero() []*HeroLevelProto {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *Config) GetGuildLevel() []*GuildLevelProto {
	if m != nil {
		return m.GuildLevel
	}
	return nil
}

func (m *Config) GetGuildClassLevel() []*GuildClassLevelProto {
	if m != nil {
		return m.GuildClassLevel
	}
	return nil
}

func (m *Config) GetGuildClassTitle() []*GuildClassTitleDataProto {
	if m != nil {
		return m.GuildClassTitle
	}
	return nil
}

func (m *Config) GetGuildDonate() []*GuildDonateProto {
	if m != nil {
		return m.GuildDonate
	}
	return nil
}

func (m *Config) GetGuildTarget() []*GuildTargetProto {
	if m != nil {
		return m.GuildTarget
	}
	return nil
}

func (m *Config) GetGuildEventPrize() []*GuildEventPrizeDataProto {
	if m != nil {
		return m.GuildEventPrize
	}
	return nil
}

func (m *Config) GetGuildBigBox() []*GuildBigBoxDataProto {
	if m != nil {
		return m.GuildBigBox
	}
	return nil
}

func (m *Config) GetGuildTechnology() []*GuildTechnologyDataProto {
	if m != nil {
		return m.GuildTechnology
	}
	return nil
}

func (m *Config) GetGuildPermissionShow() []*GuildPermissionShowProto {
	if m != nil {
		return m.GuildPermissionShow
	}
	return nil
}

func (m *Config) GetGuildPrestigePrize() []*GuildPrestigePrizeDataProto {
	if m != nil {
		return m.GuildPrestigePrize
	}
	return nil
}

func (m *Config) GetGuildTaskEvaluate() []*GuildTaskEvaluateDataProto {
	if m != nil {
		return m.GuildTaskEvaluate
	}
	return nil
}

func (m *Config) GetGuildTask() []*GuildTaskDataProto {
	if m != nil {
		return m.GuildTask
	}
	return nil
}

func (m *Config) GetBaseLevel() []*BaseLevelProto {
	if m != nil {
		return m.BaseLevel
	}
	return nil
}

func (m *Config) GetGoods() []*GoodsDataProto {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *Config) GetEquipment() []*EquipmentDataProto {
	if m != nil {
		return m.Equipment
	}
	return nil
}

func (m *Config) GetEquipmentQuality() []*EquipmentQualityProto {
	if m != nil {
		return m.EquipmentQuality
	}
	return nil
}

func (m *Config) GetEquipmentRefined() []*EquipmentRefinedProto {
	if m != nil {
		return m.EquipmentRefined
	}
	return nil
}

func (m *Config) GetEquipmentTaoz() []*EquipmentTaozProto {
	if m != nil {
		return m.EquipmentTaoz
	}
	return nil
}

func (m *Config) GetGoodsQuality() []*GoodsQualityProto {
	if m != nil {
		return m.GoodsQuality
	}
	return nil
}

func (m *Config) GetCaptainLevel() []*CaptainLevelProto {
	if m != nil {
		return m.CaptainLevel
	}
	return nil
}

func (m *Config) GetCaptainAbility() []*CaptainAbilityProto {
	if m != nil {
		return m.CaptainAbility
	}
	return nil
}

func (m *Config) GetTrainingLevel() []*TrainingLevelProto {
	if m != nil {
		return m.TrainingLevel
	}
	return nil
}

func (m *Config) GetCaptainRebirthLevel() []*CaptainRebirthLevelProto {
	if m != nil {
		return m.CaptainRebirthLevel
	}
	return nil
}

func (m *Config) GetTower() []*TowerDataProto {
	if m != nil {
		return m.Tower
	}
	return nil
}

func (m *Config) GetMainTask() []*TaskDataProto {
	if m != nil {
		return m.MainTask
	}
	return nil
}

func (m *Config) GetBranchTask() []*TaskDataProto {
	if m != nil {
		return m.BranchTask
	}
	return nil
}

func (m *Config) GetBaYeTask() []*TaskDataProto {
	if m != nil {
		return m.BaYeTask
	}
	return nil
}

func (m *Config) GetBaYeStage() []*BaYeStageDataProto {
	if m != nil {
		return m.BaYeStage
	}
	return nil
}

func (m *Config) GetAchieveTask() []*TaskDataProto {
	if m != nil {
		return m.AchieveTask
	}
	return nil
}

func (m *Config) GetActiveDegreeTask() []*TaskDataProto {
	if m != nil {
		return m.ActiveDegreeTask
	}
	return nil
}

func (m *Config) GetActiveDegreePrize() []*ActiveDegreePrizeProto {
	if m != nil {
		return m.ActiveDegreePrize
	}
	return nil
}

func (m *Config) GetTaskBox() []*TaskBoxProto {
	if m != nil {
		return m.TaskBox
	}
	return nil
}

func (m *Config) GetTaskMiscData() *TaskMiscDataProto {
	if m != nil {
		return m.TaskMiscData
	}
	return nil
}

func (m *Config) GetBwzlTask() []*TaskDataProto {
	if m != nil {
		return m.BwzlTask
	}
	return nil
}

func (m *Config) GetBwzlPrize() []*BwzlPrizeDataProto {
	if m != nil {
		return m.BwzlPrize
	}
	return nil
}

func (m *Config) GetCaptainSoulData() []*CaptainSoulDataProto {
	if m != nil {
		return m.CaptainSoulData
	}
	return nil
}

func (m *Config) GetFishingShow() []*FishingShowProto {
	if m != nil {
		return m.FishingShow
	}
	return nil
}

func (m *Config) GetFishingCost() []*FishingCostProto {
	if m != nil {
		return m.FishingCost
	}
	return nil
}

func (m *Config) GetCaptainSoulFetters() []*CaptainSoulFettersProto {
	if m != nil {
		return m.CaptainSoulFetters
	}
	return nil
}

func (m *Config) GetCaptainSoulMisc() *CaptainSoulMiscProto {
	if m != nil {
		return m.CaptainSoulMisc
	}
	return nil
}

func (m *Config) GetTieJiangPuLevel() []*TieJiangPuLevelProto {
	if m != nil {
		return m.TieJiangPuLevel
	}
	return nil
}

func (m *Config) GetEquipCombine() []*EquipCombineDataProto {
	if m != nil {
		return m.EquipCombine
	}
	return nil
}

func (m *Config) GetSpellConfig() []*SpellProto {
	if m != nil {
		return m.SpellConfig
	}
	return nil
}

func (m *Config) GetGem() []*GemDataProto {
	if m != nil {
		return m.Gem
	}
	return nil
}

func (m *Config) GetGemSlot() []*GemSlotDataProto {
	if m != nil {
		return m.GemSlot
	}
	return nil
}

func (m *Config) GetRaceData() []*RaceDataProto {
	if m != nil {
		return m.RaceData
	}
	return nil
}

func (m *Config) GetShop() []*ShopProto {
	if m != nil {
		return m.Shop
	}
	return nil
}

func (m *Config) GetSecretTower() []*SecretTowerDataProto {
	if m != nil {
		return m.SecretTower
	}
	return nil
}

func (m *Config) GetSecretTowerMisc() *SecretTowerMiscProto {
	if m != nil {
		return m.SecretTowerMisc
	}
	return nil
}

func (m *Config) GetRegionData() []*RegionDataProto {
	if m != nil {
		return m.RegionData
	}
	return nil
}

func (m *Config) GetNpcBaseData() []*NpcBaseDataProto {
	if m != nil {
		return m.NpcBaseData
	}
	return nil
}

func (m *Config) GetMultiLevelNpcData() []*RegionMultiLevelNpcDataProto {
	if m != nil {
		return m.MultiLevelNpcData
	}
	return nil
}

func (m *Config) GetMultiLevelNpcType() []*RegionMultiLevelNpcTypeProto {
	if m != nil {
		return m.MultiLevelNpcType
	}
	return nil
}

func (m *Config) GetDefaultCountry() []*DefaultCountryProto {
	if m != nil {
		return m.DefaultCountry
	}
	return nil
}

func (m *Config) GetCountryMisc() *CountryMiscProto {
	if m != nil {
		return m.CountryMisc
	}
	return nil
}

func (m *Config) GetRankMisc() *RankMiscProto {
	if m != nil {
		return m.RankMisc
	}
	return nil
}

func (m *Config) GetBaiZhanMisc() *BaiZhanMiscProto {
	if m != nil {
		return m.BaiZhanMisc
	}
	return nil
}

func (m *Config) GetJunXianLevel() []*JunXianLevelDataProto {
	if m != nil {
		return m.JunXianLevel
	}
	return nil
}

func (m *Config) GetJunXianLevelPrize() []*JunXianLevelPrizeProto {
	if m != nil {
		return m.JunXianLevelPrize
	}
	return nil
}

func (m *Config) GetDungeonChapter() []*DungeonChapterProto {
	if m != nil {
		return m.DungeonChapter
	}
	return nil
}

func (m *Config) GetDungeonMisc() *DungeonMiscProto {
	if m != nil {
		return m.DungeonMisc
	}
	return nil
}

func (m *Config) GetCityEventData() []*CityEventDataProto {
	if m != nil {
		return m.CityEventData
	}
	return nil
}

func (m *Config) GetCityEventMisc() *CityEventMiscProto {
	if m != nil {
		return m.CityEventMisc
	}
	return nil
}

func (m *Config) GetTagMisc() *TagMiscProto {
	if m != nil {
		return m.TagMisc
	}
	return nil
}

func (m *Config) GetStrategy() []*StrategyDataProto {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *Config) GetCaptainGenerator() []*CaptainGeneratorProto {
	if m != nil {
		return m.CaptainGenerator
	}
	return nil
}

func (m *Config) GetCaptainSeeker() []*CaptainSeekerProto {
	if m != nil {
		return m.CaptainSeeker
	}
	return nil
}

func (m *Config) GetJiuGuanData() []*JiuGuanDataProto {
	if m != nil {
		return m.JiuGuanData
	}
	return nil
}

func (m *Config) GetJiuGuanMisc() *JiuGuanMiscDataProto {
	if m != nil {
		return m.JiuGuanMisc
	}
	return nil
}

func (m *Config) GetGoodsConfig() *GoodsConfigProto {
	if m != nil {
		return m.GoodsConfig
	}
	return nil
}

func (m *Config) GetMilitaryConfig() *MilitaryConfigProto {
	if m != nil {
		return m.MilitaryConfig
	}
	return nil
}

func (m *Config) GetRegionConfig() *RegionConfigProto {
	if m != nil {
		return m.RegionConfig
	}
	return nil
}

func (m *Config) GetMiscConfig() *MiscConfigProto {
	if m != nil {
		return m.MiscConfig
	}
	return nil
}

func (m *Config) GetGuildConfig() *GuildConfigProto {
	if m != nil {
		return m.GuildConfig
	}
	return nil
}

func (m *Config) GetGradonConfig() *GradonConfigProto {
	if m != nil {
		return m.GradonConfig
	}
	return nil
}

func (m *Config) GetJunYingLevelData() []*JunYingLevelDataProto {
	if m != nil {
		return m.JunYingLevelData
	}
	return nil
}

func (m *Config) GetJunYingMisc() *JunYingMiscProto {
	if m != nil {
		return m.JunYingMisc
	}
	return nil
}

func (m *Config) GetGuanFuLevelData() []*GuanFuLevelProto {
	if m != nil {
		return m.GuanFuLevelData
	}
	return nil
}

func (m *Config) GetFunctionOpenDatas() []*FunctionOpenDataProto {
	if m != nil {
		return m.FunctionOpenDatas
	}
	return nil
}

func (m *Config) GetGuiZuLevelDatas() []*GuiZuLevelDataProto {
	if m != nil {
		return m.GuiZuLevelDatas
	}
	return nil
}

func (m *Config) GetDiaoKeMiscData() *DiaoKeMiscDataProto {
	if m != nil {
		return m.DiaoKeMiscData
	}
	return nil
}

func (m *Config) GetIcons() []*IconProto {
	if m != nil {
		return m.Icons
	}
	return nil
}

func (m *Config) GetPveTroopDatas() []*PveTroopDataProto {
	if m != nil {
		return m.PveTroopDatas
	}
	return nil
}

func (m *Config) GetOuterCityDatas() []*OuterCityDataProto {
	if m != nil {
		return m.OuterCityDatas
	}
	return nil
}

func (m *Config) GetOuterCityLayoutDatas() []*OuterCityLayoutDataProto {
	if m != nil {
		return m.OuterCityLayoutDatas
	}
	return nil
}

func (m *Config) GetCountdownPrizeDesc() []*CountdownPrizeDescDataProto {
	if m != nil {
		return m.CountdownPrizeDesc
	}
	return nil
}

func (m *Config) GetTreasuryTreeData() []*TreasuryTreeDataProto {
	if m != nil {
		return m.TreasuryTreeData
	}
	return nil
}

func (m *Config) GetZhengWuRefresh() []*ZhengWuRefreshDataProto {
	if m != nil {
		return m.ZhengWuRefresh
	}
	return nil
}

func (m *Config) GetZhengWuMisc() *ZhengWuMiscProto {
	if m != nil {
		return m.ZhengWuMisc
	}
	return nil
}

func (m *Config) GetAchieveTaskStarPrize() []*AchieveTaskStarPrizeProto {
	if m != nil {
		return m.AchieveTaskStarPrize
	}
	return nil
}

func (m *Config) GetZhanJiangChapter() []*ZhanJiangChapterProto {
	if m != nil {
		return m.ZhanJiangChapter
	}
	return nil
}

func (m *Config) GetZhanJiangMisc() *ZhanJiangMiscDataProto {
	if m != nil {
		return m.ZhanJiangMisc
	}
	return nil
}

func (m *Config) GetStrongerData() []*StrongerDataProto {
	if m != nil {
		return m.StrongerData
	}
	return nil
}

func (m *Config) GetSetting() []*StringPair {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *Config) GetI18N() []*I18NDataProto {
	if m != nil {
		return m.I18N
	}
	return nil
}

func (m *Config) GetCaptainOfficial() []*CaptainOfficialProto {
	if m != nil {
		return m.CaptainOfficial
	}
	return nil
}

func (m *Config) GetQuestion() []*QuestionProto {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *Config) GetQuestionSaying() []*QuestionSayingProto {
	if m != nil {
		return m.QuestionSaying
	}
	return nil
}

func (m *Config) GetQuestionPrize() []*QuestionPrizeProto {
	if m != nil {
		return m.QuestionPrize
	}
	return nil
}

func (m *Config) GetQuestionMisc() *QuestionMiscProto {
	if m != nil {
		return m.QuestionMisc
	}
	return nil
}

func (m *Config) GetSurveyDatas() []*SurveyDataProto {
	if m != nil {
		return m.SurveyDatas
	}
	return nil
}

func (m *Config) GetAmountShowSortDatas() []*AmountShowSortProto {
	if m != nil {
		return m.AmountShowSortDatas
	}
	return nil
}

func (m *Config) GetResistXiongNuMisc() *ResistXiongNuMiscProto {
	if m != nil {
		return m.ResistXiongNuMisc
	}
	return nil
}

func (m *Config) GetResistXiongNuData() []*ResistXiongNuDataProto {
	if m != nil {
		return m.ResistXiongNuData
	}
	return nil
}

func (m *Config) GetResistXiongNuScore() []*ResistXiongNuScoreProto {
	if m != nil {
		return m.ResistXiongNuScore
	}
	return nil
}

func (m *Config) GetWorkshopRefreshCosts() []*WorkshopRefreshCostProto {
	if m != nil {
		return m.WorkshopRefreshCosts
	}
	return nil
}

func (m *Config) GetHeads() []*HeadProto {
	if m != nil {
		return m.Heads
	}
	return nil
}

func (m *Config) GetBodys() []*BodyProto {
	if m != nil {
		return m.Bodys
	}
	return nil
}

func (m *Config) GetSeasonDatas() []*SeasonDataProto {
	if m != nil {
		return m.SeasonDatas
	}
	return nil
}

func (m *Config) GetSeasonMisc() *SeasonMiscProto {
	if m != nil {
		return m.SeasonMisc
	}
	return nil
}

func (m *Config) GetFarmResConfig() []*FarmResConfigProto {
	if m != nil {
		return m.FarmResConfig
	}
	return nil
}

func (m *Config) GetFarmMiscConfig() *FarmMiscConfigProto {
	if m != nil {
		return m.FarmMiscConfig
	}
	return nil
}

func (m *Config) GetDianquanMisc() *DianquanMiscProto {
	if m != nil {
		return m.DianquanMisc
	}
	return nil
}

func (m *Config) GetHebiPrize() []*HebiPrizeProto {
	if m != nil {
		return m.HebiPrize
	}
	return nil
}

func (m *Config) GetHebiMisc() *HebiMiscProto {
	if m != nil {
		return m.HebiMisc
	}
	return nil
}

func (m *Config) GetTeachData() []*TeachChapterDataProto {
	if m != nil {
		return m.TeachData
	}
	return nil
}

func (m *Config) GetTimeLimitGiftGroups() []*TimeLimitGiftGroupDataProto {
	if m != nil {
		return m.TimeLimitGiftGroups
	}
	return nil
}

func (m *Config) GetRandomEvent() []*RandomEventDataProto {
	if m != nil {
		return m.RandomEvent
	}
	return nil
}

type GoodsConfigProto struct {
	EquipmentUpgradeGoods         int32   `protobuf:"varint,1,opt,name=equipment_upgrade_goods,json=equipmentUpgradeGoods,proto3" json:"equipment_upgrade_goods,omitempty"`
	EquipmentRefinedGoods         int32   `protobuf:"varint,2,opt,name=equipment_refined_goods,json=equipmentRefinedGoods,proto3" json:"equipment_refined_goods,omitempty"`
	CaptainRefinedGoods           []int32 `protobuf:"varint,3,rep,name=captain_refined_goods,json=captainRefinedGoods" json:"captain_refined_goods,omitempty"`
	ChangeCaptainRaceGoods        int32   `protobuf:"varint,4,opt,name=change_captain_race_goods,json=changeCaptainRaceGoods,proto3" json:"change_captain_race_goods,omitempty"`
	CaptainRebirthGoods           []int32 `protobuf:"varint,5,rep,name=captain_rebirth_goods,json=captainRebirthGoods" json:"captain_rebirth_goods,omitempty"`
	MoveBaseGoods                 int32   `protobuf:"varint,6,opt,name=move_base_goods,json=moveBaseGoods,proto3" json:"move_base_goods,omitempty"`
	RandomMoveBaseGoods           int32   `protobuf:"varint,7,opt,name=random_move_base_goods,json=randomMoveBaseGoods,proto3" json:"random_move_base_goods,omitempty"`
	MoveTentGoods                 int32   `protobuf:"varint,8,opt,name=move_tent_goods,json=moveTentGoods,proto3" json:"move_tent_goods,omitempty"`
	RandomMoveTentGoods           int32   `protobuf:"varint,12,opt,name=random_move_tent_goods,json=randomMoveTentGoods,proto3" json:"random_move_tent_goods,omitempty"`
	GuildMoveBaseGoods            int32   `protobuf:"varint,13,opt,name=guild_move_base_goods,json=guildMoveBaseGoods,proto3" json:"guild_move_base_goods,omitempty"`
	MultiLevelNpcTimesGoods       int32   `protobuf:"varint,25,opt,name=multi_level_npc_times_goods,json=multiLevelNpcTimesGoods,proto3" json:"multi_level_npc_times_goods,omitempty"`
	InvaseHeroTimesGoods          int32   `protobuf:"varint,29,opt,name=invase_hero_times_goods,json=invaseHeroTimesGoods,proto3" json:"invase_hero_times_goods,omitempty"`
	JunTuanNpcTimesGoods          int32   `protobuf:"varint,34,opt,name=jun_tuan_npc_times_goods,json=junTuanNpcTimesGoods,proto3" json:"jun_tuan_npc_times_goods,omitempty"`
	MianGoods                     []int32 `protobuf:"varint,9,rep,name=mian_goods,json=mianGoods" json:"mian_goods,omitempty"`
	JiuGuanExpCaptainRefinedGoods []int32 `protobuf:"varint,10,rep,name=jiu_guan_exp_captain_refined_goods,json=jiuGuanExpCaptainRefinedGoods" json:"jiu_guan_exp_captain_refined_goods,omitempty"`
	ExpCaptainSoulUpgradeGoods    []int32 `protobuf:"varint,11,rep,name=exp_captain_soul_upgrade_goods,json=expCaptainSoulUpgradeGoods" json:"exp_captain_soul_upgrade_goods,omitempty"`
	SpeedUpGoods                  []int32 `protobuf:"varint,14,rep,name=speed_up_goods,json=speedUpGoods" json:"speed_up_goods,omitempty"`
	TrainExpGoods                 []int32 `protobuf:"varint,15,rep,name=train_exp_goods,json=trainExpGoods" json:"train_exp_goods,omitempty"`
	BuildingCdrGoods              []int32 `protobuf:"varint,16,rep,name=building_cdr_goods,json=buildingCdrGoods" json:"building_cdr_goods,omitempty"`
	TechCdrGoods                  []int32 `protobuf:"varint,17,rep,name=tech_cdr_goods,json=techCdrGoods" json:"tech_cdr_goods,omitempty"`
	WorkshopCdrGoods              []int32 `protobuf:"varint,19,rep,name=workshop_cdr_goods,json=workshopCdrGoods" json:"workshop_cdr_goods,omitempty"`
	SpecGoods                     []int32 `protobuf:"varint,18,rep,name=spec_goods,json=specGoods" json:"spec_goods,omitempty"`
	GoldGoods                     []int32 `protobuf:"varint,20,rep,name=gold_goods,json=goldGoods" json:"gold_goods,omitempty"`
	GoldNormalShopGoods           []int32 `protobuf:"varint,21,rep,name=gold_normal_shop_goods,json=goldNormalShopGoods" json:"gold_normal_shop_goods,omitempty"`
	StoneGoods                    []int32 `protobuf:"varint,22,rep,name=stone_goods,json=stoneGoods" json:"stone_goods,omitempty"`
	StoneNormalShopGoods          []int32 `protobuf:"varint,23,rep,name=stone_normal_shop_goods,json=stoneNormalShopGoods" json:"stone_normal_shop_goods,omitempty"`
	GongXunGoods                  []int32 `protobuf:"varint,24,rep,name=gong_xun_goods,json=gongXunGoods" json:"gong_xun_goods,omitempty"`
	FishGoods                     int32   `protobuf:"varint,26,opt,name=fish_goods,json=fishGoods,proto3" json:"fish_goods,omitempty"`
	CopyDefenserGoods             []int32 `protobuf:"varint,27,rep,name=copy_defenser_goods,json=copyDefenserGoods" json:"copy_defenser_goods,omitempty"`
	TigerGoods                    []int32 `protobuf:"varint,28,rep,name=tiger_goods,json=tigerGoods" json:"tiger_goods,omitempty"`
	ZhanjiangGoods                []int32 `protobuf:"varint,33,rep,name=zhanjiang_goods,json=zhanjiangGoods" json:"zhanjiang_goods,omitempty"`
	TowerGoods                    []int32 `protobuf:"varint,32,rep,name=tower_goods,json=towerGoods" json:"tower_goods,omitempty"`
	BuffGoods                     []int32 `protobuf:"varint,31,rep,name=buff_goods,json=buffGoods" json:"buff_goods,omitempty"`
	IndecomposableBaowuCount      int32   `protobuf:"varint,30,opt,name=indecomposable_baowu_count,json=indecomposableBaowuCount,proto3" json:"indecomposable_baowu_count,omitempty"`
}

func (m *GoodsConfigProto) Reset()                    { *m = GoodsConfigProto{} }
func (m *GoodsConfigProto) String() string            { return proto.CompactTextString(m) }
func (*GoodsConfigProto) ProtoMessage()               {}
func (*GoodsConfigProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{1} }

func (m *GoodsConfigProto) GetEquipmentUpgradeGoods() int32 {
	if m != nil {
		return m.EquipmentUpgradeGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetEquipmentRefinedGoods() int32 {
	if m != nil {
		return m.EquipmentRefinedGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetCaptainRefinedGoods() []int32 {
	if m != nil {
		return m.CaptainRefinedGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetChangeCaptainRaceGoods() int32 {
	if m != nil {
		return m.ChangeCaptainRaceGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetCaptainRebirthGoods() []int32 {
	if m != nil {
		return m.CaptainRebirthGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetMoveBaseGoods() int32 {
	if m != nil {
		return m.MoveBaseGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetRandomMoveBaseGoods() int32 {
	if m != nil {
		return m.RandomMoveBaseGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetMoveTentGoods() int32 {
	if m != nil {
		return m.MoveTentGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetRandomMoveTentGoods() int32 {
	if m != nil {
		return m.RandomMoveTentGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetGuildMoveBaseGoods() int32 {
	if m != nil {
		return m.GuildMoveBaseGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetMultiLevelNpcTimesGoods() int32 {
	if m != nil {
		return m.MultiLevelNpcTimesGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetInvaseHeroTimesGoods() int32 {
	if m != nil {
		return m.InvaseHeroTimesGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetJunTuanNpcTimesGoods() int32 {
	if m != nil {
		return m.JunTuanNpcTimesGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetMianGoods() []int32 {
	if m != nil {
		return m.MianGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetJiuGuanExpCaptainRefinedGoods() []int32 {
	if m != nil {
		return m.JiuGuanExpCaptainRefinedGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetExpCaptainSoulUpgradeGoods() []int32 {
	if m != nil {
		return m.ExpCaptainSoulUpgradeGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetSpeedUpGoods() []int32 {
	if m != nil {
		return m.SpeedUpGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetTrainExpGoods() []int32 {
	if m != nil {
		return m.TrainExpGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetBuildingCdrGoods() []int32 {
	if m != nil {
		return m.BuildingCdrGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetTechCdrGoods() []int32 {
	if m != nil {
		return m.TechCdrGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetWorkshopCdrGoods() []int32 {
	if m != nil {
		return m.WorkshopCdrGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetSpecGoods() []int32 {
	if m != nil {
		return m.SpecGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetGoldGoods() []int32 {
	if m != nil {
		return m.GoldGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetGoldNormalShopGoods() []int32 {
	if m != nil {
		return m.GoldNormalShopGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetStoneGoods() []int32 {
	if m != nil {
		return m.StoneGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetStoneNormalShopGoods() []int32 {
	if m != nil {
		return m.StoneNormalShopGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetGongXunGoods() []int32 {
	if m != nil {
		return m.GongXunGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetFishGoods() int32 {
	if m != nil {
		return m.FishGoods
	}
	return 0
}

func (m *GoodsConfigProto) GetCopyDefenserGoods() []int32 {
	if m != nil {
		return m.CopyDefenserGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetTigerGoods() []int32 {
	if m != nil {
		return m.TigerGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetZhanjiangGoods() []int32 {
	if m != nil {
		return m.ZhanjiangGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetTowerGoods() []int32 {
	if m != nil {
		return m.TowerGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetBuffGoods() []int32 {
	if m != nil {
		return m.BuffGoods
	}
	return nil
}

func (m *GoodsConfigProto) GetIndecomposableBaowuCount() int32 {
	if m != nil {
		return m.IndecomposableBaowuCount
	}
	return 0
}

type MilitaryConfigProto struct {
	GenSeekCount   int32 `protobuf:"varint,1,opt,name=gen_seek_count,json=genSeekCount,proto3" json:"gen_seek_count,omitempty"`
	SeekDuration   int32 `protobuf:"varint,2,opt,name=seek_duration,json=seekDuration,proto3" json:"seek_duration,omitempty"`
	SeekMaxTimes   int32 `protobuf:"varint,3,opt,name=seek_max_times,json=seekMaxTimes,proto3" json:"seek_max_times,omitempty"`
	DefenserCount  int32 `protobuf:"varint,4,opt,name=defenser_count,json=defenserCount,proto3" json:"defenser_count,omitempty"`
	FireLevelLimit int32 `protobuf:"varint,5,opt,name=fire_level_limit,json=fireLevelLimit,proto3" json:"fire_level_limit,omitempty"`
	// 训练位开启等级表每个训练位开启等级
	TrainingHeroLevel   []int32 `protobuf:"varint,6,rep,name=training_hero_level,json=trainingHeroLevel" json:"training_hero_level,omitempty"`
	TrainingInitLevel   []int32 `protobuf:"varint,7,rep,name=training_init_level,json=trainingInitLevel" json:"training_init_level,omitempty"`
	TrainingLevelLimit  []int32 `protobuf:"varint,8,rep,name=training_level_limit,json=trainingLevelLimit" json:"training_level_limit,omitempty"`
	TrainingMaxDuration int32   `protobuf:"varint,10,opt,name=training_max_duration,json=trainingMaxDuration,proto3" json:"training_max_duration,omitempty"`
	CaptainInitTrainExp int32   `protobuf:"varint,11,opt,name=captain_init_train_exp,json=captainInitTrainExp,proto3" json:"captain_init_train_exp,omitempty"`
	// 队伍解锁等级(君主等级)，纯展示用（当那个队伍没人的时候展示出来，如果队伍有数据，显示队伍出来，主要防止配表错误）
	TroopsUnlockLevel []int32 `protobuf:"varint,9,rep,name=troops_unlock_level,json=troopsUnlockLevel" json:"troops_unlock_level,omitempty"`
}

func (m *MilitaryConfigProto) Reset()                    { *m = MilitaryConfigProto{} }
func (m *MilitaryConfigProto) String() string            { return proto.CompactTextString(m) }
func (*MilitaryConfigProto) ProtoMessage()               {}
func (*MilitaryConfigProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{2} }

func (m *MilitaryConfigProto) GetGenSeekCount() int32 {
	if m != nil {
		return m.GenSeekCount
	}
	return 0
}

func (m *MilitaryConfigProto) GetSeekDuration() int32 {
	if m != nil {
		return m.SeekDuration
	}
	return 0
}

func (m *MilitaryConfigProto) GetSeekMaxTimes() int32 {
	if m != nil {
		return m.SeekMaxTimes
	}
	return 0
}

func (m *MilitaryConfigProto) GetDefenserCount() int32 {
	if m != nil {
		return m.DefenserCount
	}
	return 0
}

func (m *MilitaryConfigProto) GetFireLevelLimit() int32 {
	if m != nil {
		return m.FireLevelLimit
	}
	return 0
}

func (m *MilitaryConfigProto) GetTrainingHeroLevel() []int32 {
	if m != nil {
		return m.TrainingHeroLevel
	}
	return nil
}

func (m *MilitaryConfigProto) GetTrainingInitLevel() []int32 {
	if m != nil {
		return m.TrainingInitLevel
	}
	return nil
}

func (m *MilitaryConfigProto) GetTrainingLevelLimit() []int32 {
	if m != nil {
		return m.TrainingLevelLimit
	}
	return nil
}

func (m *MilitaryConfigProto) GetTrainingMaxDuration() int32 {
	if m != nil {
		return m.TrainingMaxDuration
	}
	return 0
}

func (m *MilitaryConfigProto) GetCaptainInitTrainExp() int32 {
	if m != nil {
		return m.CaptainInitTrainExp
	}
	return 0
}

func (m *MilitaryConfigProto) GetTroopsUnlockLevel() []int32 {
	if m != nil {
		return m.TroopsUnlockLevel
	}
	return nil
}

type RegionConfigProto struct {
	MapXLen                              int32            `protobuf:"varint,1,opt,name=map_x_len,json=mapXLen,proto3" json:"map_x_len,omitempty"`
	MapYLen                              int32            `protobuf:"varint,2,opt,name=map_y_len,json=mapYLen,proto3" json:"map_y_len,omitempty"`
	TentBuildingDuration                 int32            `protobuf:"varint,3,opt,name=tent_building_duration,json=tentBuildingDuration,proto3" json:"tent_building_duration,omitempty"`
	MiaoTentBuildingDuration             int32            `protobuf:"varint,4,opt,name=miao_tent_building_duration,json=miaoTentBuildingDuration,proto3" json:"miao_tent_building_duration,omitempty"`
	MiaoTentBuildingCost                 *CostProto       `protobuf:"bytes,5,opt,name=miao_tent_building_cost,json=miaoTentBuildingCost" json:"miao_tent_building_cost,omitempty"`
	WhiteFlagDuration                    int32            `protobuf:"varint,6,opt,name=white_flag_duration,json=whiteFlagDuration,proto3" json:"white_flag_duration,omitempty"`
	MultiLevelNpcMaxTimes                int32            `protobuf:"varint,7,opt,name=multi_level_npc_max_times,json=multiLevelNpcMaxTimes,proto3" json:"multi_level_npc_max_times,omitempty"`
	MultiLevelNpcRecoveryDuration        int32            `protobuf:"varint,21,opt,name=multi_level_npc_recovery_duration,json=multiLevelNpcRecoveryDuration,proto3" json:"multi_level_npc_recovery_duration,omitempty"`
	GuildRegionCenterX                   int32            `protobuf:"varint,8,opt,name=guild_region_center_x,json=guildRegionCenterX,proto3" json:"guild_region_center_x,omitempty"`
	GuildRegionCenterY                   int32            `protobuf:"varint,9,opt,name=guild_region_center_y,json=guildRegionCenterY,proto3" json:"guild_region_center_y,omitempty"`
	AstDefendRestoreHomeProsperityAmount *AmountProto     `protobuf:"bytes,25,opt,name=ast_defend_restore_home_prosperity_amount,json=astDefendRestoreHomeProsperityAmount" json:"ast_defend_restore_home_prosperity_amount,omitempty"`
	AstDefendRestoreHomeProsperity       int32            `protobuf:"varint,24,opt,name=ast_defend_restore_home_prosperity,json=astDefendRestoreHomeProsperity,proto3" json:"ast_defend_restore_home_prosperity,omitempty"`
	RestoreHomeProsperity                int32            `protobuf:"varint,10,opt,name=restore_home_prosperity,json=restoreHomeProsperity,proto3" json:"restore_home_prosperity,omitempty"`
	RestoreHomeProsperityDuration        int32            `protobuf:"varint,11,opt,name=restore_home_prosperity_duration,json=restoreHomeProsperityDuration,proto3" json:"restore_home_prosperity_duration,omitempty"`
	DefaultDiaoKe                        *DiaoKeDataProto `protobuf:"bytes,12,opt,name=default_diao_ke,json=defaultDiaoKe" json:"default_diao_ke,omitempty"`
	InvestigateCd                        int32            `protobuf:"varint,15,opt,name=investigate_cd,json=investigateCd,proto3" json:"investigate_cd,omitempty"`
	MiaoInvestigateCdCost                *CostProto       `protobuf:"bytes,13,opt,name=miao_investigate_cd_cost,json=miaoInvestigateCdCost" json:"miao_investigate_cd_cost,omitempty"`
	InvestigateCost                      *CostProto       `protobuf:"bytes,30,opt,name=investigate_cost,json=investigateCost" json:"investigate_cost,omitempty"`
	InvestigateSpeedup                   int32            `protobuf:"varint,31,opt,name=investigate_speedup,json=investigateSpeedup,proto3" json:"investigate_speedup,omitempty"`
	InvestigateMailTimeout               int32            `protobuf:"varint,14,opt,name=investigate_mail_timeout,json=investigateMailTimeout,proto3" json:"investigate_mail_timeout,omitempty"`
	InvestigateMaxDistance               int32            `protobuf:"varint,23,opt,name=investigate_max_distance,json=investigateMaxDistance,proto3" json:"investigate_max_distance,omitempty"`
	BasicTroopMoveVelocityPerSecond      int32            `protobuf:"varint,16,opt,name=basic_troop_move_velocity_per_second,json=basicTroopMoveVelocityPerSecond,proto3" json:"basic_troop_move_velocity_per_second,omitempty"`
	Edge                                 int32            `protobuf:"varint,17,opt,name=edge,proto3" json:"edge,omitempty"`
	EdgeNotHomeLen                       int32            `protobuf:"varint,22,opt,name=edge_not_home_len,json=edgeNotHomeLen,proto3" json:"edge_not_home_len,omitempty"`
	NewHeroMianDuration                  int32            `protobuf:"varint,18,opt,name=new_hero_mian_duration,json=newHeroMianDuration,proto3" json:"new_hero_mian_duration,omitempty"`
	NewHeroRemoveMianBaseLevel           int32            `protobuf:"varint,19,opt,name=new_hero_remove_mian_base_level,json=newHeroRemoveMianBaseLevel,proto3" json:"new_hero_remove_mian_base_level,omitempty"`
	RebornMianDuration                   int32            `protobuf:"varint,20,opt,name=reborn_mian_duration,json=rebornMianDuration,proto3" json:"reborn_mian_duration,omitempty"`
}

func (m *RegionConfigProto) Reset()                    { *m = RegionConfigProto{} }
func (m *RegionConfigProto) String() string            { return proto.CompactTextString(m) }
func (*RegionConfigProto) ProtoMessage()               {}
func (*RegionConfigProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{3} }

func (m *RegionConfigProto) GetMapXLen() int32 {
	if m != nil {
		return m.MapXLen
	}
	return 0
}

func (m *RegionConfigProto) GetMapYLen() int32 {
	if m != nil {
		return m.MapYLen
	}
	return 0
}

func (m *RegionConfigProto) GetTentBuildingDuration() int32 {
	if m != nil {
		return m.TentBuildingDuration
	}
	return 0
}

func (m *RegionConfigProto) GetMiaoTentBuildingDuration() int32 {
	if m != nil {
		return m.MiaoTentBuildingDuration
	}
	return 0
}

func (m *RegionConfigProto) GetMiaoTentBuildingCost() *CostProto {
	if m != nil {
		return m.MiaoTentBuildingCost
	}
	return nil
}

func (m *RegionConfigProto) GetWhiteFlagDuration() int32 {
	if m != nil {
		return m.WhiteFlagDuration
	}
	return 0
}

func (m *RegionConfigProto) GetMultiLevelNpcMaxTimes() int32 {
	if m != nil {
		return m.MultiLevelNpcMaxTimes
	}
	return 0
}

func (m *RegionConfigProto) GetMultiLevelNpcRecoveryDuration() int32 {
	if m != nil {
		return m.MultiLevelNpcRecoveryDuration
	}
	return 0
}

func (m *RegionConfigProto) GetGuildRegionCenterX() int32 {
	if m != nil {
		return m.GuildRegionCenterX
	}
	return 0
}

func (m *RegionConfigProto) GetGuildRegionCenterY() int32 {
	if m != nil {
		return m.GuildRegionCenterY
	}
	return 0
}

func (m *RegionConfigProto) GetAstDefendRestoreHomeProsperityAmount() *AmountProto {
	if m != nil {
		return m.AstDefendRestoreHomeProsperityAmount
	}
	return nil
}

func (m *RegionConfigProto) GetAstDefendRestoreHomeProsperity() int32 {
	if m != nil {
		return m.AstDefendRestoreHomeProsperity
	}
	return 0
}

func (m *RegionConfigProto) GetRestoreHomeProsperity() int32 {
	if m != nil {
		return m.RestoreHomeProsperity
	}
	return 0
}

func (m *RegionConfigProto) GetRestoreHomeProsperityDuration() int32 {
	if m != nil {
		return m.RestoreHomeProsperityDuration
	}
	return 0
}

func (m *RegionConfigProto) GetDefaultDiaoKe() *DiaoKeDataProto {
	if m != nil {
		return m.DefaultDiaoKe
	}
	return nil
}

func (m *RegionConfigProto) GetInvestigateCd() int32 {
	if m != nil {
		return m.InvestigateCd
	}
	return 0
}

func (m *RegionConfigProto) GetMiaoInvestigateCdCost() *CostProto {
	if m != nil {
		return m.MiaoInvestigateCdCost
	}
	return nil
}

func (m *RegionConfigProto) GetInvestigateCost() *CostProto {
	if m != nil {
		return m.InvestigateCost
	}
	return nil
}

func (m *RegionConfigProto) GetInvestigateSpeedup() int32 {
	if m != nil {
		return m.InvestigateSpeedup
	}
	return 0
}

func (m *RegionConfigProto) GetInvestigateMailTimeout() int32 {
	if m != nil {
		return m.InvestigateMailTimeout
	}
	return 0
}

func (m *RegionConfigProto) GetInvestigateMaxDistance() int32 {
	if m != nil {
		return m.InvestigateMaxDistance
	}
	return 0
}

func (m *RegionConfigProto) GetBasicTroopMoveVelocityPerSecond() int32 {
	if m != nil {
		return m.BasicTroopMoveVelocityPerSecond
	}
	return 0
}

func (m *RegionConfigProto) GetEdge() int32 {
	if m != nil {
		return m.Edge
	}
	return 0
}

func (m *RegionConfigProto) GetEdgeNotHomeLen() int32 {
	if m != nil {
		return m.EdgeNotHomeLen
	}
	return 0
}

func (m *RegionConfigProto) GetNewHeroMianDuration() int32 {
	if m != nil {
		return m.NewHeroMianDuration
	}
	return 0
}

func (m *RegionConfigProto) GetNewHeroRemoveMianBaseLevel() int32 {
	if m != nil {
		return m.NewHeroRemoveMianBaseLevel
	}
	return 0
}

func (m *RegionConfigProto) GetRebornMianDuration() int32 {
	if m != nil {
		return m.RebornMianDuration
	}
	return 0
}

type MiscConfigProto struct {
	ChangeHeroNameYuanbaoCost []int32      `protobuf:"varint,7,rep,name=change_hero_name_yuanbao_cost,json=changeHeroNameYuanbaoCost" json:"change_hero_name_yuanbao_cost,omitempty"`
	ChangeHeroNameCost        []*CostProto `protobuf:"bytes,28,rep,name=change_hero_name_cost,json=changeHeroNameCost" json:"change_hero_name_cost,omitempty"`
	ChangeHeroNameDuration    int32        `protobuf:"varint,5,opt,name=change_hero_name_duration,json=changeHeroNameDuration,proto3" json:"change_hero_name_duration,omitempty"`
	ChangeCaptainNameCost     *CostProto   `protobuf:"bytes,6,opt,name=change_captain_name_cost,json=changeCaptainNameCost" json:"change_captain_name_cost,omitempty"`
	FirstChangeHeroNamePrize  *PrizeProto  `protobuf:"bytes,16,opt,name=first_change_hero_name_prize,json=firstChangeHeroNamePrize" json:"first_change_hero_name_prize,omitempty"`
	ChangeCaptainRaceDuration int32        `protobuf:"varint,8,opt,name=change_captain_race_duration,json=changeCaptainRaceDuration,proto3" json:"change_captain_race_duration,omitempty"`
	ChangeCaptainRaceLevel    int32        `protobuf:"varint,9,opt,name=change_captain_race_level,json=changeCaptainRaceLevel,proto3" json:"change_captain_race_level,omitempty"`
	MailMinBatchCount         int32        `protobuf:"varint,2,opt,name=mail_min_batch_count,json=mailMinBatchCount,proto3" json:"mail_min_batch_count,omitempty"`
	MailMaxBatchCount         int32        `protobuf:"varint,4,opt,name=mail_max_batch_count,json=mailMaxBatchCount,proto3" json:"mail_max_batch_count,omitempty"`
	TowerChallengeMaxTimes    int32        `protobuf:"varint,3,opt,name=tower_challenge_max_times,json=towerChallengeMaxTimes,proto3" json:"tower_challenge_max_times,omitempty"`
	// 每X时间需要Y消耗
	MiaoBuildingWorkerDuration         int32        `protobuf:"varint,11,opt,name=miao_building_worker_duration,json=miaoBuildingWorkerDuration,proto3" json:"miao_building_worker_duration,omitempty"`
	MiaoBuildingWorkerCost             *CostProto   `protobuf:"bytes,12,opt,name=miao_building_worker_cost,json=miaoBuildingWorkerCost" json:"miao_building_worker_cost,omitempty"`
	MiaoTechWorkerDuration             int32        `protobuf:"varint,13,opt,name=miao_tech_worker_duration,json=miaoTechWorkerDuration,proto3" json:"miao_tech_worker_duration,omitempty"`
	MiaoTechWorkerCost                 *CostProto   `protobuf:"bytes,14,opt,name=miao_tech_worker_cost,json=miaoTechWorkerCost" json:"miao_tech_worker_cost,omitempty"`
	StrategyRestoreDuration            int32        `protobuf:"varint,15,opt,name=strategy_restore_duration,json=strategyRestoreDuration,proto3" json:"strategy_restore_duration,omitempty"`
	MondayZeroOClock                   int32        `protobuf:"varint,20,opt,name=monday_zero_o_clock,json=mondayZeroOClock,proto3" json:"monday_zero_o_clock,omitempty"`
	MiaoCaptainRebirthDuration         int32        `protobuf:"varint,21,opt,name=miao_captain_rebirth_duration,json=miaoCaptainRebirthDuration,proto3" json:"miao_captain_rebirth_duration,omitempty"`
	MiaoCaptainRebirthCost             *CostProto   `protobuf:"bytes,22,opt,name=miao_captain_rebirth_cost,json=miaoCaptainRebirthCost" json:"miao_captain_rebirth_cost,omitempty"`
	MiaoWorkshopDuration               int32        `protobuf:"varint,23,opt,name=miao_workshop_duration,json=miaoWorkshopDuration,proto3" json:"miao_workshop_duration,omitempty"`
	MiaoWorkshopCost                   *CostProto   `protobuf:"bytes,24,opt,name=miao_workshop_cost,json=miaoWorkshopCost" json:"miao_workshop_cost,omitempty"`
	WorldChatLevel                     int32        `protobuf:"varint,25,opt,name=world_chat_level,json=worldChatLevel,proto3" json:"world_chat_level,omitempty"`
	WorldChatDuration                  int32        `protobuf:"varint,26,opt,name=world_chat_duration,json=worldChatDuration,proto3" json:"world_chat_duration,omitempty"`
	ChatTextLength                     int32        `protobuf:"varint,27,opt,name=chat_text_length,json=chatTextLength,proto3" json:"chat_text_length,omitempty"`
	BroadcastGoods                     int32        `protobuf:"varint,113,opt,name=broadcast_goods,json=broadcastGoods,proto3" json:"broadcast_goods,omitempty"`
	DailyResetHour                     int32        `protobuf:"varint,101,opt,name=daily_reset_hour,json=dailyResetHour,proto3" json:"daily_reset_hour,omitempty"`
	DailyResetMinute                   int32        `protobuf:"varint,102,opt,name=daily_reset_minute,json=dailyResetMinute,proto3" json:"daily_reset_minute,omitempty"`
	WeeklyResetHour                    int32        `protobuf:"varint,130,opt,name=weekly_reset_hour,json=weeklyResetHour,proto3" json:"weekly_reset_hour,omitempty"`
	WeeklyResetMinute                  int32        `protobuf:"varint,131,opt,name=weekly_reset_minute,json=weeklyResetMinute,proto3" json:"weekly_reset_minute,omitempty"`
	WorkshopRefreshHourMinute          []int32      `protobuf:"varint,103,rep,name=workshop_refresh_hour_minute,json=workshopRefreshHourMinute" json:"workshop_refresh_hour_minute,omitempty"`
	MaxDepotEquipCapacity              int32        `protobuf:"varint,105,opt,name=max_depot_equip_capacity,json=maxDepotEquipCapacity,proto3" json:"max_depot_equip_capacity,omitempty"`
	MaxSignLen                         int32        `protobuf:"varint,106,opt,name=max_sign_len,json=maxSignLen,proto3" json:"max_sign_len,omitempty"`
	MaxResourceCollectTimes            int32        `protobuf:"varint,107,opt,name=max_resource_collect_times,json=maxResourceCollectTimes,proto3" json:"max_resource_collect_times,omitempty"`
	ResourceRecoveryDuration           int32        `protobuf:"varint,108,opt,name=resource_recovery_duration,json=resourceRecoveryDuration,proto3" json:"resource_recovery_duration,omitempty"`
	MaxFavoritePosCount                int32        `protobuf:"varint,109,opt,name=max_favorite_pos_count,json=maxFavoritePosCount,proto3" json:"max_favorite_pos_count,omitempty"`
	SeasonDuration                     int32        `protobuf:"varint,110,opt,name=season_duration,json=seasonDuration,proto3" json:"season_duration,omitempty"`
	SkipFightingHeroLevel              int32        `protobuf:"varint,111,opt,name=skip_fighting_hero_level,json=skipFightingHeroLevel,proto3" json:"skip_fighting_hero_level,omitempty"`
	StrongerCoef                       []int32      `protobuf:"varint,112,rep,name=stronger_coef,json=strongerCoef" json:"stronger_coef,omitempty"`
	BuildingInitEffect                 int32        `protobuf:"varint,114,opt,name=building_init_effect,json=buildingInitEffect,proto3" json:"building_init_effect,omitempty"`
	ExtraResDecayCoef                  *AmountProto `protobuf:"bytes,115,opt,name=extra_res_decay_coef,json=extraResDecayCoef" json:"extra_res_decay_coef,omitempty"`
	ExtraResDecayDuration              int32        `protobuf:"varint,116,opt,name=extra_res_decay_duration,json=extraResDecayDuration,proto3" json:"extra_res_decay_duration,omitempty"`
	CloseFightGuideDungeonId           int32        `protobuf:"varint,117,opt,name=close_fight_guide_dungeon_id,json=closeFightGuideDungeonId,proto3" json:"close_fight_guide_dungeon_id,omitempty"`
	RefreshRecommendHeroDuration       int32        `protobuf:"varint,118,opt,name=refresh_recommend_hero_duration,json=refreshRecommendHeroDuration,proto3" json:"refresh_recommend_hero_duration,omitempty"`
	RefreshRecommendHeroPageSize       int32        `protobuf:"varint,119,opt,name=refresh_recommend_hero_page_size,json=refreshRecommendHeroPageSize,proto3" json:"refresh_recommend_hero_page_size,omitempty"`
	RefreshRecommendHeroMinLevel       int32        `protobuf:"varint,120,opt,name=refresh_recommend_hero_min_level,json=refreshRecommendHeroMinLevel,proto3" json:"refresh_recommend_hero_min_level,omitempty"`
	RefreshRecommendHeroPageCount      int32        `protobuf:"varint,121,opt,name=refresh_recommend_hero_page_count,json=refreshRecommendHeroPageCount,proto3" json:"refresh_recommend_hero_page_count,omitempty"`
	SearchHeroDuration                 int32        `protobuf:"varint,122,opt,name=search_hero_duration,json=searchHeroDuration,proto3" json:"search_hero_duration,omitempty"`
	RecommendHeroOfflineExpireDuration int32        `protobuf:"varint,132,opt,name=recommend_hero_offline_expire_duration,json=recommendHeroOfflineExpireDuration,proto3" json:"recommend_hero_offline_expire_duration,omitempty"`
	ChatPrivateMinLevel                int32        `protobuf:"varint,123,opt,name=chat_private_min_level,json=chatPrivateMinLevel,proto3" json:"chat_private_min_level,omitempty"`
	ChatDuration                       int32        `protobuf:"varint,124,opt,name=chat_duration,json=chatDuration,proto3" json:"chat_duration,omitempty"`
	ChatShareDuration                  int32        `protobuf:"varint,125,opt,name=chat_share_duration,json=chatShareDuration,proto3" json:"chat_share_duration,omitempty"`
	SecondWorkerCost                   *CostProto   `protobuf:"bytes,126,opt,name=second_worker_cost,json=secondWorkerCost" json:"second_worker_cost,omitempty"`
	SecondWorkerUnlockDuration         int32        `protobuf:"varint,127,opt,name=second_worker_unlock_duration,json=secondWorkerUnlockDuration,proto3" json:"second_worker_unlock_duration,omitempty"`
	RedPacketCostPercent               int32        `protobuf:"varint,128,opt,name=red_packet_cost_percent,json=redPacketCostPercent,proto3" json:"red_packet_cost_percent,omitempty"`
	RedPacketGuildMemberMinCount       int32        `protobuf:"varint,129,opt,name=red_packet_guild_member_min_count,json=redPacketGuildMemberMinCount,proto3" json:"red_packet_guild_member_min_count,omitempty"`
}

func (m *MiscConfigProto) Reset()                    { *m = MiscConfigProto{} }
func (m *MiscConfigProto) String() string            { return proto.CompactTextString(m) }
func (*MiscConfigProto) ProtoMessage()               {}
func (*MiscConfigProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{4} }

func (m *MiscConfigProto) GetChangeHeroNameYuanbaoCost() []int32 {
	if m != nil {
		return m.ChangeHeroNameYuanbaoCost
	}
	return nil
}

func (m *MiscConfigProto) GetChangeHeroNameCost() []*CostProto {
	if m != nil {
		return m.ChangeHeroNameCost
	}
	return nil
}

func (m *MiscConfigProto) GetChangeHeroNameDuration() int32 {
	if m != nil {
		return m.ChangeHeroNameDuration
	}
	return 0
}

func (m *MiscConfigProto) GetChangeCaptainNameCost() *CostProto {
	if m != nil {
		return m.ChangeCaptainNameCost
	}
	return nil
}

func (m *MiscConfigProto) GetFirstChangeHeroNamePrize() *PrizeProto {
	if m != nil {
		return m.FirstChangeHeroNamePrize
	}
	return nil
}

func (m *MiscConfigProto) GetChangeCaptainRaceDuration() int32 {
	if m != nil {
		return m.ChangeCaptainRaceDuration
	}
	return 0
}

func (m *MiscConfigProto) GetChangeCaptainRaceLevel() int32 {
	if m != nil {
		return m.ChangeCaptainRaceLevel
	}
	return 0
}

func (m *MiscConfigProto) GetMailMinBatchCount() int32 {
	if m != nil {
		return m.MailMinBatchCount
	}
	return 0
}

func (m *MiscConfigProto) GetMailMaxBatchCount() int32 {
	if m != nil {
		return m.MailMaxBatchCount
	}
	return 0
}

func (m *MiscConfigProto) GetTowerChallengeMaxTimes() int32 {
	if m != nil {
		return m.TowerChallengeMaxTimes
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoBuildingWorkerDuration() int32 {
	if m != nil {
		return m.MiaoBuildingWorkerDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoBuildingWorkerCost() *CostProto {
	if m != nil {
		return m.MiaoBuildingWorkerCost
	}
	return nil
}

func (m *MiscConfigProto) GetMiaoTechWorkerDuration() int32 {
	if m != nil {
		return m.MiaoTechWorkerDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoTechWorkerCost() *CostProto {
	if m != nil {
		return m.MiaoTechWorkerCost
	}
	return nil
}

func (m *MiscConfigProto) GetStrategyRestoreDuration() int32 {
	if m != nil {
		return m.StrategyRestoreDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMondayZeroOClock() int32 {
	if m != nil {
		return m.MondayZeroOClock
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoCaptainRebirthDuration() int32 {
	if m != nil {
		return m.MiaoCaptainRebirthDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoCaptainRebirthCost() *CostProto {
	if m != nil {
		return m.MiaoCaptainRebirthCost
	}
	return nil
}

func (m *MiscConfigProto) GetMiaoWorkshopDuration() int32 {
	if m != nil {
		return m.MiaoWorkshopDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMiaoWorkshopCost() *CostProto {
	if m != nil {
		return m.MiaoWorkshopCost
	}
	return nil
}

func (m *MiscConfigProto) GetWorldChatLevel() int32 {
	if m != nil {
		return m.WorldChatLevel
	}
	return 0
}

func (m *MiscConfigProto) GetWorldChatDuration() int32 {
	if m != nil {
		return m.WorldChatDuration
	}
	return 0
}

func (m *MiscConfigProto) GetChatTextLength() int32 {
	if m != nil {
		return m.ChatTextLength
	}
	return 0
}

func (m *MiscConfigProto) GetBroadcastGoods() int32 {
	if m != nil {
		return m.BroadcastGoods
	}
	return 0
}

func (m *MiscConfigProto) GetDailyResetHour() int32 {
	if m != nil {
		return m.DailyResetHour
	}
	return 0
}

func (m *MiscConfigProto) GetDailyResetMinute() int32 {
	if m != nil {
		return m.DailyResetMinute
	}
	return 0
}

func (m *MiscConfigProto) GetWeeklyResetHour() int32 {
	if m != nil {
		return m.WeeklyResetHour
	}
	return 0
}

func (m *MiscConfigProto) GetWeeklyResetMinute() int32 {
	if m != nil {
		return m.WeeklyResetMinute
	}
	return 0
}

func (m *MiscConfigProto) GetWorkshopRefreshHourMinute() []int32 {
	if m != nil {
		return m.WorkshopRefreshHourMinute
	}
	return nil
}

func (m *MiscConfigProto) GetMaxDepotEquipCapacity() int32 {
	if m != nil {
		return m.MaxDepotEquipCapacity
	}
	return 0
}

func (m *MiscConfigProto) GetMaxSignLen() int32 {
	if m != nil {
		return m.MaxSignLen
	}
	return 0
}

func (m *MiscConfigProto) GetMaxResourceCollectTimes() int32 {
	if m != nil {
		return m.MaxResourceCollectTimes
	}
	return 0
}

func (m *MiscConfigProto) GetResourceRecoveryDuration() int32 {
	if m != nil {
		return m.ResourceRecoveryDuration
	}
	return 0
}

func (m *MiscConfigProto) GetMaxFavoritePosCount() int32 {
	if m != nil {
		return m.MaxFavoritePosCount
	}
	return 0
}

func (m *MiscConfigProto) GetSeasonDuration() int32 {
	if m != nil {
		return m.SeasonDuration
	}
	return 0
}

func (m *MiscConfigProto) GetSkipFightingHeroLevel() int32 {
	if m != nil {
		return m.SkipFightingHeroLevel
	}
	return 0
}

func (m *MiscConfigProto) GetStrongerCoef() []int32 {
	if m != nil {
		return m.StrongerCoef
	}
	return nil
}

func (m *MiscConfigProto) GetBuildingInitEffect() int32 {
	if m != nil {
		return m.BuildingInitEffect
	}
	return 0
}

func (m *MiscConfigProto) GetExtraResDecayCoef() *AmountProto {
	if m != nil {
		return m.ExtraResDecayCoef
	}
	return nil
}

func (m *MiscConfigProto) GetExtraResDecayDuration() int32 {
	if m != nil {
		return m.ExtraResDecayDuration
	}
	return 0
}

func (m *MiscConfigProto) GetCloseFightGuideDungeonId() int32 {
	if m != nil {
		return m.CloseFightGuideDungeonId
	}
	return 0
}

func (m *MiscConfigProto) GetRefreshRecommendHeroDuration() int32 {
	if m != nil {
		return m.RefreshRecommendHeroDuration
	}
	return 0
}

func (m *MiscConfigProto) GetRefreshRecommendHeroPageSize() int32 {
	if m != nil {
		return m.RefreshRecommendHeroPageSize
	}
	return 0
}

func (m *MiscConfigProto) GetRefreshRecommendHeroMinLevel() int32 {
	if m != nil {
		return m.RefreshRecommendHeroMinLevel
	}
	return 0
}

func (m *MiscConfigProto) GetRefreshRecommendHeroPageCount() int32 {
	if m != nil {
		return m.RefreshRecommendHeroPageCount
	}
	return 0
}

func (m *MiscConfigProto) GetSearchHeroDuration() int32 {
	if m != nil {
		return m.SearchHeroDuration
	}
	return 0
}

func (m *MiscConfigProto) GetRecommendHeroOfflineExpireDuration() int32 {
	if m != nil {
		return m.RecommendHeroOfflineExpireDuration
	}
	return 0
}

func (m *MiscConfigProto) GetChatPrivateMinLevel() int32 {
	if m != nil {
		return m.ChatPrivateMinLevel
	}
	return 0
}

func (m *MiscConfigProto) GetChatDuration() int32 {
	if m != nil {
		return m.ChatDuration
	}
	return 0
}

func (m *MiscConfigProto) GetChatShareDuration() int32 {
	if m != nil {
		return m.ChatShareDuration
	}
	return 0
}

func (m *MiscConfigProto) GetSecondWorkerCost() *CostProto {
	if m != nil {
		return m.SecondWorkerCost
	}
	return nil
}

func (m *MiscConfigProto) GetSecondWorkerUnlockDuration() int32 {
	if m != nil {
		return m.SecondWorkerUnlockDuration
	}
	return 0
}

func (m *MiscConfigProto) GetRedPacketCostPercent() int32 {
	if m != nil {
		return m.RedPacketCostPercent
	}
	return 0
}

func (m *MiscConfigProto) GetRedPacketGuildMemberMinCount() int32 {
	if m != nil {
		return m.RedPacketGuildMemberMinCount
	}
	return 0
}

type GuildConfigProto struct {
	GuildNumPerPage                        int32       `protobuf:"varint,14,opt,name=guild_num_per_page,json=guildNumPerPage,proto3" json:"guild_num_per_page,omitempty"`
	CreateGuildCost                        *CostProto  `protobuf:"bytes,15,opt,name=create_guild_cost,json=createGuildCost" json:"create_guild_cost,omitempty"`
	ChangeGuildNameCost                    *CostProto  `protobuf:"bytes,16,opt,name=change_guild_name_cost,json=changeGuildNameCost" json:"change_guild_name_cost,omitempty"`
	ChangeGuildNameDuration                int32       `protobuf:"varint,17,opt,name=change_guild_name_duration,json=changeGuildNameDuration,proto3" json:"change_guild_name_duration,omitempty"`
	GuildLabelLimitChar                    int32       `protobuf:"varint,18,opt,name=guild_label_limit_char,json=guildLabelLimitChar,proto3" json:"guild_label_limit_char,omitempty"`
	GuildLabelLimitCount                   int32       `protobuf:"varint,19,opt,name=guild_label_limit_count,json=guildLabelLimitCount,proto3" json:"guild_label_limit_count,omitempty"`
	ChangeLeaderCountdownMemberCount       int32       `protobuf:"varint,20,opt,name=change_leader_countdown_member_count,json=changeLeaderCountdownMemberCount,proto3" json:"change_leader_countdown_member_count,omitempty"`
	ChangeLeaderCountdownDuration          int32       `protobuf:"varint,21,opt,name=change_leader_countdown_duration,json=changeLeaderCountdownDuration,proto3" json:"change_leader_countdown_duration,omitempty"`
	ImpeachRequiredMemberCount             int32       `protobuf:"varint,22,opt,name=impeach_required_member_count,json=impeachRequiredMemberCount,proto3" json:"impeach_required_member_count,omitempty"`
	ImpeachLeaderOfflineDuration           int32       `protobuf:"varint,23,opt,name=impeach_leader_offline_duration,json=impeachLeaderOfflineDuration,proto3" json:"impeach_leader_offline_duration,omitempty"`
	ImpeachNpcLeaderHour                   int32       `protobuf:"varint,24,opt,name=impeach_npc_leader_hour,json=impeachNpcLeaderHour,proto3" json:"impeach_npc_leader_hour,omitempty"`
	ImpeachNpcLeaderMinute                 int32       `protobuf:"varint,25,opt,name=impeach_npc_leader_minute,json=impeachNpcLeaderMinute,proto3" json:"impeach_npc_leader_minute,omitempty"`
	UserMaxJoinRequestCount                int32       `protobuf:"varint,26,opt,name=user_max_join_request_count,json=userMaxJoinRequestCount,proto3" json:"user_max_join_request_count,omitempty"`
	GuildMaxInvateCount                    int32       `protobuf:"varint,27,opt,name=guild_max_invate_count,json=guildMaxInvateCount,proto3" json:"guild_max_invate_count,omitempty"`
	DailyMaxKickCount                      int32       `protobuf:"varint,28,opt,name=daily_max_kick_count,json=dailyMaxKickCount,proto3" json:"daily_max_kick_count,omitempty"`
	GuildClassTitleMaxCount                int32       `protobuf:"varint,29,opt,name=guild_class_title_max_count,json=guildClassTitleMaxCount,proto3" json:"guild_class_title_max_count,omitempty"`
	GuildClassTitleMaxCharCount            int32       `protobuf:"varint,30,opt,name=guild_class_title_max_char_count,json=guildClassTitleMaxCharCount,proto3" json:"guild_class_title_max_char_count,omitempty"`
	FirstJoinGuildPrize                    *PrizeProto `protobuf:"bytes,31,opt,name=first_join_guild_prize,json=firstJoinGuildPrize" json:"first_join_guild_prize,omitempty"`
	TextLimitChar                          int32       `protobuf:"varint,32,opt,name=text_limit_char,json=textLimitChar,proto3" json:"text_limit_char,omitempty"`
	InternalTextLimitChar                  int32       `protobuf:"varint,33,opt,name=internal_text_limit_char,json=internalTextLimitChar,proto3" json:"internal_text_limit_char,omitempty"`
	FriendGuildTextLimitChar               int32       `protobuf:"varint,34,opt,name=friend_guild_text_limit_char,json=friendGuildTextLimitChar,proto3" json:"friend_guild_text_limit_char,omitempty"`
	EnemyGuildTextLimitChar                int32       `protobuf:"varint,35,opt,name=enemy_guild_text_limit_char,json=enemyGuildTextLimitChar,proto3" json:"enemy_guild_text_limit_char,omitempty"`
	ContributionPerHelp                    int32       `protobuf:"varint,36,opt,name=contribution_per_help,json=contributionPerHelp,proto3" json:"contribution_per_help,omitempty"`
	ContributionMaxCountPerDay             int32       `protobuf:"varint,37,opt,name=contribution_max_count_per_day,json=contributionMaxCountPerDay,proto3" json:"contribution_max_count_per_day,omitempty"`
	BigBoxCollectableDuration              int32       `protobuf:"varint,38,opt,name=big_box_collectable_duration,json=bigBoxCollectableDuration,proto3" json:"big_box_collectable_duration,omitempty"`
	EventPrizeMaxCount                     int32       `protobuf:"varint,39,opt,name=event_prize_max_count,json=eventPrizeMaxCount,proto3" json:"event_prize_max_count,omitempty"`
	UpdateCountryYuanbao                   int32       `protobuf:"varint,40,opt,name=update_country_yuanbao,json=updateCountryYuanbao,proto3" json:"update_country_yuanbao,omitempty"`
	UpdateCountryCost                      *CostProto  `protobuf:"bytes,46,opt,name=update_country_cost,json=updateCountryCost" json:"update_country_cost,omitempty"`
	UpdateCountryDuration                  int32       `protobuf:"varint,41,opt,name=update_country_duration,json=updateCountryDuration,proto3" json:"update_country_duration,omitempty"`
	UpdateCountryLostPrestigeCoef          int32       `protobuf:"varint,42,opt,name=update_country_lost_prestige_coef,json=updateCountryLostPrestigeCoef,proto3" json:"update_country_lost_prestige_coef,omitempty"`
	GuildDonateNeedHeroLevel               int32       `protobuf:"varint,43,opt,name=guild_donate_need_hero_level,json=guildDonateNeedHeroLevel,proto3" json:"guild_donate_need_hero_level,omitempty"`
	NotifyJoinGuildDuration                int32       `protobuf:"varint,44,opt,name=notify_join_guild_duration,json=notifyJoinGuildDuration,proto3" json:"notify_join_guild_duration,omitempty"`
	NotifyJoinGuildDurationOnOnlineOrLeave int32       `protobuf:"varint,45,opt,name=notify_join_guild_duration_on_online_or_leave,json=notifyJoinGuildDurationOnOnlineOrLeave,proto3" json:"notify_join_guild_duration_on_online_or_leave,omitempty"`
	SearchNoGuildHerosPerPageSize          int32       `protobuf:"varint,48,opt,name=search_no_guild_heros_per_page_size,json=searchNoGuildHerosPerPageSize,proto3" json:"search_no_guild_heros_per_page_size,omitempty"`
	SearchNoGuildHerosDuration             int32       `protobuf:"varint,47,opt,name=search_no_guild_heros_duration,json=searchNoGuildHerosDuration,proto3" json:"search_no_guild_heros_duration,omitempty"`
}

func (m *GuildConfigProto) Reset()                    { *m = GuildConfigProto{} }
func (m *GuildConfigProto) String() string            { return proto.CompactTextString(m) }
func (*GuildConfigProto) ProtoMessage()               {}
func (*GuildConfigProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{5} }

func (m *GuildConfigProto) GetGuildNumPerPage() int32 {
	if m != nil {
		return m.GuildNumPerPage
	}
	return 0
}

func (m *GuildConfigProto) GetCreateGuildCost() *CostProto {
	if m != nil {
		return m.CreateGuildCost
	}
	return nil
}

func (m *GuildConfigProto) GetChangeGuildNameCost() *CostProto {
	if m != nil {
		return m.ChangeGuildNameCost
	}
	return nil
}

func (m *GuildConfigProto) GetChangeGuildNameDuration() int32 {
	if m != nil {
		return m.ChangeGuildNameDuration
	}
	return 0
}

func (m *GuildConfigProto) GetGuildLabelLimitChar() int32 {
	if m != nil {
		return m.GuildLabelLimitChar
	}
	return 0
}

func (m *GuildConfigProto) GetGuildLabelLimitCount() int32 {
	if m != nil {
		return m.GuildLabelLimitCount
	}
	return 0
}

func (m *GuildConfigProto) GetChangeLeaderCountdownMemberCount() int32 {
	if m != nil {
		return m.ChangeLeaderCountdownMemberCount
	}
	return 0
}

func (m *GuildConfigProto) GetChangeLeaderCountdownDuration() int32 {
	if m != nil {
		return m.ChangeLeaderCountdownDuration
	}
	return 0
}

func (m *GuildConfigProto) GetImpeachRequiredMemberCount() int32 {
	if m != nil {
		return m.ImpeachRequiredMemberCount
	}
	return 0
}

func (m *GuildConfigProto) GetImpeachLeaderOfflineDuration() int32 {
	if m != nil {
		return m.ImpeachLeaderOfflineDuration
	}
	return 0
}

func (m *GuildConfigProto) GetImpeachNpcLeaderHour() int32 {
	if m != nil {
		return m.ImpeachNpcLeaderHour
	}
	return 0
}

func (m *GuildConfigProto) GetImpeachNpcLeaderMinute() int32 {
	if m != nil {
		return m.ImpeachNpcLeaderMinute
	}
	return 0
}

func (m *GuildConfigProto) GetUserMaxJoinRequestCount() int32 {
	if m != nil {
		return m.UserMaxJoinRequestCount
	}
	return 0
}

func (m *GuildConfigProto) GetGuildMaxInvateCount() int32 {
	if m != nil {
		return m.GuildMaxInvateCount
	}
	return 0
}

func (m *GuildConfigProto) GetDailyMaxKickCount() int32 {
	if m != nil {
		return m.DailyMaxKickCount
	}
	return 0
}

func (m *GuildConfigProto) GetGuildClassTitleMaxCount() int32 {
	if m != nil {
		return m.GuildClassTitleMaxCount
	}
	return 0
}

func (m *GuildConfigProto) GetGuildClassTitleMaxCharCount() int32 {
	if m != nil {
		return m.GuildClassTitleMaxCharCount
	}
	return 0
}

func (m *GuildConfigProto) GetFirstJoinGuildPrize() *PrizeProto {
	if m != nil {
		return m.FirstJoinGuildPrize
	}
	return nil
}

func (m *GuildConfigProto) GetTextLimitChar() int32 {
	if m != nil {
		return m.TextLimitChar
	}
	return 0
}

func (m *GuildConfigProto) GetInternalTextLimitChar() int32 {
	if m != nil {
		return m.InternalTextLimitChar
	}
	return 0
}

func (m *GuildConfigProto) GetFriendGuildTextLimitChar() int32 {
	if m != nil {
		return m.FriendGuildTextLimitChar
	}
	return 0
}

func (m *GuildConfigProto) GetEnemyGuildTextLimitChar() int32 {
	if m != nil {
		return m.EnemyGuildTextLimitChar
	}
	return 0
}

func (m *GuildConfigProto) GetContributionPerHelp() int32 {
	if m != nil {
		return m.ContributionPerHelp
	}
	return 0
}

func (m *GuildConfigProto) GetContributionMaxCountPerDay() int32 {
	if m != nil {
		return m.ContributionMaxCountPerDay
	}
	return 0
}

func (m *GuildConfigProto) GetBigBoxCollectableDuration() int32 {
	if m != nil {
		return m.BigBoxCollectableDuration
	}
	return 0
}

func (m *GuildConfigProto) GetEventPrizeMaxCount() int32 {
	if m != nil {
		return m.EventPrizeMaxCount
	}
	return 0
}

func (m *GuildConfigProto) GetUpdateCountryYuanbao() int32 {
	if m != nil {
		return m.UpdateCountryYuanbao
	}
	return 0
}

func (m *GuildConfigProto) GetUpdateCountryCost() *CostProto {
	if m != nil {
		return m.UpdateCountryCost
	}
	return nil
}

func (m *GuildConfigProto) GetUpdateCountryDuration() int32 {
	if m != nil {
		return m.UpdateCountryDuration
	}
	return 0
}

func (m *GuildConfigProto) GetUpdateCountryLostPrestigeCoef() int32 {
	if m != nil {
		return m.UpdateCountryLostPrestigeCoef
	}
	return 0
}

func (m *GuildConfigProto) GetGuildDonateNeedHeroLevel() int32 {
	if m != nil {
		return m.GuildDonateNeedHeroLevel
	}
	return 0
}

func (m *GuildConfigProto) GetNotifyJoinGuildDuration() int32 {
	if m != nil {
		return m.NotifyJoinGuildDuration
	}
	return 0
}

func (m *GuildConfigProto) GetNotifyJoinGuildDurationOnOnlineOrLeave() int32 {
	if m != nil {
		return m.NotifyJoinGuildDurationOnOnlineOrLeave
	}
	return 0
}

func (m *GuildConfigProto) GetSearchNoGuildHerosPerPageSize() int32 {
	if m != nil {
		return m.SearchNoGuildHerosPerPageSize
	}
	return 0
}

func (m *GuildConfigProto) GetSearchNoGuildHerosDuration() int32 {
	if m != nil {
		return m.SearchNoGuildHerosDuration
	}
	return 0
}

type I18NDataProto struct {
	Id       string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Language string           `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Pair     []*I18NPairProto `protobuf:"bytes,3,rep,name=pair" json:"pair,omitempty"`
	Display  bool             `protobuf:"varint,4,opt,name=display,proto3" json:"display,omitempty"`
}

func (m *I18NDataProto) Reset()                    { *m = I18NDataProto{} }
func (m *I18NDataProto) String() string            { return proto.CompactTextString(m) }
func (*I18NDataProto) ProtoMessage()               {}
func (*I18NDataProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{6} }

func (m *I18NDataProto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *I18NDataProto) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *I18NDataProto) GetPair() []*I18NPairProto {
	if m != nil {
		return m.Pair
	}
	return nil
}

func (m *I18NDataProto) GetDisplay() bool {
	if m != nil {
		return m.Display
	}
	return false
}

type I18NPairProto struct {
	Key   []string `protobuf:"bytes,22,rep,name=key" json:"key,omitempty"`
	Value string   `protobuf:"bytes,23,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *I18NPairProto) Reset()                    { *m = I18NPairProto{} }
func (m *I18NPairProto) String() string            { return proto.CompactTextString(m) }
func (*I18NPairProto) ProtoMessage()               {}
func (*I18NPairProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{7} }

func (m *I18NPairProto) GetKey() []string {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *I18NPairProto) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 头像proto
type HeadProto struct {
	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IconId                string `protobuf:"bytes,2,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	UnlockNeedCaptainSoul int32  `protobuf:"varint,3,opt,name=unlock_need_captain_soul,json=unlockNeedCaptainSoul,proto3" json:"unlock_need_captain_soul,omitempty"`
	UnlockNeedHeroLevel   int32  `protobuf:"varint,4,opt,name=unlock_need_hero_level,json=unlockNeedHeroLevel,proto3" json:"unlock_need_hero_level,omitempty"`
}

func (m *HeadProto) Reset()                    { *m = HeadProto{} }
func (m *HeadProto) String() string            { return proto.CompactTextString(m) }
func (*HeadProto) ProtoMessage()               {}
func (*HeadProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{8} }

func (m *HeadProto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HeadProto) GetIconId() string {
	if m != nil {
		return m.IconId
	}
	return ""
}

func (m *HeadProto) GetUnlockNeedCaptainSoul() int32 {
	if m != nil {
		return m.UnlockNeedCaptainSoul
	}
	return 0
}

func (m *HeadProto) GetUnlockNeedHeroLevel() int32 {
	if m != nil {
		return m.UnlockNeedHeroLevel
	}
	return 0
}

// 形象proto
type BodyProto struct {
	Id                    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IconId                string `protobuf:"bytes,2,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	UnlockNeedCaptainSoul int32  `protobuf:"varint,3,opt,name=unlock_need_captain_soul,json=unlockNeedCaptainSoul,proto3" json:"unlock_need_captain_soul,omitempty"`
	UnlockNeedHeroLevel   int32  `protobuf:"varint,4,opt,name=unlock_need_hero_level,json=unlockNeedHeroLevel,proto3" json:"unlock_need_hero_level,omitempty"`
}

func (m *BodyProto) Reset()                    { *m = BodyProto{} }
func (m *BodyProto) String() string            { return proto.CompactTextString(m) }
func (*BodyProto) ProtoMessage()               {}
func (*BodyProto) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{9} }

func (m *BodyProto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BodyProto) GetIconId() string {
	if m != nil {
		return m.IconId
	}
	return ""
}

func (m *BodyProto) GetUnlockNeedCaptainSoul() int32 {
	if m != nil {
		return m.UnlockNeedCaptainSoul
	}
	return 0
}

func (m *BodyProto) GetUnlockNeedHeroLevel() int32 {
	if m != nil {
		return m.UnlockNeedHeroLevel
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "proto.Config")
	proto.RegisterType((*GoodsConfigProto)(nil), "proto.GoodsConfigProto")
	proto.RegisterType((*MilitaryConfigProto)(nil), "proto.MilitaryConfigProto")
	proto.RegisterType((*RegionConfigProto)(nil), "proto.RegionConfigProto")
	proto.RegisterType((*MiscConfigProto)(nil), "proto.MiscConfigProto")
	proto.RegisterType((*GuildConfigProto)(nil), "proto.GuildConfigProto")
	proto.RegisterType((*I18NDataProto)(nil), "proto.I18NDataProto")
	proto.RegisterType((*I18NPairProto)(nil), "proto.I18NPairProto")
	proto.RegisterType((*HeadProto)(nil), "proto.HeadProto")
	proto.RegisterType((*BodyProto)(nil), "proto.BodyProto")
}
func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.BuildingLayout) > 0 {
		for _, msg := range m.BuildingLayout {
			dAtA[i] = 0xa
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BuildingData) > 0 {
		for _, msg := range m.BuildingData {
			dAtA[i] = 0x12
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TechnologyData) > 0 {
		for _, msg := range m.TechnologyData {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Gen != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.Gen.Size()))
		n1, err := m.Gen.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.GuildTaskEvaluate) > 0 {
		for _, msg := range m.GuildTaskEvaluate {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildTask) > 0 {
		for _, msg := range m.GuildTask {
			dAtA[i] = 0x32
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Soldier) > 0 {
		for _, msg := range m.Soldier {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Hero) > 0 {
		for _, msg := range m.Hero {
			dAtA[i] = 0x42
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildLevel) > 0 {
		for _, msg := range m.GuildLevel {
			dAtA[i] = 0x4a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildClassLevel) > 0 {
		for _, msg := range m.GuildClassLevel {
			dAtA[i] = 0x52
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BaseLevel) > 0 {
		for _, msg := range m.BaseLevel {
			dAtA[i] = 0x5a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Goods) > 0 {
		for _, msg := range m.Goods {
			dAtA[i] = 0x62
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Equipment) > 0 {
		for _, msg := range m.Equipment {
			dAtA[i] = 0x6a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.EquipmentQuality) > 0 {
		for _, msg := range m.EquipmentQuality {
			dAtA[i] = 0x72
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.EquipmentRefined) > 0 {
		for _, msg := range m.EquipmentRefined {
			dAtA[i] = 0x7a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.EquipmentTaoz) > 0 {
		for _, msg := range m.EquipmentTaoz {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainLevel) > 0 {
		for _, msg := range m.CaptainLevel {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainAbility) > 0 {
		for _, msg := range m.CaptainAbility {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TrainingLevel) > 0 {
		for _, msg := range m.TrainingLevel {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Tower) > 0 {
		for _, msg := range m.Tower {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.MainTask) > 0 {
		for _, msg := range m.MainTask {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BranchTask) > 0 {
		for _, msg := range m.BranchTask {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TaskBox) > 0 {
		for _, msg := range m.TaskBox {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainSoulData) > 0 {
		for _, msg := range m.CaptainSoulData {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FishingShow) > 0 {
		for _, msg := range m.FishingShow {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FishingCost) > 0 {
		for _, msg := range m.FishingCost {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainSoulFetters) > 0 {
		for _, msg := range m.CaptainSoulFetters {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TieJiangPuLevel) > 0 {
		for _, msg := range m.TieJiangPuLevel {
			dAtA[i] = 0xe2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.EquipCombine) > 0 {
		for _, msg := range m.EquipCombine {
			dAtA[i] = 0xea
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainRebirthLevel) > 0 {
		for _, msg := range m.CaptainRebirthLevel {
			dAtA[i] = 0xf2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildDonate) > 0 {
		for _, msg := range m.GuildDonate {
			dAtA[i] = 0xfa
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.SpellConfig) > 0 {
		for _, msg := range m.SpellConfig {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Gem) > 0 {
		for _, msg := range m.Gem {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GemSlot) > 0 {
		for _, msg := range m.GemSlot {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.RaceData) > 0 {
		for _, msg := range m.RaceData {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Shop) > 0 {
		for _, msg := range m.Shop {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildClassTitle) > 0 {
		for _, msg := range m.GuildClassTitle {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.SecretTower) > 0 {
		for _, msg := range m.SecretTower {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.SecretTowerMisc != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SecretTowerMisc.Size()))
		n2, err := m.SecretTowerMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.DefaultCountry) > 0 {
		for _, msg := range m.DefaultCountry {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildTarget) > 0 {
		for _, msg := range m.GuildTarget {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.RankMisc != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RankMisc.Size()))
		n3, err := m.RankMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.BaiZhanMisc != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.BaiZhanMisc.Size()))
		n4, err := m.BaiZhanMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if len(m.JunXianLevel) > 0 {
		for _, msg := range m.JunXianLevel {
			dAtA[i] = 0xf2
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.JunXianLevelPrize) > 0 {
		for _, msg := range m.JunXianLevelPrize {
			dAtA[i] = 0xfa
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.DungeonChapter) > 0 {
		for _, msg := range m.DungeonChapter {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.DungeonMisc != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DungeonMisc.Size()))
		n5, err := m.DungeonMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.CountryMisc != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CountryMisc.Size()))
		n6, err := m.CountryMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if len(m.CityEventData) > 0 {
		for _, msg := range m.CityEventData {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.CityEventMisc != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CityEventMisc.Size()))
		n7, err := m.CityEventMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.TagMisc != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TagMisc.Size()))
		n8, err := m.TagMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if len(m.Strategy) > 0 {
		for _, msg := range m.Strategy {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainGenerator) > 0 {
		for _, msg := range m.CaptainGenerator {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.JiuGuanData) > 0 {
		for _, msg := range m.JiuGuanData {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.JiuGuanMisc != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.JiuGuanMisc.Size()))
		n9, err := m.JiuGuanMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.GoodsConfig != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GoodsConfig.Size()))
		n10, err := m.GoodsConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.MilitaryConfig != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MilitaryConfig.Size()))
		n11, err := m.MilitaryConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.RegionConfig != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RegionConfig.Size()))
		n12, err := m.RegionConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.MiscConfig != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiscConfig.Size()))
		n13, err := m.MiscConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.GuildConfig != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildConfig.Size()))
		n14, err := m.GuildConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	if len(m.JunYingLevelData) > 0 {
		for _, msg := range m.JunYingLevelData {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BaYeTask) > 0 {
		for _, msg := range m.BaYeTask {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BaYeStage) > 0 {
		for _, msg := range m.BaYeStage {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.CaptainSoulMisc != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CaptainSoulMisc.Size()))
		n15, err := m.CaptainSoulMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	if len(m.AchieveTask) > 0 {
		for _, msg := range m.AchieveTask {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ActiveDegreeTask) > 0 {
		for _, msg := range m.ActiveDegreeTask {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ActiveDegreePrize) > 0 {
		for _, msg := range m.ActiveDegreePrize {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.RegionData) > 0 {
		for _, msg := range m.RegionData {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.NpcBaseData) > 0 {
		for _, msg := range m.NpcBaseData {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuanFuLevelData) > 0 {
		for _, msg := range m.GuanFuLevelData {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BuildingUnlockData) > 0 {
		for _, msg := range m.BuildingUnlockData {
			dAtA[i] = 0xe2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.FunctionOpenDatas) > 0 {
		for _, msg := range m.FunctionOpenDatas {
			dAtA[i] = 0xea
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuiZuLevelDatas) > 0 {
		for _, msg := range m.GuiZuLevelDatas {
			dAtA[i] = 0xf2
			i++
			dAtA[i] = 0x4
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.DiaoKeMiscData != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DiaoKeMiscData.Size()))
		n16, err := m.DiaoKeMiscData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	if len(m.Icons) > 0 {
		for _, msg := range m.Icons {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.PveTroopDatas) > 0 {
		for _, msg := range m.PveTroopDatas {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.OuterCityDatas) > 0 {
		for _, msg := range m.OuterCityDatas {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.OuterCityLayoutDatas) > 0 {
		for _, msg := range m.OuterCityLayoutDatas {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CountdownPrizeDesc) > 0 {
		for _, msg := range m.CountdownPrizeDesc {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildEventPrize) > 0 {
		for _, msg := range m.GuildEventPrize {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildBigBox) > 0 {
		for _, msg := range m.GuildBigBox {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.MultiLevelNpcData) > 0 {
		for _, msg := range m.MultiLevelNpcData {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.MultiLevelNpcType) > 0 {
		for _, msg := range m.MultiLevelNpcType {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TreasuryTreeData) > 0 {
		for _, msg := range m.TreasuryTreeData {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.GradonConfig != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GradonConfig.Size()))
		n17, err := m.GradonConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	if len(m.CaptainSeeker) > 0 {
		for _, msg := range m.CaptainSeeker {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.JunYingMisc != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.JunYingMisc.Size()))
		n18, err := m.JunYingMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	if len(m.ZhengWuRefresh) > 0 {
		for _, msg := range m.ZhengWuRefresh {
			dAtA[i] = 0xea
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ZhengWuMisc != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x5
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ZhengWuMisc.Size()))
		n19, err := m.ZhengWuMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	if len(m.AchieveTaskStarPrize) > 0 {
		for _, msg := range m.AchieveTaskStarPrize {
			dAtA[i] = 0xfa
			i++
			dAtA[i] = 0x5
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.TaskMiscData != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TaskMiscData.Size()))
		n20, err := m.TaskMiscData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	if len(m.GuildTechnology) > 0 {
		for _, msg := range m.GuildTechnology {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.GuildPermissionShow) > 0 {
		for _, msg := range m.GuildPermissionShow {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ZhanJiangChapter) > 0 {
		for _, msg := range m.ZhanJiangChapter {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Setting) > 0 {
		for _, msg := range m.Setting {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.I18N) > 0 {
		for _, msg := range m.I18N {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.StrongerData) > 0 {
		for _, msg := range m.StrongerData {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.CaptainOfficial) > 0 {
		for _, msg := range m.CaptainOfficial {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Question) > 0 {
		for _, msg := range m.Question {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.QuestionSaying) > 0 {
		for _, msg := range m.QuestionSaying {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.QuestionPrize) > 0 {
		for _, msg := range m.QuestionPrize {
			dAtA[i] = 0xd2
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.QuestionMisc != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.QuestionMisc.Size()))
		n21, err := m.QuestionMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	if len(m.SurveyDatas) > 0 {
		for _, msg := range m.SurveyDatas {
			dAtA[i] = 0xe2
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.AmountShowSortDatas) > 0 {
		for _, msg := range m.AmountShowSortDatas {
			dAtA[i] = 0xea
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.ResistXiongNuMisc != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ResistXiongNuMisc.Size()))
		n22, err := m.ResistXiongNuMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	if len(m.ResistXiongNuData) > 0 {
		for _, msg := range m.ResistXiongNuData {
			dAtA[i] = 0xfa
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ResistXiongNuScore) > 0 {
		for _, msg := range m.ResistXiongNuScore {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.WorkshopRefreshCosts) > 0 {
		for _, msg := range m.WorkshopRefreshCosts {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Heads) > 0 {
		for _, msg := range m.Heads {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Bodys) > 0 {
		for _, msg := range m.Bodys {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BwzlTask) > 0 {
		for _, msg := range m.BwzlTask {
			dAtA[i] = 0xa2
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.BwzlPrize) > 0 {
		for _, msg := range m.BwzlPrize {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.SeasonDatas) > 0 {
		for _, msg := range m.SeasonDatas {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.SeasonMisc != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SeasonMisc.Size()))
		n23, err := m.SeasonMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	if m.ZhanJiangMisc != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ZhanJiangMisc.Size()))
		n24, err := m.ZhanJiangMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	if len(m.FarmResConfig) > 0 {
		for _, msg := range m.FarmResConfig {
			dAtA[i] = 0xca
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.FarmMiscConfig != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FarmMiscConfig.Size()))
		n25, err := m.FarmMiscConfig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	if len(m.GuildPrestigePrize) > 0 {
		for _, msg := range m.GuildPrestigePrize {
			dAtA[i] = 0xda
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.DianquanMisc != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DianquanMisc.Size()))
		n26, err := m.DianquanMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	if len(m.GoodsQuality) > 0 {
		for _, msg := range m.GoodsQuality {
			dAtA[i] = 0xea
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.HebiPrize) > 0 {
		for _, msg := range m.HebiPrize {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x8
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.HebiMisc != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.HebiMisc.Size()))
		n27, err := m.HebiMisc.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	if len(m.TeachData) > 0 {
		for _, msg := range m.TeachData {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x8
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.TimeLimitGiftGroups) > 0 {
		for _, msg := range m.TimeLimitGiftGroups {
			dAtA[i] = 0x9a
			i++
			dAtA[i] = 0x8
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.RandomEvent) > 0 {
		for _, msg := range m.RandomEvent {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x8
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *GoodsConfigProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GoodsConfigProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EquipmentUpgradeGoods != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.EquipmentUpgradeGoods))
	}
	if m.EquipmentRefinedGoods != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.EquipmentRefinedGoods))
	}
	if len(m.CaptainRefinedGoods) > 0 {
		for _, num := range m.CaptainRefinedGoods {
			dAtA[i] = 0x18
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.ChangeCaptainRaceGoods != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeCaptainRaceGoods))
	}
	if len(m.CaptainRebirthGoods) > 0 {
		for _, num := range m.CaptainRebirthGoods {
			dAtA[i] = 0x28
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.MoveBaseGoods != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MoveBaseGoods))
	}
	if m.RandomMoveBaseGoods != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RandomMoveBaseGoods))
	}
	if m.MoveTentGoods != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MoveTentGoods))
	}
	if len(m.MianGoods) > 0 {
		for _, num := range m.MianGoods {
			dAtA[i] = 0x48
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.JiuGuanExpCaptainRefinedGoods) > 0 {
		for _, num := range m.JiuGuanExpCaptainRefinedGoods {
			dAtA[i] = 0x50
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.ExpCaptainSoulUpgradeGoods) > 0 {
		for _, num := range m.ExpCaptainSoulUpgradeGoods {
			dAtA[i] = 0x58
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.RandomMoveTentGoods != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RandomMoveTentGoods))
	}
	if m.GuildMoveBaseGoods != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildMoveBaseGoods))
	}
	if len(m.SpeedUpGoods) > 0 {
		for _, num := range m.SpeedUpGoods {
			dAtA[i] = 0x70
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TrainExpGoods) > 0 {
		for _, num := range m.TrainExpGoods {
			dAtA[i] = 0x78
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.BuildingCdrGoods) > 0 {
		for _, num := range m.BuildingCdrGoods {
			dAtA[i] = 0x80
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TechCdrGoods) > 0 {
		for _, num := range m.TechCdrGoods {
			dAtA[i] = 0x88
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.SpecGoods) > 0 {
		for _, num := range m.SpecGoods {
			dAtA[i] = 0x90
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.WorkshopCdrGoods) > 0 {
		for _, num := range m.WorkshopCdrGoods {
			dAtA[i] = 0x98
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.GoldGoods) > 0 {
		for _, num := range m.GoldGoods {
			dAtA[i] = 0xa0
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.GoldNormalShopGoods) > 0 {
		for _, num := range m.GoldNormalShopGoods {
			dAtA[i] = 0xa8
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.StoneGoods) > 0 {
		for _, num := range m.StoneGoods {
			dAtA[i] = 0xb0
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.StoneNormalShopGoods) > 0 {
		for _, num := range m.StoneNormalShopGoods {
			dAtA[i] = 0xb8
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.GongXunGoods) > 0 {
		for _, num := range m.GongXunGoods {
			dAtA[i] = 0xc0
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.MultiLevelNpcTimesGoods != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MultiLevelNpcTimesGoods))
	}
	if m.FishGoods != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FishGoods))
	}
	if len(m.CopyDefenserGoods) > 0 {
		for _, num := range m.CopyDefenserGoods {
			dAtA[i] = 0xd8
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TigerGoods) > 0 {
		for _, num := range m.TigerGoods {
			dAtA[i] = 0xe0
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.InvaseHeroTimesGoods != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvaseHeroTimesGoods))
	}
	if m.IndecomposableBaowuCount != 0 {
		dAtA[i] = 0xf0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.IndecomposableBaowuCount))
	}
	if len(m.BuffGoods) > 0 {
		for _, num := range m.BuffGoods {
			dAtA[i] = 0xf8
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TowerGoods) > 0 {
		for _, num := range m.TowerGoods {
			dAtA[i] = 0x80
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.ZhanjiangGoods) > 0 {
		for _, num := range m.ZhanjiangGoods {
			dAtA[i] = 0x88
			i++
			dAtA[i] = 0x2
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.JunTuanNpcTimesGoods != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.JunTuanNpcTimesGoods))
	}
	return i, nil
}

func (m *MilitaryConfigProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MilitaryConfigProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.GenSeekCount != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GenSeekCount))
	}
	if m.SeekDuration != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SeekDuration))
	}
	if m.SeekMaxTimes != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SeekMaxTimes))
	}
	if m.DefenserCount != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DefenserCount))
	}
	if m.FireLevelLimit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FireLevelLimit))
	}
	if len(m.TrainingHeroLevel) > 0 {
		for _, num := range m.TrainingHeroLevel {
			dAtA[i] = 0x30
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TrainingInitLevel) > 0 {
		for _, num := range m.TrainingInitLevel {
			dAtA[i] = 0x38
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TrainingLevelLimit) > 0 {
		for _, num := range m.TrainingLevelLimit {
			dAtA[i] = 0x40
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if len(m.TroopsUnlockLevel) > 0 {
		for _, num := range m.TroopsUnlockLevel {
			dAtA[i] = 0x48
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.TrainingMaxDuration != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TrainingMaxDuration))
	}
	if m.CaptainInitTrainExp != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CaptainInitTrainExp))
	}
	return i, nil
}

func (m *RegionConfigProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegionConfigProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MapXLen != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MapXLen))
	}
	if m.MapYLen != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MapYLen))
	}
	if m.TentBuildingDuration != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TentBuildingDuration))
	}
	if m.MiaoTentBuildingDuration != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoTentBuildingDuration))
	}
	if m.MiaoTentBuildingCost != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoTentBuildingCost.Size()))
		n28, err := m.MiaoTentBuildingCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	if m.WhiteFlagDuration != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.WhiteFlagDuration))
	}
	if m.MultiLevelNpcMaxTimes != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MultiLevelNpcMaxTimes))
	}
	if m.GuildRegionCenterX != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildRegionCenterX))
	}
	if m.GuildRegionCenterY != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildRegionCenterY))
	}
	if m.RestoreHomeProsperity != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RestoreHomeProsperity))
	}
	if m.RestoreHomeProsperityDuration != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RestoreHomeProsperityDuration))
	}
	if m.DefaultDiaoKe != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DefaultDiaoKe.Size()))
		n29, err := m.DefaultDiaoKe.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	if m.MiaoInvestigateCdCost != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoInvestigateCdCost.Size()))
		n30, err := m.MiaoInvestigateCdCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	if m.InvestigateMailTimeout != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvestigateMailTimeout))
	}
	if m.InvestigateCd != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvestigateCd))
	}
	if m.BasicTroopMoveVelocityPerSecond != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.BasicTroopMoveVelocityPerSecond))
	}
	if m.Edge != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.Edge))
	}
	if m.NewHeroMianDuration != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.NewHeroMianDuration))
	}
	if m.NewHeroRemoveMianBaseLevel != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.NewHeroRemoveMianBaseLevel))
	}
	if m.RebornMianDuration != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RebornMianDuration))
	}
	if m.MultiLevelNpcRecoveryDuration != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MultiLevelNpcRecoveryDuration))
	}
	if m.EdgeNotHomeLen != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.EdgeNotHomeLen))
	}
	if m.InvestigateMaxDistance != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvestigateMaxDistance))
	}
	if m.AstDefendRestoreHomeProsperity != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.AstDefendRestoreHomeProsperity))
	}
	if m.AstDefendRestoreHomeProsperityAmount != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.AstDefendRestoreHomeProsperityAmount.Size()))
		n31, err := m.AstDefendRestoreHomeProsperityAmount.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	if m.InvestigateCost != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvestigateCost.Size()))
		n32, err := m.InvestigateCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	if m.InvestigateSpeedup != 0 {
		dAtA[i] = 0xf8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InvestigateSpeedup))
	}
	return i, nil
}

func (m *MiscConfigProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MiscConfigProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MailMinBatchCount != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MailMinBatchCount))
	}
	if m.TowerChallengeMaxTimes != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TowerChallengeMaxTimes))
	}
	if m.MailMaxBatchCount != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MailMaxBatchCount))
	}
	if m.ChangeHeroNameDuration != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeHeroNameDuration))
	}
	if m.ChangeCaptainNameCost != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeCaptainNameCost.Size()))
		n33, err := m.ChangeCaptainNameCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	if len(m.ChangeHeroNameYuanbaoCost) > 0 {
		for _, num := range m.ChangeHeroNameYuanbaoCost {
			dAtA[i] = 0x38
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.ChangeCaptainRaceDuration != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeCaptainRaceDuration))
	}
	if m.ChangeCaptainRaceLevel != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeCaptainRaceLevel))
	}
	if m.MiaoBuildingWorkerDuration != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoBuildingWorkerDuration))
	}
	if m.MiaoBuildingWorkerCost != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoBuildingWorkerCost.Size()))
		n34, err := m.MiaoBuildingWorkerCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	if m.MiaoTechWorkerDuration != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoTechWorkerDuration))
	}
	if m.MiaoTechWorkerCost != nil {
		dAtA[i] = 0x72
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoTechWorkerCost.Size()))
		n35, err := m.MiaoTechWorkerCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	if m.StrategyRestoreDuration != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.StrategyRestoreDuration))
	}
	if m.FirstChangeHeroNamePrize != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FirstChangeHeroNamePrize.Size()))
		n36, err := m.FirstChangeHeroNamePrize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	if m.MondayZeroOClock != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MondayZeroOClock))
	}
	if m.MiaoCaptainRebirthDuration != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoCaptainRebirthDuration))
	}
	if m.MiaoCaptainRebirthCost != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoCaptainRebirthCost.Size()))
		n37, err := m.MiaoCaptainRebirthCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	if m.MiaoWorkshopDuration != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoWorkshopDuration))
	}
	if m.MiaoWorkshopCost != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MiaoWorkshopCost.Size()))
		n38, err := m.MiaoWorkshopCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	if m.WorldChatLevel != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.WorldChatLevel))
	}
	if m.WorldChatDuration != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.WorldChatDuration))
	}
	if m.ChatTextLength != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChatTextLength))
	}
	if len(m.ChangeHeroNameCost) > 0 {
		for _, msg := range m.ChangeHeroNameCost {
			dAtA[i] = 0xe2
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.DailyResetHour != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DailyResetHour))
	}
	if m.DailyResetMinute != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DailyResetMinute))
	}
	if len(m.WorkshopRefreshHourMinute) > 0 {
		for _, num := range m.WorkshopRefreshHourMinute {
			dAtA[i] = 0xb8
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.MaxDepotEquipCapacity != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MaxDepotEquipCapacity))
	}
	if m.MaxSignLen != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MaxSignLen))
	}
	if m.MaxResourceCollectTimes != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MaxResourceCollectTimes))
	}
	if m.ResourceRecoveryDuration != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ResourceRecoveryDuration))
	}
	if m.MaxFavoritePosCount != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.MaxFavoritePosCount))
	}
	if m.SeasonDuration != 0 {
		dAtA[i] = 0xf0
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SeasonDuration))
	}
	if m.SkipFightingHeroLevel != 0 {
		dAtA[i] = 0xf8
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SkipFightingHeroLevel))
	}
	if len(m.StrongerCoef) > 0 {
		for _, num := range m.StrongerCoef {
			dAtA[i] = 0x80
			i++
			dAtA[i] = 0x7
			i++
			i = encodeVarintConfig(dAtA, i, uint64(num))
		}
	}
	if m.BroadcastGoods != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.BroadcastGoods))
	}
	if m.BuildingInitEffect != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.BuildingInitEffect))
	}
	if m.ExtraResDecayCoef != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ExtraResDecayCoef.Size()))
		n39, err := m.ExtraResDecayCoef.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	if m.ExtraResDecayDuration != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ExtraResDecayDuration))
	}
	if m.CloseFightGuideDungeonId != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CloseFightGuideDungeonId))
	}
	if m.RefreshRecommendHeroDuration != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RefreshRecommendHeroDuration))
	}
	if m.RefreshRecommendHeroPageSize != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RefreshRecommendHeroPageSize))
	}
	if m.RefreshRecommendHeroMinLevel != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RefreshRecommendHeroMinLevel))
	}
	if m.RefreshRecommendHeroPageCount != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RefreshRecommendHeroPageCount))
	}
	if m.SearchHeroDuration != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SearchHeroDuration))
	}
	if m.ChatPrivateMinLevel != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChatPrivateMinLevel))
	}
	if m.ChatDuration != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChatDuration))
	}
	if m.ChatShareDuration != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChatShareDuration))
	}
	if m.SecondWorkerCost != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SecondWorkerCost.Size()))
		n40, err := m.SecondWorkerCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	if m.SecondWorkerUnlockDuration != 0 {
		dAtA[i] = 0xf8
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SecondWorkerUnlockDuration))
	}
	if m.RedPacketCostPercent != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RedPacketCostPercent))
	}
	if m.RedPacketGuildMemberMinCount != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RedPacketGuildMemberMinCount))
	}
	if m.WeeklyResetHour != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.WeeklyResetHour))
	}
	if m.WeeklyResetMinute != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.WeeklyResetMinute))
	}
	if m.RecommendHeroOfflineExpireDuration != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.RecommendHeroOfflineExpireDuration))
	}
	return i, nil
}

func (m *GuildConfigProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildConfigProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.GuildNumPerPage != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildNumPerPage))
	}
	if m.CreateGuildCost != nil {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.CreateGuildCost.Size()))
		n41, err := m.CreateGuildCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	if m.ChangeGuildNameCost != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeGuildNameCost.Size()))
		n42, err := m.ChangeGuildNameCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	if m.ChangeGuildNameDuration != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeGuildNameDuration))
	}
	if m.GuildLabelLimitChar != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildLabelLimitChar))
	}
	if m.GuildLabelLimitCount != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildLabelLimitCount))
	}
	if m.ChangeLeaderCountdownMemberCount != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeLeaderCountdownMemberCount))
	}
	if m.ChangeLeaderCountdownDuration != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ChangeLeaderCountdownDuration))
	}
	if m.ImpeachRequiredMemberCount != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ImpeachRequiredMemberCount))
	}
	if m.ImpeachLeaderOfflineDuration != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ImpeachLeaderOfflineDuration))
	}
	if m.ImpeachNpcLeaderHour != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ImpeachNpcLeaderHour))
	}
	if m.ImpeachNpcLeaderMinute != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ImpeachNpcLeaderMinute))
	}
	if m.UserMaxJoinRequestCount != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UserMaxJoinRequestCount))
	}
	if m.GuildMaxInvateCount != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildMaxInvateCount))
	}
	if m.DailyMaxKickCount != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.DailyMaxKickCount))
	}
	if m.GuildClassTitleMaxCount != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildClassTitleMaxCount))
	}
	if m.GuildClassTitleMaxCharCount != 0 {
		dAtA[i] = 0xf0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildClassTitleMaxCharCount))
	}
	if m.FirstJoinGuildPrize != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FirstJoinGuildPrize.Size()))
		n43, err := m.FirstJoinGuildPrize.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	if m.TextLimitChar != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.TextLimitChar))
	}
	if m.InternalTextLimitChar != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.InternalTextLimitChar))
	}
	if m.FriendGuildTextLimitChar != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.FriendGuildTextLimitChar))
	}
	if m.EnemyGuildTextLimitChar != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.EnemyGuildTextLimitChar))
	}
	if m.ContributionPerHelp != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ContributionPerHelp))
	}
	if m.ContributionMaxCountPerDay != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.ContributionMaxCountPerDay))
	}
	if m.BigBoxCollectableDuration != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.BigBoxCollectableDuration))
	}
	if m.EventPrizeMaxCount != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.EventPrizeMaxCount))
	}
	if m.UpdateCountryYuanbao != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UpdateCountryYuanbao))
	}
	if m.UpdateCountryDuration != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UpdateCountryDuration))
	}
	if m.UpdateCountryLostPrestigeCoef != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UpdateCountryLostPrestigeCoef))
	}
	if m.GuildDonateNeedHeroLevel != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.GuildDonateNeedHeroLevel))
	}
	if m.NotifyJoinGuildDuration != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.NotifyJoinGuildDuration))
	}
	if m.NotifyJoinGuildDurationOnOnlineOrLeave != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.NotifyJoinGuildDurationOnOnlineOrLeave))
	}
	if m.UpdateCountryCost != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UpdateCountryCost.Size()))
		n44, err := m.UpdateCountryCost.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n44
	}
	if m.SearchNoGuildHerosDuration != 0 {
		dAtA[i] = 0xf8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SearchNoGuildHerosDuration))
	}
	if m.SearchNoGuildHerosPerPageSize != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.SearchNoGuildHerosPerPageSize))
	}
	return i, nil
}

func (m *I18NDataProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *I18NDataProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Language) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.Language)))
		i += copy(dAtA[i:], m.Language)
	}
	if len(m.Pair) > 0 {
		for _, msg := range m.Pair {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintConfig(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Display {
		dAtA[i] = 0x20
		i++
		if m.Display {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *I18NPairProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *I18NPairProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Key) > 0 {
		for _, s := range m.Key {
			dAtA[i] = 0xb2
			i++
			dAtA[i] = 0x1
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	return i, nil
}

func (m *HeadProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeadProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.IconId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.IconId)))
		i += copy(dAtA[i:], m.IconId)
	}
	if m.UnlockNeedCaptainSoul != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UnlockNeedCaptainSoul))
	}
	if m.UnlockNeedHeroLevel != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UnlockNeedHeroLevel))
	}
	return i, nil
}

func (m *BodyProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BodyProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.Id))
	}
	if len(m.IconId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintConfig(dAtA, i, uint64(len(m.IconId)))
		i += copy(dAtA[i:], m.IconId)
	}
	if m.UnlockNeedCaptainSoul != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UnlockNeedCaptainSoul))
	}
	if m.UnlockNeedHeroLevel != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintConfig(dAtA, i, uint64(m.UnlockNeedHeroLevel))
	}
	return i, nil
}

func encodeFixed64Config(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Config(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintConfig(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Config) Size() (n int) {
	var l int
	_ = l
	if len(m.BuildingLayout) > 0 {
		for _, e := range m.BuildingLayout {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BuildingData) > 0 {
		for _, e := range m.BuildingData {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TechnologyData) > 0 {
		for _, e := range m.TechnologyData {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if m.Gen != nil {
		l = m.Gen.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if len(m.GuildTaskEvaluate) > 0 {
		for _, e := range m.GuildTaskEvaluate {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildTask) > 0 {
		for _, e := range m.GuildTask {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Soldier) > 0 {
		for _, e := range m.Soldier {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Hero) > 0 {
		for _, e := range m.Hero {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildLevel) > 0 {
		for _, e := range m.GuildLevel {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildClassLevel) > 0 {
		for _, e := range m.GuildClassLevel {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BaseLevel) > 0 {
		for _, e := range m.BaseLevel {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Goods) > 0 {
		for _, e := range m.Goods {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Equipment) > 0 {
		for _, e := range m.Equipment {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.EquipmentQuality) > 0 {
		for _, e := range m.EquipmentQuality {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.EquipmentRefined) > 0 {
		for _, e := range m.EquipmentRefined {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.EquipmentTaoz) > 0 {
		for _, e := range m.EquipmentTaoz {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainLevel) > 0 {
		for _, e := range m.CaptainLevel {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainAbility) > 0 {
		for _, e := range m.CaptainAbility {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TrainingLevel) > 0 {
		for _, e := range m.TrainingLevel {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Tower) > 0 {
		for _, e := range m.Tower {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.MainTask) > 0 {
		for _, e := range m.MainTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BranchTask) > 0 {
		for _, e := range m.BranchTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TaskBox) > 0 {
		for _, e := range m.TaskBox {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainSoulData) > 0 {
		for _, e := range m.CaptainSoulData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.FishingShow) > 0 {
		for _, e := range m.FishingShow {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.FishingCost) > 0 {
		for _, e := range m.FishingCost {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainSoulFetters) > 0 {
		for _, e := range m.CaptainSoulFetters {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TieJiangPuLevel) > 0 {
		for _, e := range m.TieJiangPuLevel {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.EquipCombine) > 0 {
		for _, e := range m.EquipCombine {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainRebirthLevel) > 0 {
		for _, e := range m.CaptainRebirthLevel {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildDonate) > 0 {
		for _, e := range m.GuildDonate {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.SpellConfig) > 0 {
		for _, e := range m.SpellConfig {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Gem) > 0 {
		for _, e := range m.Gem {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GemSlot) > 0 {
		for _, e := range m.GemSlot {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.RaceData) > 0 {
		for _, e := range m.RaceData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Shop) > 0 {
		for _, e := range m.Shop {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildClassTitle) > 0 {
		for _, e := range m.GuildClassTitle {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.SecretTower) > 0 {
		for _, e := range m.SecretTower {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.SecretTowerMisc != nil {
		l = m.SecretTowerMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.DefaultCountry) > 0 {
		for _, e := range m.DefaultCountry {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildTarget) > 0 {
		for _, e := range m.GuildTarget {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.RankMisc != nil {
		l = m.RankMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.BaiZhanMisc != nil {
		l = m.BaiZhanMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.JunXianLevel) > 0 {
		for _, e := range m.JunXianLevel {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.JunXianLevelPrize) > 0 {
		for _, e := range m.JunXianLevelPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.DungeonChapter) > 0 {
		for _, e := range m.DungeonChapter {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.DungeonMisc != nil {
		l = m.DungeonMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.CountryMisc != nil {
		l = m.CountryMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.CityEventData) > 0 {
		for _, e := range m.CityEventData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.CityEventMisc != nil {
		l = m.CityEventMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.TagMisc != nil {
		l = m.TagMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.Strategy) > 0 {
		for _, e := range m.Strategy {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainGenerator) > 0 {
		for _, e := range m.CaptainGenerator {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.JiuGuanData) > 0 {
		for _, e := range m.JiuGuanData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.JiuGuanMisc != nil {
		l = m.JiuGuanMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.GoodsConfig != nil {
		l = m.GoodsConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.MilitaryConfig != nil {
		l = m.MilitaryConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.RegionConfig != nil {
		l = m.RegionConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.MiscConfig != nil {
		l = m.MiscConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.GuildConfig != nil {
		l = m.GuildConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.JunYingLevelData) > 0 {
		for _, e := range m.JunYingLevelData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BaYeTask) > 0 {
		for _, e := range m.BaYeTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BaYeStage) > 0 {
		for _, e := range m.BaYeStage {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.CaptainSoulMisc != nil {
		l = m.CaptainSoulMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.AchieveTask) > 0 {
		for _, e := range m.AchieveTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.ActiveDegreeTask) > 0 {
		for _, e := range m.ActiveDegreeTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.ActiveDegreePrize) > 0 {
		for _, e := range m.ActiveDegreePrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.RegionData) > 0 {
		for _, e := range m.RegionData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.NpcBaseData) > 0 {
		for _, e := range m.NpcBaseData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuanFuLevelData) > 0 {
		for _, e := range m.GuanFuLevelData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BuildingUnlockData) > 0 {
		for _, e := range m.BuildingUnlockData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.FunctionOpenDatas) > 0 {
		for _, e := range m.FunctionOpenDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuiZuLevelDatas) > 0 {
		for _, e := range m.GuiZuLevelDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.DiaoKeMiscData != nil {
		l = m.DiaoKeMiscData.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.Icons) > 0 {
		for _, e := range m.Icons {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.PveTroopDatas) > 0 {
		for _, e := range m.PveTroopDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.OuterCityDatas) > 0 {
		for _, e := range m.OuterCityDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.OuterCityLayoutDatas) > 0 {
		for _, e := range m.OuterCityLayoutDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CountdownPrizeDesc) > 0 {
		for _, e := range m.CountdownPrizeDesc {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildEventPrize) > 0 {
		for _, e := range m.GuildEventPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildBigBox) > 0 {
		for _, e := range m.GuildBigBox {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.MultiLevelNpcData) > 0 {
		for _, e := range m.MultiLevelNpcData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.MultiLevelNpcType) > 0 {
		for _, e := range m.MultiLevelNpcType {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TreasuryTreeData) > 0 {
		for _, e := range m.TreasuryTreeData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.GradonConfig != nil {
		l = m.GradonConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.CaptainSeeker) > 0 {
		for _, e := range m.CaptainSeeker {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.JunYingMisc != nil {
		l = m.JunYingMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.ZhengWuRefresh) > 0 {
		for _, e := range m.ZhengWuRefresh {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.ZhengWuMisc != nil {
		l = m.ZhengWuMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.AchieveTaskStarPrize) > 0 {
		for _, e := range m.AchieveTaskStarPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.TaskMiscData != nil {
		l = m.TaskMiscData.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.GuildTechnology) > 0 {
		for _, e := range m.GuildTechnology {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.GuildPermissionShow) > 0 {
		for _, e := range m.GuildPermissionShow {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.ZhanJiangChapter) > 0 {
		for _, e := range m.ZhanJiangChapter {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Setting) > 0 {
		for _, e := range m.Setting {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.I18N) > 0 {
		for _, e := range m.I18N {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.StrongerData) > 0 {
		for _, e := range m.StrongerData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.CaptainOfficial) > 0 {
		for _, e := range m.CaptainOfficial {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Question) > 0 {
		for _, e := range m.Question {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.QuestionSaying) > 0 {
		for _, e := range m.QuestionSaying {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.QuestionPrize) > 0 {
		for _, e := range m.QuestionPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.QuestionMisc != nil {
		l = m.QuestionMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.SurveyDatas) > 0 {
		for _, e := range m.SurveyDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.AmountShowSortDatas) > 0 {
		for _, e := range m.AmountShowSortDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.ResistXiongNuMisc != nil {
		l = m.ResistXiongNuMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.ResistXiongNuData) > 0 {
		for _, e := range m.ResistXiongNuData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.ResistXiongNuScore) > 0 {
		for _, e := range m.ResistXiongNuScore {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.WorkshopRefreshCosts) > 0 {
		for _, e := range m.WorkshopRefreshCosts {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Heads) > 0 {
		for _, e := range m.Heads {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Bodys) > 0 {
		for _, e := range m.Bodys {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BwzlTask) > 0 {
		for _, e := range m.BwzlTask {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.BwzlPrize) > 0 {
		for _, e := range m.BwzlPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.SeasonDatas) > 0 {
		for _, e := range m.SeasonDatas {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.SeasonMisc != nil {
		l = m.SeasonMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.ZhanJiangMisc != nil {
		l = m.ZhanJiangMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.FarmResConfig) > 0 {
		for _, e := range m.FarmResConfig {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.FarmMiscConfig != nil {
		l = m.FarmMiscConfig.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.GuildPrestigePrize) > 0 {
		for _, e := range m.GuildPrestigePrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.DianquanMisc != nil {
		l = m.DianquanMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.GoodsQuality) > 0 {
		for _, e := range m.GoodsQuality {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.HebiPrize) > 0 {
		for _, e := range m.HebiPrize {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.HebiMisc != nil {
		l = m.HebiMisc.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if len(m.TeachData) > 0 {
		for _, e := range m.TeachData {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.TimeLimitGiftGroups) > 0 {
		for _, e := range m.TimeLimitGiftGroups {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if len(m.RandomEvent) > 0 {
		for _, e := range m.RandomEvent {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	return n
}

func (m *GoodsConfigProto) Size() (n int) {
	var l int
	_ = l
	if m.EquipmentUpgradeGoods != 0 {
		n += 1 + sovConfig(uint64(m.EquipmentUpgradeGoods))
	}
	if m.EquipmentRefinedGoods != 0 {
		n += 1 + sovConfig(uint64(m.EquipmentRefinedGoods))
	}
	if len(m.CaptainRefinedGoods) > 0 {
		for _, e := range m.CaptainRefinedGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if m.ChangeCaptainRaceGoods != 0 {
		n += 1 + sovConfig(uint64(m.ChangeCaptainRaceGoods))
	}
	if len(m.CaptainRebirthGoods) > 0 {
		for _, e := range m.CaptainRebirthGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if m.MoveBaseGoods != 0 {
		n += 1 + sovConfig(uint64(m.MoveBaseGoods))
	}
	if m.RandomMoveBaseGoods != 0 {
		n += 1 + sovConfig(uint64(m.RandomMoveBaseGoods))
	}
	if m.MoveTentGoods != 0 {
		n += 1 + sovConfig(uint64(m.MoveTentGoods))
	}
	if len(m.MianGoods) > 0 {
		for _, e := range m.MianGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.JiuGuanExpCaptainRefinedGoods) > 0 {
		for _, e := range m.JiuGuanExpCaptainRefinedGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.ExpCaptainSoulUpgradeGoods) > 0 {
		for _, e := range m.ExpCaptainSoulUpgradeGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if m.RandomMoveTentGoods != 0 {
		n += 1 + sovConfig(uint64(m.RandomMoveTentGoods))
	}
	if m.GuildMoveBaseGoods != 0 {
		n += 1 + sovConfig(uint64(m.GuildMoveBaseGoods))
	}
	if len(m.SpeedUpGoods) > 0 {
		for _, e := range m.SpeedUpGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.TrainExpGoods) > 0 {
		for _, e := range m.TrainExpGoods {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.BuildingCdrGoods) > 0 {
		for _, e := range m.BuildingCdrGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.TechCdrGoods) > 0 {
		for _, e := range m.TechCdrGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.SpecGoods) > 0 {
		for _, e := range m.SpecGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.WorkshopCdrGoods) > 0 {
		for _, e := range m.WorkshopCdrGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.GoldGoods) > 0 {
		for _, e := range m.GoldGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.GoldNormalShopGoods) > 0 {
		for _, e := range m.GoldNormalShopGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.StoneGoods) > 0 {
		for _, e := range m.StoneGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.StoneNormalShopGoods) > 0 {
		for _, e := range m.StoneNormalShopGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.GongXunGoods) > 0 {
		for _, e := range m.GongXunGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if m.MultiLevelNpcTimesGoods != 0 {
		n += 2 + sovConfig(uint64(m.MultiLevelNpcTimesGoods))
	}
	if m.FishGoods != 0 {
		n += 2 + sovConfig(uint64(m.FishGoods))
	}
	if len(m.CopyDefenserGoods) > 0 {
		for _, e := range m.CopyDefenserGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.TigerGoods) > 0 {
		for _, e := range m.TigerGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if m.InvaseHeroTimesGoods != 0 {
		n += 2 + sovConfig(uint64(m.InvaseHeroTimesGoods))
	}
	if m.IndecomposableBaowuCount != 0 {
		n += 2 + sovConfig(uint64(m.IndecomposableBaowuCount))
	}
	if len(m.BuffGoods) > 0 {
		for _, e := range m.BuffGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.TowerGoods) > 0 {
		for _, e := range m.TowerGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if len(m.ZhanjiangGoods) > 0 {
		for _, e := range m.ZhanjiangGoods {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if m.JunTuanNpcTimesGoods != 0 {
		n += 2 + sovConfig(uint64(m.JunTuanNpcTimesGoods))
	}
	return n
}

func (m *MilitaryConfigProto) Size() (n int) {
	var l int
	_ = l
	if m.GenSeekCount != 0 {
		n += 1 + sovConfig(uint64(m.GenSeekCount))
	}
	if m.SeekDuration != 0 {
		n += 1 + sovConfig(uint64(m.SeekDuration))
	}
	if m.SeekMaxTimes != 0 {
		n += 1 + sovConfig(uint64(m.SeekMaxTimes))
	}
	if m.DefenserCount != 0 {
		n += 1 + sovConfig(uint64(m.DefenserCount))
	}
	if m.FireLevelLimit != 0 {
		n += 1 + sovConfig(uint64(m.FireLevelLimit))
	}
	if len(m.TrainingHeroLevel) > 0 {
		for _, e := range m.TrainingHeroLevel {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.TrainingInitLevel) > 0 {
		for _, e := range m.TrainingInitLevel {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.TrainingLevelLimit) > 0 {
		for _, e := range m.TrainingLevelLimit {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if len(m.TroopsUnlockLevel) > 0 {
		for _, e := range m.TroopsUnlockLevel {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if m.TrainingMaxDuration != 0 {
		n += 1 + sovConfig(uint64(m.TrainingMaxDuration))
	}
	if m.CaptainInitTrainExp != 0 {
		n += 1 + sovConfig(uint64(m.CaptainInitTrainExp))
	}
	return n
}

func (m *RegionConfigProto) Size() (n int) {
	var l int
	_ = l
	if m.MapXLen != 0 {
		n += 1 + sovConfig(uint64(m.MapXLen))
	}
	if m.MapYLen != 0 {
		n += 1 + sovConfig(uint64(m.MapYLen))
	}
	if m.TentBuildingDuration != 0 {
		n += 1 + sovConfig(uint64(m.TentBuildingDuration))
	}
	if m.MiaoTentBuildingDuration != 0 {
		n += 1 + sovConfig(uint64(m.MiaoTentBuildingDuration))
	}
	if m.MiaoTentBuildingCost != nil {
		l = m.MiaoTentBuildingCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.WhiteFlagDuration != 0 {
		n += 1 + sovConfig(uint64(m.WhiteFlagDuration))
	}
	if m.MultiLevelNpcMaxTimes != 0 {
		n += 1 + sovConfig(uint64(m.MultiLevelNpcMaxTimes))
	}
	if m.GuildRegionCenterX != 0 {
		n += 1 + sovConfig(uint64(m.GuildRegionCenterX))
	}
	if m.GuildRegionCenterY != 0 {
		n += 1 + sovConfig(uint64(m.GuildRegionCenterY))
	}
	if m.RestoreHomeProsperity != 0 {
		n += 1 + sovConfig(uint64(m.RestoreHomeProsperity))
	}
	if m.RestoreHomeProsperityDuration != 0 {
		n += 1 + sovConfig(uint64(m.RestoreHomeProsperityDuration))
	}
	if m.DefaultDiaoKe != nil {
		l = m.DefaultDiaoKe.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.MiaoInvestigateCdCost != nil {
		l = m.MiaoInvestigateCdCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.InvestigateMailTimeout != 0 {
		n += 1 + sovConfig(uint64(m.InvestigateMailTimeout))
	}
	if m.InvestigateCd != 0 {
		n += 1 + sovConfig(uint64(m.InvestigateCd))
	}
	if m.BasicTroopMoveVelocityPerSecond != 0 {
		n += 2 + sovConfig(uint64(m.BasicTroopMoveVelocityPerSecond))
	}
	if m.Edge != 0 {
		n += 2 + sovConfig(uint64(m.Edge))
	}
	if m.NewHeroMianDuration != 0 {
		n += 2 + sovConfig(uint64(m.NewHeroMianDuration))
	}
	if m.NewHeroRemoveMianBaseLevel != 0 {
		n += 2 + sovConfig(uint64(m.NewHeroRemoveMianBaseLevel))
	}
	if m.RebornMianDuration != 0 {
		n += 2 + sovConfig(uint64(m.RebornMianDuration))
	}
	if m.MultiLevelNpcRecoveryDuration != 0 {
		n += 2 + sovConfig(uint64(m.MultiLevelNpcRecoveryDuration))
	}
	if m.EdgeNotHomeLen != 0 {
		n += 2 + sovConfig(uint64(m.EdgeNotHomeLen))
	}
	if m.InvestigateMaxDistance != 0 {
		n += 2 + sovConfig(uint64(m.InvestigateMaxDistance))
	}
	if m.AstDefendRestoreHomeProsperity != 0 {
		n += 2 + sovConfig(uint64(m.AstDefendRestoreHomeProsperity))
	}
	if m.AstDefendRestoreHomeProsperityAmount != nil {
		l = m.AstDefendRestoreHomeProsperityAmount.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.InvestigateCost != nil {
		l = m.InvestigateCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.InvestigateSpeedup != 0 {
		n += 2 + sovConfig(uint64(m.InvestigateSpeedup))
	}
	return n
}

func (m *MiscConfigProto) Size() (n int) {
	var l int
	_ = l
	if m.MailMinBatchCount != 0 {
		n += 1 + sovConfig(uint64(m.MailMinBatchCount))
	}
	if m.TowerChallengeMaxTimes != 0 {
		n += 1 + sovConfig(uint64(m.TowerChallengeMaxTimes))
	}
	if m.MailMaxBatchCount != 0 {
		n += 1 + sovConfig(uint64(m.MailMaxBatchCount))
	}
	if m.ChangeHeroNameDuration != 0 {
		n += 1 + sovConfig(uint64(m.ChangeHeroNameDuration))
	}
	if m.ChangeCaptainNameCost != nil {
		l = m.ChangeCaptainNameCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if len(m.ChangeHeroNameYuanbaoCost) > 0 {
		for _, e := range m.ChangeHeroNameYuanbaoCost {
			n += 1 + sovConfig(uint64(e))
		}
	}
	if m.ChangeCaptainRaceDuration != 0 {
		n += 1 + sovConfig(uint64(m.ChangeCaptainRaceDuration))
	}
	if m.ChangeCaptainRaceLevel != 0 {
		n += 1 + sovConfig(uint64(m.ChangeCaptainRaceLevel))
	}
	if m.MiaoBuildingWorkerDuration != 0 {
		n += 1 + sovConfig(uint64(m.MiaoBuildingWorkerDuration))
	}
	if m.MiaoBuildingWorkerCost != nil {
		l = m.MiaoBuildingWorkerCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.MiaoTechWorkerDuration != 0 {
		n += 1 + sovConfig(uint64(m.MiaoTechWorkerDuration))
	}
	if m.MiaoTechWorkerCost != nil {
		l = m.MiaoTechWorkerCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.StrategyRestoreDuration != 0 {
		n += 1 + sovConfig(uint64(m.StrategyRestoreDuration))
	}
	if m.FirstChangeHeroNamePrize != nil {
		l = m.FirstChangeHeroNamePrize.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.MondayZeroOClock != 0 {
		n += 2 + sovConfig(uint64(m.MondayZeroOClock))
	}
	if m.MiaoCaptainRebirthDuration != 0 {
		n += 2 + sovConfig(uint64(m.MiaoCaptainRebirthDuration))
	}
	if m.MiaoCaptainRebirthCost != nil {
		l = m.MiaoCaptainRebirthCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.MiaoWorkshopDuration != 0 {
		n += 2 + sovConfig(uint64(m.MiaoWorkshopDuration))
	}
	if m.MiaoWorkshopCost != nil {
		l = m.MiaoWorkshopCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.WorldChatLevel != 0 {
		n += 2 + sovConfig(uint64(m.WorldChatLevel))
	}
	if m.WorldChatDuration != 0 {
		n += 2 + sovConfig(uint64(m.WorldChatDuration))
	}
	if m.ChatTextLength != 0 {
		n += 2 + sovConfig(uint64(m.ChatTextLength))
	}
	if len(m.ChangeHeroNameCost) > 0 {
		for _, e := range m.ChangeHeroNameCost {
			l = e.Size()
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	if m.DailyResetHour != 0 {
		n += 2 + sovConfig(uint64(m.DailyResetHour))
	}
	if m.DailyResetMinute != 0 {
		n += 2 + sovConfig(uint64(m.DailyResetMinute))
	}
	if len(m.WorkshopRefreshHourMinute) > 0 {
		for _, e := range m.WorkshopRefreshHourMinute {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if m.MaxDepotEquipCapacity != 0 {
		n += 2 + sovConfig(uint64(m.MaxDepotEquipCapacity))
	}
	if m.MaxSignLen != 0 {
		n += 2 + sovConfig(uint64(m.MaxSignLen))
	}
	if m.MaxResourceCollectTimes != 0 {
		n += 2 + sovConfig(uint64(m.MaxResourceCollectTimes))
	}
	if m.ResourceRecoveryDuration != 0 {
		n += 2 + sovConfig(uint64(m.ResourceRecoveryDuration))
	}
	if m.MaxFavoritePosCount != 0 {
		n += 2 + sovConfig(uint64(m.MaxFavoritePosCount))
	}
	if m.SeasonDuration != 0 {
		n += 2 + sovConfig(uint64(m.SeasonDuration))
	}
	if m.SkipFightingHeroLevel != 0 {
		n += 2 + sovConfig(uint64(m.SkipFightingHeroLevel))
	}
	if len(m.StrongerCoef) > 0 {
		for _, e := range m.StrongerCoef {
			n += 2 + sovConfig(uint64(e))
		}
	}
	if m.BroadcastGoods != 0 {
		n += 2 + sovConfig(uint64(m.BroadcastGoods))
	}
	if m.BuildingInitEffect != 0 {
		n += 2 + sovConfig(uint64(m.BuildingInitEffect))
	}
	if m.ExtraResDecayCoef != nil {
		l = m.ExtraResDecayCoef.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.ExtraResDecayDuration != 0 {
		n += 2 + sovConfig(uint64(m.ExtraResDecayDuration))
	}
	if m.CloseFightGuideDungeonId != 0 {
		n += 2 + sovConfig(uint64(m.CloseFightGuideDungeonId))
	}
	if m.RefreshRecommendHeroDuration != 0 {
		n += 2 + sovConfig(uint64(m.RefreshRecommendHeroDuration))
	}
	if m.RefreshRecommendHeroPageSize != 0 {
		n += 2 + sovConfig(uint64(m.RefreshRecommendHeroPageSize))
	}
	if m.RefreshRecommendHeroMinLevel != 0 {
		n += 2 + sovConfig(uint64(m.RefreshRecommendHeroMinLevel))
	}
	if m.RefreshRecommendHeroPageCount != 0 {
		n += 2 + sovConfig(uint64(m.RefreshRecommendHeroPageCount))
	}
	if m.SearchHeroDuration != 0 {
		n += 2 + sovConfig(uint64(m.SearchHeroDuration))
	}
	if m.ChatPrivateMinLevel != 0 {
		n += 2 + sovConfig(uint64(m.ChatPrivateMinLevel))
	}
	if m.ChatDuration != 0 {
		n += 2 + sovConfig(uint64(m.ChatDuration))
	}
	if m.ChatShareDuration != 0 {
		n += 2 + sovConfig(uint64(m.ChatShareDuration))
	}
	if m.SecondWorkerCost != nil {
		l = m.SecondWorkerCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.SecondWorkerUnlockDuration != 0 {
		n += 2 + sovConfig(uint64(m.SecondWorkerUnlockDuration))
	}
	if m.RedPacketCostPercent != 0 {
		n += 2 + sovConfig(uint64(m.RedPacketCostPercent))
	}
	if m.RedPacketGuildMemberMinCount != 0 {
		n += 2 + sovConfig(uint64(m.RedPacketGuildMemberMinCount))
	}
	if m.WeeklyResetHour != 0 {
		n += 2 + sovConfig(uint64(m.WeeklyResetHour))
	}
	if m.WeeklyResetMinute != 0 {
		n += 2 + sovConfig(uint64(m.WeeklyResetMinute))
	}
	if m.RecommendHeroOfflineExpireDuration != 0 {
		n += 2 + sovConfig(uint64(m.RecommendHeroOfflineExpireDuration))
	}
	return n
}

func (m *GuildConfigProto) Size() (n int) {
	var l int
	_ = l
	if m.GuildNumPerPage != 0 {
		n += 1 + sovConfig(uint64(m.GuildNumPerPage))
	}
	if m.CreateGuildCost != nil {
		l = m.CreateGuildCost.Size()
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.ChangeGuildNameCost != nil {
		l = m.ChangeGuildNameCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.ChangeGuildNameDuration != 0 {
		n += 2 + sovConfig(uint64(m.ChangeGuildNameDuration))
	}
	if m.GuildLabelLimitChar != 0 {
		n += 2 + sovConfig(uint64(m.GuildLabelLimitChar))
	}
	if m.GuildLabelLimitCount != 0 {
		n += 2 + sovConfig(uint64(m.GuildLabelLimitCount))
	}
	if m.ChangeLeaderCountdownMemberCount != 0 {
		n += 2 + sovConfig(uint64(m.ChangeLeaderCountdownMemberCount))
	}
	if m.ChangeLeaderCountdownDuration != 0 {
		n += 2 + sovConfig(uint64(m.ChangeLeaderCountdownDuration))
	}
	if m.ImpeachRequiredMemberCount != 0 {
		n += 2 + sovConfig(uint64(m.ImpeachRequiredMemberCount))
	}
	if m.ImpeachLeaderOfflineDuration != 0 {
		n += 2 + sovConfig(uint64(m.ImpeachLeaderOfflineDuration))
	}
	if m.ImpeachNpcLeaderHour != 0 {
		n += 2 + sovConfig(uint64(m.ImpeachNpcLeaderHour))
	}
	if m.ImpeachNpcLeaderMinute != 0 {
		n += 2 + sovConfig(uint64(m.ImpeachNpcLeaderMinute))
	}
	if m.UserMaxJoinRequestCount != 0 {
		n += 2 + sovConfig(uint64(m.UserMaxJoinRequestCount))
	}
	if m.GuildMaxInvateCount != 0 {
		n += 2 + sovConfig(uint64(m.GuildMaxInvateCount))
	}
	if m.DailyMaxKickCount != 0 {
		n += 2 + sovConfig(uint64(m.DailyMaxKickCount))
	}
	if m.GuildClassTitleMaxCount != 0 {
		n += 2 + sovConfig(uint64(m.GuildClassTitleMaxCount))
	}
	if m.GuildClassTitleMaxCharCount != 0 {
		n += 2 + sovConfig(uint64(m.GuildClassTitleMaxCharCount))
	}
	if m.FirstJoinGuildPrize != nil {
		l = m.FirstJoinGuildPrize.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.TextLimitChar != 0 {
		n += 2 + sovConfig(uint64(m.TextLimitChar))
	}
	if m.InternalTextLimitChar != 0 {
		n += 2 + sovConfig(uint64(m.InternalTextLimitChar))
	}
	if m.FriendGuildTextLimitChar != 0 {
		n += 2 + sovConfig(uint64(m.FriendGuildTextLimitChar))
	}
	if m.EnemyGuildTextLimitChar != 0 {
		n += 2 + sovConfig(uint64(m.EnemyGuildTextLimitChar))
	}
	if m.ContributionPerHelp != 0 {
		n += 2 + sovConfig(uint64(m.ContributionPerHelp))
	}
	if m.ContributionMaxCountPerDay != 0 {
		n += 2 + sovConfig(uint64(m.ContributionMaxCountPerDay))
	}
	if m.BigBoxCollectableDuration != 0 {
		n += 2 + sovConfig(uint64(m.BigBoxCollectableDuration))
	}
	if m.EventPrizeMaxCount != 0 {
		n += 2 + sovConfig(uint64(m.EventPrizeMaxCount))
	}
	if m.UpdateCountryYuanbao != 0 {
		n += 2 + sovConfig(uint64(m.UpdateCountryYuanbao))
	}
	if m.UpdateCountryDuration != 0 {
		n += 2 + sovConfig(uint64(m.UpdateCountryDuration))
	}
	if m.UpdateCountryLostPrestigeCoef != 0 {
		n += 2 + sovConfig(uint64(m.UpdateCountryLostPrestigeCoef))
	}
	if m.GuildDonateNeedHeroLevel != 0 {
		n += 2 + sovConfig(uint64(m.GuildDonateNeedHeroLevel))
	}
	if m.NotifyJoinGuildDuration != 0 {
		n += 2 + sovConfig(uint64(m.NotifyJoinGuildDuration))
	}
	if m.NotifyJoinGuildDurationOnOnlineOrLeave != 0 {
		n += 2 + sovConfig(uint64(m.NotifyJoinGuildDurationOnOnlineOrLeave))
	}
	if m.UpdateCountryCost != nil {
		l = m.UpdateCountryCost.Size()
		n += 2 + l + sovConfig(uint64(l))
	}
	if m.SearchNoGuildHerosDuration != 0 {
		n += 2 + sovConfig(uint64(m.SearchNoGuildHerosDuration))
	}
	if m.SearchNoGuildHerosPerPageSize != 0 {
		n += 2 + sovConfig(uint64(m.SearchNoGuildHerosPerPageSize))
	}
	return n
}

func (m *I18NDataProto) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovConfig(uint64(l))
	}
	l = len(m.Language)
	if l > 0 {
		n += 1 + l + sovConfig(uint64(l))
	}
	if len(m.Pair) > 0 {
		for _, e := range m.Pair {
			l = e.Size()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if m.Display {
		n += 2
	}
	return n
}

func (m *I18NPairProto) Size() (n int) {
	var l int
	_ = l
	if len(m.Key) > 0 {
		for _, s := range m.Key {
			l = len(s)
			n += 2 + l + sovConfig(uint64(l))
		}
	}
	l = len(m.Value)
	if l > 0 {
		n += 2 + l + sovConfig(uint64(l))
	}
	return n
}

func (m *HeadProto) Size() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovConfig(uint64(l))
	}
	l = len(m.IconId)
	if l > 0 {
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.UnlockNeedCaptainSoul != 0 {
		n += 1 + sovConfig(uint64(m.UnlockNeedCaptainSoul))
	}
	if m.UnlockNeedHeroLevel != 0 {
		n += 1 + sovConfig(uint64(m.UnlockNeedHeroLevel))
	}
	return n
}

func (m *BodyProto) Size() (n int) {
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovConfig(uint64(m.Id))
	}
	l = len(m.IconId)
	if l > 0 {
		n += 1 + l + sovConfig(uint64(l))
	}
	if m.UnlockNeedCaptainSoul != 0 {
		n += 1 + sovConfig(uint64(m.UnlockNeedCaptainSoul))
	}
	if m.UnlockNeedHeroLevel != 0 {
		n += 1 + sovConfig(uint64(m.UnlockNeedHeroLevel))
	}
	return n
}

func sovConfig(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozConfig(x uint64) (n int) {
	return sovConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingLayout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildingLayout = append(m.BuildingLayout, &BuildingLayoutProto{})
			if err := m.BuildingLayout[len(m.BuildingLayout)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildingData = append(m.BuildingData, &BuildingDataProto{})
			if err := m.BuildingData[len(m.BuildingData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TechnologyData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TechnologyData = append(m.TechnologyData, &TechnologyDataProto{})
			if err := m.TechnologyData[len(m.TechnologyData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gen", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Gen == nil {
				m.Gen = &ConfigGen{}
			}
			if err := m.Gen.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildTaskEvaluate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildTaskEvaluate = append(m.GuildTaskEvaluate, &GuildTaskEvaluateDataProto{})
			if err := m.GuildTaskEvaluate[len(m.GuildTaskEvaluate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildTask = append(m.GuildTask, &GuildTaskDataProto{})
			if err := m.GuildTask[len(m.GuildTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Soldier", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Soldier = append(m.Soldier, &SoldierLevelProto{})
			if err := m.Soldier[len(m.Soldier)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hero", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hero = append(m.Hero, &HeroLevelProto{})
			if err := m.Hero[len(m.Hero)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildLevel = append(m.GuildLevel, &GuildLevelProto{})
			if err := m.GuildLevel[len(m.GuildLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildClassLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildClassLevel = append(m.GuildClassLevel, &GuildClassLevelProto{})
			if err := m.GuildClassLevel[len(m.GuildClassLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseLevel = append(m.BaseLevel, &BaseLevelProto{})
			if err := m.BaseLevel[len(m.BaseLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Goods = append(m.Goods, &GoodsDataProto{})
			if err := m.Goods[len(m.Goods)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Equipment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Equipment = append(m.Equipment, &EquipmentDataProto{})
			if err := m.Equipment[len(m.Equipment)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipmentQuality", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipmentQuality = append(m.EquipmentQuality, &EquipmentQualityProto{})
			if err := m.EquipmentQuality[len(m.EquipmentQuality)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipmentRefined", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipmentRefined = append(m.EquipmentRefined, &EquipmentRefinedProto{})
			if err := m.EquipmentRefined[len(m.EquipmentRefined)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipmentTaoz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipmentTaoz = append(m.EquipmentTaoz, &EquipmentTaozProto{})
			if err := m.EquipmentTaoz[len(m.EquipmentTaoz)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainLevel = append(m.CaptainLevel, &CaptainLevelProto{})
			if err := m.CaptainLevel[len(m.CaptainLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainAbility", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainAbility = append(m.CaptainAbility, &CaptainAbilityProto{})
			if err := m.CaptainAbility[len(m.CaptainAbility)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrainingLevel = append(m.TrainingLevel, &TrainingLevelProto{})
			if err := m.TrainingLevel[len(m.TrainingLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tower", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tower = append(m.Tower, &TowerDataProto{})
			if err := m.Tower[len(m.Tower)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MainTask = append(m.MainTask, &TaskDataProto{})
			if err := m.MainTask[len(m.MainTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BranchTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BranchTask = append(m.BranchTask, &TaskDataProto{})
			if err := m.BranchTask[len(m.BranchTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskBox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskBox = append(m.TaskBox, &TaskBoxProto{})
			if err := m.TaskBox[len(m.TaskBox)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainSoulData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainSoulData = append(m.CaptainSoulData, &CaptainSoulDataProto{})
			if err := m.CaptainSoulData[len(m.CaptainSoulData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishingShow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FishingShow = append(m.FishingShow, &FishingShowProto{})
			if err := m.FishingShow[len(m.FishingShow)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishingCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FishingCost = append(m.FishingCost, &FishingCostProto{})
			if err := m.FishingCost[len(m.FishingCost)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainSoulFetters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainSoulFetters = append(m.CaptainSoulFetters, &CaptainSoulFettersProto{})
			if err := m.CaptainSoulFetters[len(m.CaptainSoulFetters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TieJiangPuLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TieJiangPuLevel = append(m.TieJiangPuLevel, &TieJiangPuLevelProto{})
			if err := m.TieJiangPuLevel[len(m.TieJiangPuLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipCombine", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EquipCombine = append(m.EquipCombine, &EquipCombineDataProto{})
			if err := m.EquipCombine[len(m.EquipCombine)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainRebirthLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainRebirthLevel = append(m.CaptainRebirthLevel, &CaptainRebirthLevelProto{})
			if err := m.CaptainRebirthLevel[len(m.CaptainRebirthLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildDonate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildDonate = append(m.GuildDonate, &GuildDonateProto{})
			if err := m.GuildDonate[len(m.GuildDonate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpellConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpellConfig = append(m.SpellConfig, &SpellProto{})
			if err := m.SpellConfig[len(m.SpellConfig)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gem", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gem = append(m.Gem, &GemDataProto{})
			if err := m.Gem[len(m.Gem)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GemSlot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GemSlot = append(m.GemSlot, &GemSlotDataProto{})
			if err := m.GemSlot[len(m.GemSlot)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 35:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RaceData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RaceData = append(m.RaceData, &RaceDataProto{})
			if err := m.RaceData[len(m.RaceData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Shop = append(m.Shop, &ShopProto{})
			if err := m.Shop[len(m.Shop)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildClassTitle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildClassTitle = append(m.GuildClassTitle, &GuildClassTitleDataProto{})
			if err := m.GuildClassTitle[len(m.GuildClassTitle)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecretTower", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecretTower = append(m.SecretTower, &SecretTowerDataProto{})
			if err := m.SecretTower[len(m.SecretTower)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 39:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecretTowerMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SecretTowerMisc == nil {
				m.SecretTowerMisc = &SecretTowerMiscProto{}
			}
			if err := m.SecretTowerMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 42:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultCountry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultCountry = append(m.DefaultCountry, &DefaultCountryProto{})
			if err := m.DefaultCountry[len(m.DefaultCountry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 43:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildTarget", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildTarget = append(m.GuildTarget, &GuildTargetProto{})
			if err := m.GuildTarget[len(m.GuildTarget)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 44:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RankMisc == nil {
				m.RankMisc = &RankMiscProto{}
			}
			if err := m.RankMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 45:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaiZhanMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BaiZhanMisc == nil {
				m.BaiZhanMisc = &BaiZhanMiscProto{}
			}
			if err := m.BaiZhanMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunXianLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JunXianLevel = append(m.JunXianLevel, &JunXianLevelDataProto{})
			if err := m.JunXianLevel[len(m.JunXianLevel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 47:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunXianLevelPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JunXianLevelPrize = append(m.JunXianLevelPrize, &JunXianLevelPrizeProto{})
			if err := m.JunXianLevelPrize[len(m.JunXianLevelPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 49:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DungeonChapter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DungeonChapter = append(m.DungeonChapter, &DungeonChapterProto{})
			if err := m.DungeonChapter[len(m.DungeonChapter)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DungeonMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DungeonMisc == nil {
				m.DungeonMisc = &DungeonMiscProto{}
			}
			if err := m.DungeonMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountryMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CountryMisc == nil {
				m.CountryMisc = &CountryMiscProto{}
			}
			if err := m.CountryMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityEventData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityEventData = append(m.CityEventData, &CityEventDataProto{})
			if err := m.CityEventData[len(m.CityEventData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityEventMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CityEventMisc == nil {
				m.CityEventMisc = &CityEventMiscProto{}
			}
			if err := m.CityEventMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TagMisc == nil {
				m.TagMisc = &TagMiscProto{}
			}
			if err := m.TagMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Strategy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Strategy = append(m.Strategy, &StrategyDataProto{})
			if err := m.Strategy[len(m.Strategy)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainGenerator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainGenerator = append(m.CaptainGenerator, &CaptainGeneratorProto{})
			if err := m.CaptainGenerator[len(m.CaptainGenerator)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JiuGuanData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JiuGuanData = append(m.JiuGuanData, &JiuGuanDataProto{})
			if err := m.JiuGuanData[len(m.JiuGuanData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JiuGuanMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JiuGuanMisc == nil {
				m.JiuGuanMisc = &JiuGuanMiscDataProto{}
			}
			if err := m.JiuGuanMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 61:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodsConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GoodsConfig == nil {
				m.GoodsConfig = &GoodsConfigProto{}
			}
			if err := m.GoodsConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilitaryConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MilitaryConfig == nil {
				m.MilitaryConfig = &MilitaryConfigProto{}
			}
			if err := m.MilitaryConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RegionConfig == nil {
				m.RegionConfig = &RegionConfigProto{}
			}
			if err := m.RegionConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 64:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiscConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiscConfig == nil {
				m.MiscConfig = &MiscConfigProto{}
			}
			if err := m.MiscConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 65:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuildConfig == nil {
				m.GuildConfig = &GuildConfigProto{}
			}
			if err := m.GuildConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 66:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunYingLevelData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JunYingLevelData = append(m.JunYingLevelData, &JunYingLevelDataProto{})
			if err := m.JunYingLevelData[len(m.JunYingLevelData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 67:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaYeTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaYeTask = append(m.BaYeTask, &TaskDataProto{})
			if err := m.BaYeTask[len(m.BaYeTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 68:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaYeStage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaYeStage = append(m.BaYeStage, &BaYeStageDataProto{})
			if err := m.BaYeStage[len(m.BaYeStage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 69:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainSoulMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CaptainSoulMisc == nil {
				m.CaptainSoulMisc = &CaptainSoulMiscProto{}
			}
			if err := m.CaptainSoulMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AchieveTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AchieveTask = append(m.AchieveTask, &TaskDataProto{})
			if err := m.AchieveTask[len(m.AchieveTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 71:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveDegreeTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActiveDegreeTask = append(m.ActiveDegreeTask, &TaskDataProto{})
			if err := m.ActiveDegreeTask[len(m.ActiveDegreeTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 72:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveDegreePrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActiveDegreePrize = append(m.ActiveDegreePrize, &ActiveDegreePrizeProto{})
			if err := m.ActiveDegreePrize[len(m.ActiveDegreePrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 73:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegionData = append(m.RegionData, &RegionDataProto{})
			if err := m.RegionData[len(m.RegionData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 74:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NpcBaseData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NpcBaseData = append(m.NpcBaseData, &NpcBaseDataProto{})
			if err := m.NpcBaseData[len(m.NpcBaseData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 75:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuanFuLevelData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuanFuLevelData = append(m.GuanFuLevelData, &GuanFuLevelProto{})
			if err := m.GuanFuLevelData[len(m.GuanFuLevelData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 76:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingUnlockData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildingUnlockData = append(m.BuildingUnlockData, &BuildingUnlockDataProto{})
			if err := m.BuildingUnlockData[len(m.BuildingUnlockData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 77:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FunctionOpenDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FunctionOpenDatas = append(m.FunctionOpenDatas, &FunctionOpenDataProto{})
			if err := m.FunctionOpenDatas[len(m.FunctionOpenDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 78:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuiZuLevelDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuiZuLevelDatas = append(m.GuiZuLevelDatas, &GuiZuLevelDataProto{})
			if err := m.GuiZuLevelDatas[len(m.GuiZuLevelDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 79:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiaoKeMiscData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DiaoKeMiscData == nil {
				m.DiaoKeMiscData = &DiaoKeMiscDataProto{}
			}
			if err := m.DiaoKeMiscData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 80:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icons", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icons = append(m.Icons, &IconProto{})
			if err := m.Icons[len(m.Icons)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 81:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PveTroopDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PveTroopDatas = append(m.PveTroopDatas, &PveTroopDataProto{})
			if err := m.PveTroopDatas[len(m.PveTroopDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 82:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OuterCityDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OuterCityDatas = append(m.OuterCityDatas, &OuterCityDataProto{})
			if err := m.OuterCityDatas[len(m.OuterCityDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 83:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OuterCityLayoutDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OuterCityLayoutDatas = append(m.OuterCityLayoutDatas, &OuterCityLayoutDataProto{})
			if err := m.OuterCityLayoutDatas[len(m.OuterCityLayoutDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 84:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountdownPrizeDesc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CountdownPrizeDesc = append(m.CountdownPrizeDesc, &CountdownPrizeDescDataProto{})
			if err := m.CountdownPrizeDesc[len(m.CountdownPrizeDesc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 85:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildEventPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildEventPrize = append(m.GuildEventPrize, &GuildEventPrizeDataProto{})
			if err := m.GuildEventPrize[len(m.GuildEventPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 86:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildBigBox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildBigBox = append(m.GuildBigBox, &GuildBigBoxDataProto{})
			if err := m.GuildBigBox[len(m.GuildBigBox)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 87:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiLevelNpcData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiLevelNpcData = append(m.MultiLevelNpcData, &RegionMultiLevelNpcDataProto{})
			if err := m.MultiLevelNpcData[len(m.MultiLevelNpcData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 88:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiLevelNpcType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiLevelNpcType = append(m.MultiLevelNpcType, &RegionMultiLevelNpcTypeProto{})
			if err := m.MultiLevelNpcType[len(m.MultiLevelNpcType)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 89:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TreasuryTreeData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TreasuryTreeData = append(m.TreasuryTreeData, &TreasuryTreeDataProto{})
			if err := m.TreasuryTreeData[len(m.TreasuryTreeData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 90:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GradonConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GradonConfig == nil {
				m.GradonConfig = &GradonConfigProto{}
			}
			if err := m.GradonConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 91:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainSeeker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainSeeker = append(m.CaptainSeeker, &CaptainSeekerProto{})
			if err := m.CaptainSeeker[len(m.CaptainSeeker)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 92:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunYingMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JunYingMisc == nil {
				m.JunYingMisc = &JunYingMiscProto{}
			}
			if err := m.JunYingMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 93:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZhengWuRefresh", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ZhengWuRefresh = append(m.ZhengWuRefresh, &ZhengWuRefreshDataProto{})
			if err := m.ZhengWuRefresh[len(m.ZhengWuRefresh)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 94:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZhengWuMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ZhengWuMisc == nil {
				m.ZhengWuMisc = &ZhengWuMiscProto{}
			}
			if err := m.ZhengWuMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 95:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AchieveTaskStarPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AchieveTaskStarPrize = append(m.AchieveTaskStarPrize, &AchieveTaskStarPrizeProto{})
			if err := m.AchieveTaskStarPrize[len(m.AchieveTaskStarPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 96:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMiscData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMiscData == nil {
				m.TaskMiscData = &TaskMiscDataProto{}
			}
			if err := m.TaskMiscData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 97:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildTechnology", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildTechnology = append(m.GuildTechnology, &GuildTechnologyDataProto{})
			if err := m.GuildTechnology[len(m.GuildTechnology)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 98:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildPermissionShow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildPermissionShow = append(m.GuildPermissionShow, &GuildPermissionShowProto{})
			if err := m.GuildPermissionShow[len(m.GuildPermissionShow)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 99:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZhanJiangChapter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ZhanJiangChapter = append(m.ZhanJiangChapter, &ZhanJiangChapterProto{})
			if err := m.ZhanJiangChapter[len(m.ZhanJiangChapter)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Setting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Setting = append(m.Setting, &StringPair{})
			if err := m.Setting[len(m.Setting)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field I18N", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.I18N = append(m.I18N, &I18NDataProto{})
			if err := m.I18N[len(m.I18N)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrongerData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrongerData = append(m.StrongerData, &StrongerDataProto{})
			if err := m.StrongerData[len(m.StrongerData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainOfficial", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CaptainOfficial = append(m.CaptainOfficial, &CaptainOfficialProto{})
			if err := m.CaptainOfficial[len(m.CaptainOfficial)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Question", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Question = append(m.Question, &QuestionProto{})
			if err := m.Question[len(m.Question)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuestionSaying", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QuestionSaying = append(m.QuestionSaying, &QuestionSayingProto{})
			if err := m.QuestionSaying[len(m.QuestionSaying)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuestionPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QuestionPrize = append(m.QuestionPrize, &QuestionPrizeProto{})
			if err := m.QuestionPrize[len(m.QuestionPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuestionMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QuestionMisc == nil {
				m.QuestionMisc = &QuestionMiscProto{}
			}
			if err := m.QuestionMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SurveyDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SurveyDatas = append(m.SurveyDatas, &SurveyDataProto{})
			if err := m.SurveyDatas[len(m.SurveyDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountShowSortDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmountShowSortDatas = append(m.AmountShowSortDatas, &AmountShowSortProto{})
			if err := m.AmountShowSortDatas[len(m.AmountShowSortDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResistXiongNuMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResistXiongNuMisc == nil {
				m.ResistXiongNuMisc = &ResistXiongNuMiscProto{}
			}
			if err := m.ResistXiongNuMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 111:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResistXiongNuData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResistXiongNuData = append(m.ResistXiongNuData, &ResistXiongNuDataProto{})
			if err := m.ResistXiongNuData[len(m.ResistXiongNuData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 112:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResistXiongNuScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResistXiongNuScore = append(m.ResistXiongNuScore, &ResistXiongNuScoreProto{})
			if err := m.ResistXiongNuScore[len(m.ResistXiongNuScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 113:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkshopRefreshCosts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkshopRefreshCosts = append(m.WorkshopRefreshCosts, &WorkshopRefreshCostProto{})
			if err := m.WorkshopRefreshCosts[len(m.WorkshopRefreshCosts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 114:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Heads", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Heads = append(m.Heads, &HeadProto{})
			if err := m.Heads[len(m.Heads)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 115:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bodys", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bodys = append(m.Bodys, &BodyProto{})
			if err := m.Bodys[len(m.Bodys)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 116:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BwzlTask", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BwzlTask = append(m.BwzlTask, &TaskDataProto{})
			if err := m.BwzlTask[len(m.BwzlTask)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 117:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BwzlPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BwzlPrize = append(m.BwzlPrize, &BwzlPrizeDataProto{})
			if err := m.BwzlPrize[len(m.BwzlPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 118:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonDatas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SeasonDatas = append(m.SeasonDatas, &SeasonDataProto{})
			if err := m.SeasonDatas[len(m.SeasonDatas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 119:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SeasonMisc == nil {
				m.SeasonMisc = &SeasonMiscProto{}
			}
			if err := m.SeasonMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 120:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZhanJiangMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ZhanJiangMisc == nil {
				m.ZhanJiangMisc = &ZhanJiangMiscDataProto{}
			}
			if err := m.ZhanJiangMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 121:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FarmResConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FarmResConfig = append(m.FarmResConfig, &FarmResConfigProto{})
			if err := m.FarmResConfig[len(m.FarmResConfig)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 122:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FarmMiscConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FarmMiscConfig == nil {
				m.FarmMiscConfig = &FarmMiscConfigProto{}
			}
			if err := m.FarmMiscConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 123:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildPrestigePrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GuildPrestigePrize = append(m.GuildPrestigePrize, &GuildPrestigePrizeDataProto{})
			if err := m.GuildPrestigePrize[len(m.GuildPrestigePrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 124:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DianquanMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DianquanMisc == nil {
				m.DianquanMisc = &DianquanMiscProto{}
			}
			if err := m.DianquanMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 125:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodsQuality", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoodsQuality = append(m.GoodsQuality, &GoodsQualityProto{})
			if err := m.GoodsQuality[len(m.GoodsQuality)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 128:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HebiPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HebiPrize = append(m.HebiPrize, &HebiPrizeProto{})
			if err := m.HebiPrize[len(m.HebiPrize)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 129:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HebiMisc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HebiMisc == nil {
				m.HebiMisc = &HebiMiscProto{}
			}
			if err := m.HebiMisc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 130:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeachData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeachData = append(m.TeachData, &TeachChapterDataProto{})
			if err := m.TeachData[len(m.TeachData)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 131:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeLimitGiftGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimeLimitGiftGroups = append(m.TimeLimitGiftGroups, &TimeLimitGiftGroupDataProto{})
			if err := m.TimeLimitGiftGroups[len(m.TimeLimitGiftGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 135:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomEvent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RandomEvent = append(m.RandomEvent, &RandomEventDataProto{})
			if err := m.RandomEvent[len(m.RandomEvent)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GoodsConfigProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GoodsConfigProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GoodsConfigProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipmentUpgradeGoods", wireType)
			}
			m.EquipmentUpgradeGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EquipmentUpgradeGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquipmentRefinedGoods", wireType)
			}
			m.EquipmentRefinedGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EquipmentRefinedGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CaptainRefinedGoods = append(m.CaptainRefinedGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CaptainRefinedGoods = append(m.CaptainRefinedGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainRefinedGoods", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeCaptainRaceGoods", wireType)
			}
			m.ChangeCaptainRaceGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeCaptainRaceGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CaptainRebirthGoods = append(m.CaptainRebirthGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CaptainRebirthGoods = append(m.CaptainRebirthGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainRebirthGoods", wireType)
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveBaseGoods", wireType)
			}
			m.MoveBaseGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MoveBaseGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomMoveBaseGoods", wireType)
			}
			m.RandomMoveBaseGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomMoveBaseGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoveTentGoods", wireType)
			}
			m.MoveTentGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MoveTentGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MianGoods = append(m.MianGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MianGoods = append(m.MianGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MianGoods", wireType)
			}
		case 10:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.JiuGuanExpCaptainRefinedGoods = append(m.JiuGuanExpCaptainRefinedGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.JiuGuanExpCaptainRefinedGoods = append(m.JiuGuanExpCaptainRefinedGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field JiuGuanExpCaptainRefinedGoods", wireType)
			}
		case 11:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExpCaptainSoulUpgradeGoods = append(m.ExpCaptainSoulUpgradeGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExpCaptainSoulUpgradeGoods = append(m.ExpCaptainSoulUpgradeGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpCaptainSoulUpgradeGoods", wireType)
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomMoveTentGoods", wireType)
			}
			m.RandomMoveTentGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomMoveTentGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildMoveBaseGoods", wireType)
			}
			m.GuildMoveBaseGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildMoveBaseGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SpeedUpGoods = append(m.SpeedUpGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SpeedUpGoods = append(m.SpeedUpGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeedUpGoods", wireType)
			}
		case 15:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TrainExpGoods = append(m.TrainExpGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TrainExpGoods = append(m.TrainExpGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainExpGoods", wireType)
			}
		case 16:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BuildingCdrGoods = append(m.BuildingCdrGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BuildingCdrGoods = append(m.BuildingCdrGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingCdrGoods", wireType)
			}
		case 17:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TechCdrGoods = append(m.TechCdrGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TechCdrGoods = append(m.TechCdrGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TechCdrGoods", wireType)
			}
		case 18:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SpecGoods = append(m.SpecGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SpecGoods = append(m.SpecGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SpecGoods", wireType)
			}
		case 19:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.WorkshopCdrGoods = append(m.WorkshopCdrGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.WorkshopCdrGoods = append(m.WorkshopCdrGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkshopCdrGoods", wireType)
			}
		case 20:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.GoldGoods = append(m.GoldGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.GoldGoods = append(m.GoldGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field GoldGoods", wireType)
			}
		case 21:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.GoldNormalShopGoods = append(m.GoldNormalShopGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.GoldNormalShopGoods = append(m.GoldNormalShopGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field GoldNormalShopGoods", wireType)
			}
		case 22:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.StoneGoods = append(m.StoneGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.StoneGoods = append(m.StoneGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field StoneGoods", wireType)
			}
		case 23:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.StoneNormalShopGoods = append(m.StoneNormalShopGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.StoneNormalShopGoods = append(m.StoneNormalShopGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field StoneNormalShopGoods", wireType)
			}
		case 24:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.GongXunGoods = append(m.GongXunGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.GongXunGoods = append(m.GongXunGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field GongXunGoods", wireType)
			}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiLevelNpcTimesGoods", wireType)
			}
			m.MultiLevelNpcTimesGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MultiLevelNpcTimesGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishGoods", wireType)
			}
			m.FishGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CopyDefenserGoods = append(m.CopyDefenserGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CopyDefenserGoods = append(m.CopyDefenserGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CopyDefenserGoods", wireType)
			}
		case 28:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TigerGoods = append(m.TigerGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TigerGoods = append(m.TigerGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TigerGoods", wireType)
			}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvaseHeroTimesGoods", wireType)
			}
			m.InvaseHeroTimesGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvaseHeroTimesGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IndecomposableBaowuCount", wireType)
			}
			m.IndecomposableBaowuCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IndecomposableBaowuCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 31:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BuffGoods = append(m.BuffGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BuffGoods = append(m.BuffGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BuffGoods", wireType)
			}
		case 32:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TowerGoods = append(m.TowerGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TowerGoods = append(m.TowerGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TowerGoods", wireType)
			}
		case 33:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ZhanjiangGoods = append(m.ZhanjiangGoods, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ZhanjiangGoods = append(m.ZhanjiangGoods, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ZhanjiangGoods", wireType)
			}
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JunTuanNpcTimesGoods", wireType)
			}
			m.JunTuanNpcTimesGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JunTuanNpcTimesGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MilitaryConfigProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MilitaryConfigProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MilitaryConfigProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenSeekCount", wireType)
			}
			m.GenSeekCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GenSeekCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeekDuration", wireType)
			}
			m.SeekDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeekDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeekMaxTimes", wireType)
			}
			m.SeekMaxTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeekMaxTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenserCount", wireType)
			}
			m.DefenserCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefenserCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FireLevelLimit", wireType)
			}
			m.FireLevelLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FireLevelLimit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TrainingHeroLevel = append(m.TrainingHeroLevel, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TrainingHeroLevel = append(m.TrainingHeroLevel, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingHeroLevel", wireType)
			}
		case 7:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TrainingInitLevel = append(m.TrainingInitLevel, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TrainingInitLevel = append(m.TrainingInitLevel, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingInitLevel", wireType)
			}
		case 8:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TrainingLevelLimit = append(m.TrainingLevelLimit, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TrainingLevelLimit = append(m.TrainingLevelLimit, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingLevelLimit", wireType)
			}
		case 9:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TroopsUnlockLevel = append(m.TroopsUnlockLevel, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TroopsUnlockLevel = append(m.TroopsUnlockLevel, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TroopsUnlockLevel", wireType)
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrainingMaxDuration", wireType)
			}
			m.TrainingMaxDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TrainingMaxDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CaptainInitTrainExp", wireType)
			}
			m.CaptainInitTrainExp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CaptainInitTrainExp |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegionConfigProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegionConfigProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegionConfigProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MapXLen", wireType)
			}
			m.MapXLen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MapXLen |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MapYLen", wireType)
			}
			m.MapYLen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MapYLen |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TentBuildingDuration", wireType)
			}
			m.TentBuildingDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TentBuildingDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoTentBuildingDuration", wireType)
			}
			m.MiaoTentBuildingDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoTentBuildingDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoTentBuildingCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoTentBuildingCost == nil {
				m.MiaoTentBuildingCost = &CostProto{}
			}
			if err := m.MiaoTentBuildingCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WhiteFlagDuration", wireType)
			}
			m.WhiteFlagDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WhiteFlagDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiLevelNpcMaxTimes", wireType)
			}
			m.MultiLevelNpcMaxTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MultiLevelNpcMaxTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildRegionCenterX", wireType)
			}
			m.GuildRegionCenterX = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildRegionCenterX |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildRegionCenterY", wireType)
			}
			m.GuildRegionCenterY = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildRegionCenterY |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestoreHomeProsperity", wireType)
			}
			m.RestoreHomeProsperity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RestoreHomeProsperity |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestoreHomeProsperityDuration", wireType)
			}
			m.RestoreHomeProsperityDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RestoreHomeProsperityDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultDiaoKe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DefaultDiaoKe == nil {
				m.DefaultDiaoKe = &DiaoKeDataProto{}
			}
			if err := m.DefaultDiaoKe.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoInvestigateCdCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoInvestigateCdCost == nil {
				m.MiaoInvestigateCdCost = &CostProto{}
			}
			if err := m.MiaoInvestigateCdCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestigateMailTimeout", wireType)
			}
			m.InvestigateMailTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvestigateMailTimeout |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestigateCd", wireType)
			}
			m.InvestigateCd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvestigateCd |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasicTroopMoveVelocityPerSecond", wireType)
			}
			m.BasicTroopMoveVelocityPerSecond = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BasicTroopMoveVelocityPerSecond |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Edge", wireType)
			}
			m.Edge = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Edge |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewHeroMianDuration", wireType)
			}
			m.NewHeroMianDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewHeroMianDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewHeroRemoveMianBaseLevel", wireType)
			}
			m.NewHeroRemoveMianBaseLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewHeroRemoveMianBaseLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RebornMianDuration", wireType)
			}
			m.RebornMianDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RebornMianDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiLevelNpcRecoveryDuration", wireType)
			}
			m.MultiLevelNpcRecoveryDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MultiLevelNpcRecoveryDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EdgeNotHomeLen", wireType)
			}
			m.EdgeNotHomeLen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EdgeNotHomeLen |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestigateMaxDistance", wireType)
			}
			m.InvestigateMaxDistance = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvestigateMaxDistance |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AstDefendRestoreHomeProsperity", wireType)
			}
			m.AstDefendRestoreHomeProsperity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AstDefendRestoreHomeProsperity |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AstDefendRestoreHomeProsperityAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AstDefendRestoreHomeProsperityAmount == nil {
				m.AstDefendRestoreHomeProsperityAmount = &AmountProto{}
			}
			if err := m.AstDefendRestoreHomeProsperityAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestigateCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InvestigateCost == nil {
				m.InvestigateCost = &CostProto{}
			}
			if err := m.InvestigateCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvestigateSpeedup", wireType)
			}
			m.InvestigateSpeedup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvestigateSpeedup |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MiscConfigProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MiscConfigProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MiscConfigProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailMinBatchCount", wireType)
			}
			m.MailMinBatchCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MailMinBatchCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TowerChallengeMaxTimes", wireType)
			}
			m.TowerChallengeMaxTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TowerChallengeMaxTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailMaxBatchCount", wireType)
			}
			m.MailMaxBatchCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MailMaxBatchCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeHeroNameDuration", wireType)
			}
			m.ChangeHeroNameDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeHeroNameDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeCaptainNameCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangeCaptainNameCost == nil {
				m.ChangeCaptainNameCost = &CostProto{}
			}
			if err := m.ChangeCaptainNameCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ChangeHeroNameYuanbaoCost = append(m.ChangeHeroNameYuanbaoCost, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ChangeHeroNameYuanbaoCost = append(m.ChangeHeroNameYuanbaoCost, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeHeroNameYuanbaoCost", wireType)
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeCaptainRaceDuration", wireType)
			}
			m.ChangeCaptainRaceDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeCaptainRaceDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeCaptainRaceLevel", wireType)
			}
			m.ChangeCaptainRaceLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeCaptainRaceLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoBuildingWorkerDuration", wireType)
			}
			m.MiaoBuildingWorkerDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoBuildingWorkerDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoBuildingWorkerCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoBuildingWorkerCost == nil {
				m.MiaoBuildingWorkerCost = &CostProto{}
			}
			if err := m.MiaoBuildingWorkerCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoTechWorkerDuration", wireType)
			}
			m.MiaoTechWorkerDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoTechWorkerDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoTechWorkerCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoTechWorkerCost == nil {
				m.MiaoTechWorkerCost = &CostProto{}
			}
			if err := m.MiaoTechWorkerCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrategyRestoreDuration", wireType)
			}
			m.StrategyRestoreDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StrategyRestoreDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstChangeHeroNamePrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstChangeHeroNamePrize == nil {
				m.FirstChangeHeroNamePrize = &PrizeProto{}
			}
			if err := m.FirstChangeHeroNamePrize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MondayZeroOClock", wireType)
			}
			m.MondayZeroOClock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MondayZeroOClock |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoCaptainRebirthDuration", wireType)
			}
			m.MiaoCaptainRebirthDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoCaptainRebirthDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoCaptainRebirthCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoCaptainRebirthCost == nil {
				m.MiaoCaptainRebirthCost = &CostProto{}
			}
			if err := m.MiaoCaptainRebirthCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoWorkshopDuration", wireType)
			}
			m.MiaoWorkshopDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MiaoWorkshopDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiaoWorkshopCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiaoWorkshopCost == nil {
				m.MiaoWorkshopCost = &CostProto{}
			}
			if err := m.MiaoWorkshopCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorldChatLevel", wireType)
			}
			m.WorldChatLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WorldChatLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorldChatDuration", wireType)
			}
			m.WorldChatDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WorldChatDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatTextLength", wireType)
			}
			m.ChatTextLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatTextLength |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeHeroNameCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChangeHeroNameCost = append(m.ChangeHeroNameCost, &CostProto{})
			if err := m.ChangeHeroNameCost[len(m.ChangeHeroNameCost)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyResetHour", wireType)
			}
			m.DailyResetHour = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyResetHour |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyResetMinute", wireType)
			}
			m.DailyResetMinute = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyResetMinute |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 103:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.WorkshopRefreshHourMinute = append(m.WorkshopRefreshHourMinute, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.WorkshopRefreshHourMinute = append(m.WorkshopRefreshHourMinute, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkshopRefreshHourMinute", wireType)
			}
		case 105:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDepotEquipCapacity", wireType)
			}
			m.MaxDepotEquipCapacity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDepotEquipCapacity |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 106:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxSignLen", wireType)
			}
			m.MaxSignLen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxSignLen |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 107:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxResourceCollectTimes", wireType)
			}
			m.MaxResourceCollectTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxResourceCollectTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 108:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceRecoveryDuration", wireType)
			}
			m.ResourceRecoveryDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceRecoveryDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 109:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxFavoritePosCount", wireType)
			}
			m.MaxFavoritePosCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxFavoritePosCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 110:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonDuration", wireType)
			}
			m.SeasonDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 111:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipFightingHeroLevel", wireType)
			}
			m.SkipFightingHeroLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SkipFightingHeroLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 112:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.StrongerCoef = append(m.StrongerCoef, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthConfig
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowConfig
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.StrongerCoef = append(m.StrongerCoef, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field StrongerCoef", wireType)
			}
		case 113:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BroadcastGoods", wireType)
			}
			m.BroadcastGoods = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BroadcastGoods |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 114:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildingInitEffect", wireType)
			}
			m.BuildingInitEffect = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildingInitEffect |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 115:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtraResDecayCoef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtraResDecayCoef == nil {
				m.ExtraResDecayCoef = &AmountProto{}
			}
			if err := m.ExtraResDecayCoef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 116:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtraResDecayDuration", wireType)
			}
			m.ExtraResDecayDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExtraResDecayDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 117:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseFightGuideDungeonId", wireType)
			}
			m.CloseFightGuideDungeonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CloseFightGuideDungeonId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 118:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshRecommendHeroDuration", wireType)
			}
			m.RefreshRecommendHeroDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshRecommendHeroDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 119:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshRecommendHeroPageSize", wireType)
			}
			m.RefreshRecommendHeroPageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshRecommendHeroPageSize |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 120:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshRecommendHeroMinLevel", wireType)
			}
			m.RefreshRecommendHeroMinLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshRecommendHeroMinLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 121:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshRecommendHeroPageCount", wireType)
			}
			m.RefreshRecommendHeroPageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshRecommendHeroPageCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 122:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchHeroDuration", wireType)
			}
			m.SearchHeroDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SearchHeroDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 123:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatPrivateMinLevel", wireType)
			}
			m.ChatPrivateMinLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatPrivateMinLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 124:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatDuration", wireType)
			}
			m.ChatDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 125:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatShareDuration", wireType)
			}
			m.ChatShareDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatShareDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 126:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecondWorkerCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SecondWorkerCost == nil {
				m.SecondWorkerCost = &CostProto{}
			}
			if err := m.SecondWorkerCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 127:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecondWorkerUnlockDuration", wireType)
			}
			m.SecondWorkerUnlockDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecondWorkerUnlockDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 128:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedPacketCostPercent", wireType)
			}
			m.RedPacketCostPercent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedPacketCostPercent |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 129:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedPacketGuildMemberMinCount", wireType)
			}
			m.RedPacketGuildMemberMinCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedPacketGuildMemberMinCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 130:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeeklyResetHour", wireType)
			}
			m.WeeklyResetHour = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeeklyResetHour |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeeklyResetMinute", wireType)
			}
			m.WeeklyResetMinute = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeeklyResetMinute |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendHeroOfflineExpireDuration", wireType)
			}
			m.RecommendHeroOfflineExpireDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RecommendHeroOfflineExpireDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildConfigProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildConfigProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildConfigProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildNumPerPage", wireType)
			}
			m.GuildNumPerPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildNumPerPage |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateGuildCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateGuildCost == nil {
				m.CreateGuildCost = &CostProto{}
			}
			if err := m.CreateGuildCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeGuildNameCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChangeGuildNameCost == nil {
				m.ChangeGuildNameCost = &CostProto{}
			}
			if err := m.ChangeGuildNameCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeGuildNameDuration", wireType)
			}
			m.ChangeGuildNameDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeGuildNameDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildLabelLimitChar", wireType)
			}
			m.GuildLabelLimitChar = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildLabelLimitChar |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildLabelLimitCount", wireType)
			}
			m.GuildLabelLimitCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildLabelLimitCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeLeaderCountdownMemberCount", wireType)
			}
			m.ChangeLeaderCountdownMemberCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeLeaderCountdownMemberCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeLeaderCountdownDuration", wireType)
			}
			m.ChangeLeaderCountdownDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChangeLeaderCountdownDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpeachRequiredMemberCount", wireType)
			}
			m.ImpeachRequiredMemberCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImpeachRequiredMemberCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpeachLeaderOfflineDuration", wireType)
			}
			m.ImpeachLeaderOfflineDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImpeachLeaderOfflineDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpeachNpcLeaderHour", wireType)
			}
			m.ImpeachNpcLeaderHour = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImpeachNpcLeaderHour |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpeachNpcLeaderMinute", wireType)
			}
			m.ImpeachNpcLeaderMinute = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImpeachNpcLeaderMinute |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserMaxJoinRequestCount", wireType)
			}
			m.UserMaxJoinRequestCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserMaxJoinRequestCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildMaxInvateCount", wireType)
			}
			m.GuildMaxInvateCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildMaxInvateCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyMaxKickCount", wireType)
			}
			m.DailyMaxKickCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyMaxKickCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildClassTitleMaxCount", wireType)
			}
			m.GuildClassTitleMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildClassTitleMaxCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildClassTitleMaxCharCount", wireType)
			}
			m.GuildClassTitleMaxCharCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildClassTitleMaxCharCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstJoinGuildPrize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FirstJoinGuildPrize == nil {
				m.FirstJoinGuildPrize = &PrizeProto{}
			}
			if err := m.FirstJoinGuildPrize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextLimitChar", wireType)
			}
			m.TextLimitChar = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TextLimitChar |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InternalTextLimitChar", wireType)
			}
			m.InternalTextLimitChar = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InternalTextLimitChar |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendGuildTextLimitChar", wireType)
			}
			m.FriendGuildTextLimitChar = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FriendGuildTextLimitChar |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnemyGuildTextLimitChar", wireType)
			}
			m.EnemyGuildTextLimitChar = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnemyGuildTextLimitChar |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContributionPerHelp", wireType)
			}
			m.ContributionPerHelp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContributionPerHelp |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContributionMaxCountPerDay", wireType)
			}
			m.ContributionMaxCountPerDay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContributionMaxCountPerDay |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 38:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BigBoxCollectableDuration", wireType)
			}
			m.BigBoxCollectableDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BigBoxCollectableDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 39:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventPrizeMaxCount", wireType)
			}
			m.EventPrizeMaxCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventPrizeMaxCount |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateCountryYuanbao", wireType)
			}
			m.UpdateCountryYuanbao = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateCountryYuanbao |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateCountryDuration", wireType)
			}
			m.UpdateCountryDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateCountryDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 42:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateCountryLostPrestigeCoef", wireType)
			}
			m.UpdateCountryLostPrestigeCoef = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateCountryLostPrestigeCoef |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 43:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildDonateNeedHeroLevel", wireType)
			}
			m.GuildDonateNeedHeroLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GuildDonateNeedHeroLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyJoinGuildDuration", wireType)
			}
			m.NotifyJoinGuildDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyJoinGuildDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 45:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyJoinGuildDurationOnOnlineOrLeave", wireType)
			}
			m.NotifyJoinGuildDurationOnOnlineOrLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotifyJoinGuildDurationOnOnlineOrLeave |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateCountryCost", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdateCountryCost == nil {
				m.UpdateCountryCost = &CostProto{}
			}
			if err := m.UpdateCountryCost.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 47:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchNoGuildHerosDuration", wireType)
			}
			m.SearchNoGuildHerosDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SearchNoGuildHerosDuration |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 48:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchNoGuildHerosPerPageSize", wireType)
			}
			m.SearchNoGuildHerosPerPageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SearchNoGuildHerosPerPageSize |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *I18NDataProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: I18NDataProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: I18NDataProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Language", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Language = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pair", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pair = append(m.Pair, &I18NPairProto{})
			if err := m.Pair[len(m.Pair)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Display", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Display = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *I18NPairProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: I18NPairProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: I18NPairProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = append(m.Key, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeadProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeadProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeadProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockNeedCaptainSoul", wireType)
			}
			m.UnlockNeedCaptainSoul = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockNeedCaptainSoul |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockNeedHeroLevel", wireType)
			}
			m.UnlockNeedHeroLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockNeedHeroLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BodyProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BodyProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BodyProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockNeedCaptainSoul", wireType)
			}
			m.UnlockNeedCaptainSoul = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockNeedCaptainSoul |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnlockNeedHeroLevel", wireType)
			}
			m.UnlockNeedHeroLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnlockNeedHeroLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthConfig
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowConfig
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipConfig(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthConfig = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowConfig   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/shared_proto/config.proto", fileDescriptorConfig)
}

var fileDescriptorConfig = []byte{
	// 6469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7c, 0xc9, 0x76, 0x1c, 0x37,
	0x96, 0x68, 0x51, 0x96, 0x2c, 0x11, 0x9c, 0xc1, 0x29, 0x44, 0x51, 0x13, 0x3d, 0xc9, 0xe5, 0x2a,
	0xc9, 0x96, 0x07, 0x49, 0xb6, 0xca, 0xb6, 0x48, 0x8a, 0x94, 0x64, 0x91, 0xa2, 0x49, 0xba, 0x2c,
	0xf9, 0xbd, 0x7a, 0xf1, 0x90, 0x11, 0xc8, 0x48, 0x88, 0x19, 0x83, 0x62, 0x20, 0x33, 0x59, 0x55,
	0xaf, 0xa6, 0x77, 0x4e, 0xef, 0x7b, 0xd5, 0xbd, 0xed, 0x55, 0xef, 0x7a, 0xdd, 0x7f, 0xd0, 0xcb,
	0xfe, 0x84, 0x3e, 0xd5, 0x7f, 0xd1, 0xab, 0x3e, 0xb8, 0x17, 0x40, 0x00, 0x91, 0x49, 0x95, 0xe9,
	0x55, 0x9f, 0x53, 0xe7, 0x94, 0xf2, 0x4e, 0x71, 0x71, 0x71, 0x47, 0x00, 0x34, 0xf9, 0x2c, 0x12,
	0x65, 0xa7, 0x6a, 0xdd, 0x0c, 0xd2, 0xf8, 0x56, 0x57, 0x44, 0x9d, 0x32, 0x63, 0x47, 0xb7, 0x62,
	0xd6, 0xe5, 0x77, 0x6e, 0x65, 0xad, 0x5b, 0x45, 0x87, 0xe5, 0x3c, 0xf4, 0xb3, 0x3c, 0x2d, 0xd3,
	0x5b, 0x41, 0x9a, 0xb4, 0x45, 0x74, 0x13, 0x7e, 0xd0, 0x73, 0xf0, 0x7f, 0x4b, 0x9f, 0xfc, 0x78,
	0xf6, 0x16, 0x2b, 0x38, 0x32, 0x2f, 0xdd, 0xfd, 0xf1, 0x5c, 0x61, 0x1a, 0xf3, 0xa2, 0x14, 0xc1,
	0xe9, 0x39, 0x63, 0xd1, 0x15, 0x25, 0xcb, 0xfb, 0x8a, 0xf3, 0xd3, 0x1f, 0xcf, 0x19, 0x55, 0xa2,
	0x1b, 0xfe, 0x04, 0xb6, 0x34, 0x0d, 0x8b, 0xd3, 0xb3, 0x95, 0xe9, 0x11, 0xcf, 0x6f, 0x9e, 0xda,
	0x9c, 0x25, 0x2b, 0x0e, 0x14, 0xd7, 0xfd, 0x53, 0xec, 0x21, 0xcb, 0x4a, 0x26, 0x12, 0xbf, 0x48,
	0xab, 0xae, 0xe2, 0xbe, 0xf3, 0xe3, 0xb9, 0xdb, 0xa2, 0xe8, 0x88, 0x24, 0x3a, 0xfd, 0x1a, 0x8b,
	0x8c, 0x77, 0xbb, 0xa7, 0x5f, 0x63, 0xd1, 0x49, 0xb3, 0xd3, 0x6b, 0x19, 0xa4, 0x55, 0x52, 0x9a,
	0x7d, 0xff, 0xf8, 0x34, 0x26, 0x8d, 0x4e, 0xff, 0xb5, 0xb0, 0x4a, 0x22, 0x9e, 0x26, 0xa7, 0x5f,
	0x5c, 0xce, 0x92, 0x83, 0xd3, 0x7b, 0x75, 0x8b, 0x09, 0xff, 0xb8, 0xc3, 0x92, 0xd3, 0x2b, 0x1a,
	0xa7, 0x49, 0x51, 0x1a, 0x4f, 0x3b, 0xc5, 0x27, 0xdb, 0x55, 0x12, 0x94, 0xc2, 0x2c, 0xf1, 0x74,
	0x81, 0x74, 0x5c, 0x29, 0xb6, 0x53, 0x24, 0x9a, 0x9c, 0x47, 0xf5, 0xe7, 0x4e, 0xc1, 0x17, 0xb1,
	0x3c, 0xe4, 0x3f, 0xc1, 0x32, 0xc7, 0x1d, 0x9e, 0x44, 0x47, 0xd5, 0xe9, 0x2d, 0xf3, 0xaa, 0x92,
	0xb9, 0xc9, 0xa8, 0x7a, 0xef, 0x34, 0x9f, 0x64, 0xc9, 0x4b, 0xc1, 0x4c, 0x2c, 0x9d, 0xc2, 0x6f,
	0xda, 0x2c, 0x8f, 0x4f, 0x6f, 0x9b, 0xa2, 0xca, 0x0f, 0x79, 0xff, 0xf4, 0xb6, 0xe9, 0x89, 0x34,
	0x89, 0x92, 0x9f, 0xb0, 0x89, 0x05, 0x67, 0x85, 0xb1, 0xcc, 0x69, 0x12, 0xbe, 0x60, 0xc9, 0xab,
	0x8a, 0xfd, 0x84, 0x80, 0xea, 0xf0, 0x96, 0xf8, 0x09, 0xe9, 0x97, 0xb3, 0xa0, 0xa3, 0xd8, 0x3e,
	0x3f, 0x6d, 0x31, 0xf4, 0x23, 0xfe, 0x13, 0x36, 0x3f, 0xcb, 0xd3, 0x38, 0xb5, 0xfc, 0xe6, 0xfe,
	0xa9, 0x92, 0x46, 0x98, 0xc6, 0x3e, 0x3f, 0xe4, 0x49, 0x89, 0xdc, 0x2b, 0xff, 0xfa, 0x15, 0x79,
	0x73, 0x0d, 0xb4, 0xa1, 0x6b, 0x64, 0xaa, 0x25, 0x6b, 0x97, 0x48, 0x22, 0xbf, 0xcb, 0xfa, 0x69,
	0x55, 0x7a, 0x23, 0xd7, 0xde, 0xb8, 0x31, 0x76, 0x7b, 0x09, 0x69, 0x6f, 0xae, 0x2a, 0xec, 0x53,
	0x40, 0xee, 0x48, 0xd8, 0xee, 0x64, 0xcb, 0x01, 0xd2, 0x5f, 0x91, 0x09, 0x23, 0x24, 0x64, 0x25,
	0xf3, 0xce, 0x80, 0x08, 0xaf, 0x21, 0x62, 0x9d, 0x95, 0x0c, 0x05, 0x8c, 0xb7, 0x2c, 0x90, 0xd4,
	0xa1, 0xe4, 0x41, 0x27, 0x49, 0xbb, 0x69, 0xd4, 0x47, 0x01, 0x6f, 0x38, 0x3a, 0xec, 0x1b, 0x6c,
	0x2d, 0x62, 0xb2, 0x74, 0x80, 0x74, 0x85, 0xbc, 0x11, 0xf1, 0xc4, 0x3b, 0x7b, 0x6d, 0xe4, 0xc6,
	0xd8, 0xed, 0x69, 0xc5, 0x88, 0x8b, 0xdc, 0xe4, 0xc9, 0xae, 0x44, 0xd2, 0x6f, 0xc9, 0x2c, 0x14,
	0x6a, 0x5f, 0x56, 0x42, 0x9f, 0x1f, 0xb2, 0x6e, 0xc5, 0x4a, 0xee, 0x9d, 0x83, 0x8f, 0x5d, 0x57,
	0x3c, 0x9b, 0x92, 0x62, 0x9f, 0x15, 0x07, 0x0f, 0x15, 0xbe, 0xfe, 0xe6, 0x4c, 0xd4, 0xc4, 0xd1,
	0xbb, 0x84, 0xd4, 0x22, 0xbd, 0x37, 0x41, 0xd2, 0xc5, 0xa6, 0xa4, 0x5a, 0xc2, 0xa8, 0x91, 0x40,
	0x6f, 0x93, 0xf3, 0x45, 0xda, 0x0d, 0x05, 0xcf, 0xbd, 0xf3, 0x8e, 0xb9, 0xf6, 0x10, 0xfa, 0x94,
	0x1f, 0xf2, 0x2e, 0x72, 0x69, 0x42, 0xfa, 0x3e, 0x39, 0xdb, 0xe1, 0x79, 0xea, 0x5d, 0x00, 0x86,
	0x79, 0xc5, 0xf0, 0x88, 0xe7, 0xa9, 0x45, 0x0d, 0x24, 0xf4, 0x0e, 0x19, 0x43, 0xc5, 0xba, 0x12,
	0xe3, 0x8d, 0x02, 0xc7, 0x82, 0xad, 0x99, 0xc5, 0x82, 0x6b, 0x00, 0x00, 0xdd, 0x24, 0xb8, 0x4c,
	0x3f, 0xe8, 0xb2, 0xa2, 0x50, 0xec, 0x04, 0xd8, 0x2f, 0xd9, 0xec, 0x6b, 0x12, 0x6d, 0xc9, 0x98,
	0x8a, 0x5c, 0x28, 0xfd, 0x84, 0x10, 0xd9, 0xc0, 0x29, 0x09, 0x63, 0x8e, 0xca, 0xab, 0xac, 0xe0,
	0x16, 0xef, 0x68, 0x4b, 0xff, 0xa6, 0x1f, 0x90, 0x73, 0xd0, 0x15, 0x79, 0xe3, 0x0e, 0xc3, 0xa6,
	0x84, 0xd5, 0x76, 0x44, 0x1a, 0x7a, 0x87, 0x8c, 0xf2, 0x57, 0x95, 0xc8, 0x62, 0x9e, 0x94, 0xde,
	0x84, 0x63, 0xfc, 0x87, 0x1a, 0x6e, 0x19, 0xdf, 0xd0, 0xd2, 0xc7, 0x64, 0xc6, 0xfc, 0xf0, 0x5f,
	0x55, 0xac, 0x2b, 0xca, 0xbe, 0x37, 0x09, 0x02, 0x96, 0x9b, 0x02, 0xbe, 0x45, 0x34, 0xca, 0x98,
	0xe6, 0x0d, 0xb0, 0x2b, 0x2a, 0xe7, 0x6d, 0x91, 0xf0, 0xd0, 0x9b, 0x1a, 0x2e, 0x6a, 0x17, 0xd1,
	0x4d, 0x51, 0x0a, 0x4c, 0xbf, 0x26, 0x93, 0xb5, 0xa8, 0x92, 0xa5, 0xc7, 0xde, 0xf4, 0xf0, 0x35,
	0xed, 0xb3, 0xf4, 0x18, 0x85, 0x4c, 0x70, 0x1b, 0x26, 0x23, 0x51, 0xf7, 0x6b, 0x68, 0xf6, 0x19,
	0xc7, 0xb5, 0xd6, 0x10, 0x67, 0x59, 0x7e, 0x3c, 0xb0, 0x40, 0x32, 0x12, 0x35, 0x3b, 0x6b, 0x09,
	0x30, 0x0a, 0x75, 0x22, 0x51, 0x09, 0x78, 0x80, 0x48, 0x15, 0x89, 0x81, 0x03, 0x94, 0xab, 0x28,
	0x73, 0x26, 0x12, 0x48, 0x29, 0xa0, 0xc4, 0xac, 0xb3, 0x8a, 0x7d, 0x85, 0xb4, 0xb4, 0x98, 0x28,
	0x6d, 0x98, 0xf4, 0x01, 0x68, 0x71, 0xbd, 0x39, 0xc7, 0x07, 0xf6, 0x25, 0xcc, 0xf2, 0x01, 0xa0,
	0xa1, 0x1f, 0x91, 0xd1, 0x58, 0x2a, 0x0c, 0x01, 0x38, 0x0f, 0x0c, 0x73, 0x9a, 0xc1, 0x89, 0xbd,
	0x0b, 0x92, 0x0c, 0x42, 0xef, 0x53, 0x32, 0xd6, 0xca, 0x59, 0x12, 0x74, 0x90, 0x69, 0xe1, 0x35,
	0x4c, 0x04, 0x09, 0x81, 0xed, 0x26, 0xb9, 0x00, 0x89, 0xa3, 0x95, 0xf6, 0xbc, 0x45, 0xe0, 0x99,
	0xb5, 0x78, 0x56, 0xd3, 0x9e, 0x8a, 0xd6, 0x12, 0x7f, 0xc9, 0x48, 0xb2, 0x9b, 0x67, 0xcc, 0x6c,
	0x9e, 0x13, 0x49, 0xca, 0x9e, 0x7b, 0x69, 0xd5, 0xad, 0xbf, 0xa9, 0xf7, 0x40, 0x43, 0xe9, 0xe7,
	0x64, 0x5c, 0xf5, 0xd1, 0x7e, 0xd1, 0x49, 0x8f, 0xbc, 0x8b, 0x20, 0x63, 0x51, 0xc9, 0xd8, 0x40,
	0xd4, 0x5e, 0x27, 0x3d, 0x42, 0xfe, 0xb1, 0x76, 0x0d, 0xb1, 0x79, 0x83, 0xb4, 0x28, 0xbd, 0xa5,
	0x61, 0xbc, 0x6b, 0x69, 0x51, 0xba, 0xbc, 0x12, 0x42, 0x77, 0xc8, 0x9c, 0xb3, 0x80, 0x36, 0x2f,
	0x4b, 0x9e, 0x17, 0xde, 0x25, 0x90, 0x71, 0x65, 0x70, 0x0d, 0x1b, 0x48, 0x80, 0xa2, 0x68, 0x30,
	0x80, 0xa0, 0x8f, 0x08, 0x2d, 0x05, 0xf7, 0xa1, 0x8f, 0xf1, 0xb3, 0x4a, 0xf9, 0xc7, 0xb2, 0x63,
	0x93, 0x7d, 0xc1, 0x9f, 0x48, 0xfc, 0x4e, 0x65, 0x67, 0x97, 0xd2, 0x85, 0xd2, 0x07, 0x04, 0x5d,
	0xdf, 0x0f, 0xd2, 0xb8, 0x25, 0x12, 0xee, 0x5d, 0x1e, 0x0c, 0xb9, 0x35, 0x44, 0x59, 0x75, 0x87,
	0x5b, 0x60, 0xba, 0x47, 0xe6, 0xf5, 0xf2, 0x72, 0xde, 0x12, 0x79, 0xd9, 0x51, 0xfa, 0x5c, 0x01,
	0x51, 0x57, 0xdd, 0xf5, 0xed, 0x22, 0x89, 0xa5, 0xd3, 0x6c, 0x30, 0x88, 0x91, 0xf6, 0xc6, 0xf4,
	0x19, 0xa6, 0x89, 0x2c, 0x2e, 0x57, 0x1d, 0x7b, 0x43, 0xe6, 0x5c, 0x07, 0x8c, 0xb2, 0x77, 0x54,
	0x43, 0xe8, 0x27, 0x64, 0x1c, 0xc6, 0x1e, 0x1f, 0x5b, 0x05, 0xef, 0x1a, 0xf0, 0xce, 0xe8, 0xba,
	0x20, 0x51, 0x8a, 0x0b, 0xc8, 0x54, 0x09, 0x7f, 0x47, 0x56, 0xbe, 0xd8, 0xbb, 0xee, 0x78, 0xe4,
	0x26, 0x8f, 0xeb, 0x65, 0x4b, 0x3c, 0xbd, 0x4d, 0x2e, 0x44, 0x3c, 0xf6, 0x8b, 0x6e, 0x5a, 0x7a,
	0x2b, 0xae, 0x52, 0x3c, 0xde, 0xeb, 0xa6, 0x56, 0xa2, 0x3c, 0x1f, 0x21, 0x44, 0xc6, 0x56, 0xce,
	0x02, 0x8e, 0x9e, 0xfb, 0x96, 0x13, 0x26, 0xbb, 0x2c, 0xb0, 0x0c, 0x7b, 0x21, 0x57, 0x3f, 0xe9,
	0xdb, 0xe4, 0xac, 0x9c, 0xc1, 0xbc, 0xb7, 0x81, 0x5a, 0x17, 0xe2, 0xbd, 0x4e, 0x9a, 0xa9, 0xea,
	0x24, 0xb1, 0xf4, 0x1b, 0xb7, 0xc8, 0x94, 0xa2, 0xec, 0x72, 0xef, 0x1d, 0xc7, 0xec, 0x75, 0x91,
	0xd9, 0x97, 0x58, 0x2b, 0x3c, 0x22, 0x17, 0x43, 0xbf, 0x24, 0xe3, 0x05, 0x0f, 0x72, 0x5e, 0xfa,
	0x98, 0x35, 0xde, 0x75, 0xdc, 0x69, 0x0f, 0x50, 0x8d, 0xdc, 0x31, 0x56, 0xd4, 0x50, 0x19, 0xa7,
	0x36, 0xbf, 0x1f, 0x8b, 0x22, 0xf0, 0xde, 0x83, 0x46, 0x62, 0x88, 0x90, 0x2d, 0x51, 0x04, 0x4a,
	0x91, 0xc2, 0x85, 0xd2, 0x4d, 0x32, 0x15, 0xf2, 0x36, 0xab, 0xba, 0xa5, 0xaf, 0x26, 0x4a, 0xef,
	0xe7, 0x4e, 0xfa, 0x5c, 0x47, 0xec, 0x1a, 0x22, 0x41, 0xca, 0xea, 0x19, 0x6f, 0x64, 0x77, 0x32,
	0x74, 0x10, 0xb5, 0x13, 0x95, 0x2c, 0x8f, 0x78, 0xe9, 0x7d, 0x30, 0xe8, 0x44, 0xfb, 0x80, 0xb1,
	0x9d, 0x08, 0x21, 0xb8, 0x67, 0xc9, 0x01, 0xae, 0xe2, 0x17, 0xb0, 0x8a, 0x7a, 0xcf, 0x92, 0x83,
	0x5a, 0xfd, 0x0b, 0xb9, 0xfa, 0x49, 0xbf, 0x20, 0x13, 0x7a, 0x48, 0x44, 0xb6, 0x5f, 0x02, 0xdb,
	0xa2, 0x29, 0xd6, 0xe2, 0x87, 0x0e, 0x4b, 0x6a, 0xce, 0xb1, 0x56, 0x0d, 0xa1, 0xab, 0x64, 0xf2,
	0x65, 0x95, 0xf8, 0x3d, 0xc1, 0x74, 0xcd, 0xb9, 0xe9, 0x44, 0xe2, 0x93, 0x2a, 0x79, 0x2e, 0x18,
	0x16, 0x18, 0x2b, 0x12, 0x5f, 0x5a, 0x60, 0xba, 0x4d, 0xe6, 0x5c, 0x19, 0x7e, 0x96, 0x8b, 0x63,
	0xee, 0xdd, 0x02, 0x49, 0x97, 0x87, 0x48, 0xda, 0x91, 0x78, 0xd5, 0x95, 0xbd, 0x6c, 0xc2, 0x65,
	0x1d, 0x53, 0x43, 0xb6, 0x1f, 0x74, 0x58, 0x56, 0xf2, 0xdc, 0xfb, 0xc8, 0xdd, 0x08, 0xc4, 0xae,
	0x21, 0x52, 0xd5, 0xb1, 0xd0, 0x01, 0xca, 0x4d, 0xd0, 0x42, 0xc0, 0x28, 0x1f, 0x3b, 0x46, 0x51,
	0x12, 0x2c, 0xa3, 0x84, 0x35, 0x44, 0xba, 0xa4, 0xf2, 0x00, 0xe4, 0xfd, 0xc4, 0xe1, 0x55, 0xdb,
	0x6c, 0x78, 0xc1, 0x07, 0xc6, 0x82, 0x1a, 0x4a, 0x1f, 0x90, 0xa9, 0x40, 0x94, 0x7d, 0xec, 0xda,
	0x31, 0xfc, 0x3e, 0x75, 0x8a, 0xe8, 0x9a, 0x28, 0xfb, 0x0f, 0x0f, 0x9d, 0xf6, 0x66, 0x22, 0xb0,
	0x61, 0x0d, 0x11, 0xa0, 0xc5, 0x67, 0xa0, 0xc5, 0x80, 0x88, 0x7a, 0x0d, 0xb5, 0x08, 0xd0, 0x02,
	0x0a, 0x5e, 0x84, 0xbc, 0x77, 0x81, 0xb7, 0x2e, 0x78, 0x51, 0xcd, 0x75, 0xbe, 0xc4, 0x5f, 0xf4,
	0x13, 0x72, 0xa1, 0x28, 0x73, 0x56, 0xf2, 0xa8, 0xef, 0xdd, 0x73, 0x7b, 0x5a, 0x05, 0xb6, 0x32,
	0x86, 0xa6, 0x94, 0x0d, 0x94, 0x4e, 0xc3, 0x11, 0x4f, 0x78, 0xce, 0xca, 0x34, 0xf7, 0x3e, 0x77,
	0x7c, 0x48, 0xa5, 0xe0, 0x4d, 0x8d, 0x56, 0x0d, 0x54, 0xd0, 0x00, 0x4b, 0x47, 0x7e, 0x29, 0x2a,
	0x3f, 0xaa, 0x58, 0x82, 0x46, 0xfb, 0xc2, 0x09, 0x9c, 0x27, 0xa2, 0xda, 0xac, 0x58, 0x62, 0xa5,
	0x81, 0x97, 0x35, 0x84, 0x7e, 0x65, 0x31, 0xc3, 0x92, 0xef, 0x3b, 0x29, 0x40, 0x31, 0xcb, 0x85,
	0x0e, 0x0a, 0x80, 0xe5, 0xcb, 0xa8, 0x95, 0x6d, 0xa9, 0x4e, 0xdf, 0xbf, 0x72, 0x36, 0x1d, 0x3a,
	0x58, 0x4c, 0xd9, 0x3a, 0x6a, 0x6b, 0x88, 0xf4, 0x58, 0x7d, 0xfa, 0xa8, 0xd9, 0xbf, 0x04, 0x76,
	0xed, 0xb1, 0x5b, 0x0a, 0x6b, 0x4b, 0x98, 0x8c, 0x1d, 0xa0, 0xec, 0xfe, 0xf0, 0x20, 0x44, 0x8b,
	0xf8, 0x0a, 0x44, 0xe8, 0x4d, 0xd8, 0x05, 0x9c, 0x2d, 0x60, 0x3c, 0xb7, 0x40, 0x72, 0x64, 0x90,
	0xeb, 0xd6, 0xcc, 0x5f, 0x03, 0xf3, 0x82, 0xf9, 0x7e, 0x11, 0xd8, 0xac, 0x24, 0x36, 0x80, 0x3a,
	0x5d, 0x29, 0xce, 0x07, 0xee, 0xc2, 0x21, 0x5d, 0x3b, 0x0b, 0xaf, 0x21, 0xf4, 0x1b, 0x32, 0x2b,
	0x43, 0xbf, 0x6f, 0xba, 0x45, 0xdc, 0xb8, 0xd5, 0x66, 0x0e, 0x79, 0xa1, 0xbb, 0xc3, 0xda, 0xf8,
	0xd3, 0x2f, 0x1b, 0x60, 0x7a, 0x5b, 0x8e, 0x1c, 0x7e, 0x9f, 0x63, 0x5f, 0xb7, 0xf6, 0xba, 0x66,
	0xb0, 0xc5, 0x5e, 0x70, 0xe8, 0xea, 0xee, 0x91, 0x31, 0xe4, 0x29, 0x4a, 0x16, 0x71, 0x6f, 0xdd,
	0x09, 0xb3, 0x55, 0xf6, 0x82, 0xef, 0x49, 0xb8, 0x35, 0x45, 0xb4, 0x34, 0x6c, 0xa0, 0xc1, 0x03,
	0xaf, 0x79, 0xe8, 0x78, 0x8d, 0xd5, 0x1c, 0x59, 0x85, 0x23, 0x70, 0xa1, 0xf4, 0x0e, 0x19, 0x67,
	0x41, 0x47, 0xf0, 0x43, 0xa5, 0xf9, 0xc6, 0x6b, 0x34, 0x1f, 0x53, 0x94, 0xa0, 0xfc, 0x2a, 0xa1,
	0x2c, 0x28, 0xc5, 0x21, 0xf7, 0x43, 0x1e, 0xe5, 0x5c, 0xb1, 0x6f, 0xbe, 0x86, 0x7d, 0x1a, 0xe9,
	0xd7, 0x81, 0x1c, 0x64, 0x6c, 0x91, 0x59, 0x57, 0x06, 0xe6, 0xde, 0x47, 0x4e, 0xee, 0x7d, 0x60,
	0x71, 0xd9, 0xb9, 0x97, 0x35, 0xe1, 0xd2, 0x8b, 0x94, 0x13, 0xc2, 0x46, 0x3e, 0x76, 0x06, 0x4f,
	0x74, 0x41, 0xab, 0xbd, 0xce, 0x0d, 0x40, 0x06, 0x6f, 0x92, 0x05, 0x3e, 0xcc, 0x8c, 0xc0, 0xfa,
	0xc4, 0x09, 0xde, 0xed, 0x2c, 0x90, 0x53, 0xa3, 0x65, 0x88, 0xa4, 0x86, 0xd0, 0x75, 0x42, 0x21,
	0x70, 0xdb, 0x95, 0xed, 0x45, 0xdf, 0x34, 0xea, 0x26, 0x4b, 0x36, 0x2a, 0x77, 0x64, 0x35, 0x10,
	0x90, 0xb2, 0x43, 0xe6, 0xcc, 0x41, 0x46, 0x95, 0x74, 0xd3, 0xe0, 0x00, 0xe5, 0x3c, 0x75, 0x1a,
	0x5e, 0x7d, 0x9e, 0xf1, 0x1d, 0x50, 0xd4, 0x0a, 0xd1, 0xd6, 0x00, 0x82, 0x3e, 0x25, 0xb3, 0xfa,
	0x30, 0xd4, 0x4f, 0x33, 0x8e, 0x46, 0x29, 0xbc, 0x2d, 0xc7, 0xbd, 0x37, 0x14, 0xc5, 0xb3, 0x8c,
	0x5b, 0xb6, 0x99, 0x69, 0x37, 0xc0, 0x05, 0xdd, 0x94, 0xab, 0x14, 0xfe, 0xb1, 0xbd, 0xc8, 0xc2,
	0xdb, 0x76, 0x4a, 0xdb, 0x66, 0x25, 0x7e, 0xa8, 0x1a, 0x91, 0x22, 0x5b, 0x26, 0x0b, 0x58, 0xd0,
	0x87, 0x64, 0x26, 0x14, 0x2c, 0xf5, 0x0f, 0x38, 0x38, 0x2d, 0xae, 0xf2, 0x99, 0x93, 0x70, 0xd6,
	0x05, 0x4b, 0xbf, 0xe1, 0x6e, 0xba, 0x9b, 0x0c, 0x1d, 0x20, 0x7d, 0x97, 0x9c, 0x13, 0x41, 0x9a,
	0x14, 0xde, 0x8e, 0xd3, 0xed, 0x3d, 0x0e, 0xd2, 0x44, 0xcd, 0x68, 0x80, 0xa6, 0x5f, 0x93, 0xa9,
	0x4c, 0xfa, 0x76, 0x9e, 0xa6, 0x99, 0x52, 0xfa, 0x5b, 0xa7, 0x3e, 0xec, 0x1c, 0xf2, 0x7d, 0x89,
	0xb4, 0xaa, 0x59, 0x66, 0x81, 0x0a, 0xba, 0x46, 0xa6, 0xd3, 0xaa, 0xe4, 0xb9, 0x0f, 0x35, 0x0d,
	0x45, 0xec, 0x3a, 0xa1, 0xfa, 0x4c, 0xa2, 0x65, 0x4d, 0xb3, 0xd4, 0x4d, 0x6d, 0x58, 0x41, 0x7f,
	0x4d, 0x16, 0x2d, 0x21, 0x78, 0xdc, 0xa5, 0x64, 0xed, 0x39, 0xbd, 0xa7, 0x91, 0x85, 0x07, 0x5c,
	0xb5, 0xc4, 0xb9, 0x74, 0x10, 0x53, 0xd0, 0x7d, 0x32, 0x07, 0xc5, 0x3b, 0x4c, 0x8f, 0x12, 0x8c,
	0x1e, 0x3f, 0xe4, 0x45, 0xe0, 0xed, 0x83, 0xd0, 0x15, 0xbb, 0xea, 0x4b, 0x12, 0x88, 0x93, 0x75,
	0x6e, 0x1b, 0x96, 0x06, 0x03, 0xc8, 0xba, 0x47, 0xc6, 0x0a, 0x8e, 0x51, 0xf9, 0xdd, 0x60, 0x8f,
	0x0c, 0xf5, 0x1a, 0xd9, 0x1a, 0x3d, 0x72, 0x8d, 0x91, 0xc5, 0x0d, 0x85, 0xb5, 0x44, 0x04, 0x03,
	0xec, 0xaf, 0x07, 0x4f, 0x74, 0x56, 0x45, 0xb4, 0x9a, 0xf6, 0xac, 0x00, 0x8b, 0x6a, 0xa8, 0x5c,
	0x63, 0x5c, 0x75, 0x4b, 0xa1, 0x3c, 0x4f, 0x46, 0x2a, 0x38, 0xcd, 0xf7, 0x20, 0xe7, 0x2d, 0x27,
	0xbe, 0xb7, 0x24, 0x21, 0x78, 0xdb, 0x76, 0x66, 0x2d, 0x72, 0x26, 0x6e, 0xc2, 0x87, 0x49, 0x2d,
	0xfb, 0x19, 0xf7, 0x9e, 0xff, 0x2d, 0xa9, 0xfb, 0xfd, 0x8c, 0x0f, 0x93, 0x2a, 0xe1, 0xf4, 0x09,
	0xa1, 0x65, 0xce, 0x59, 0x51, 0xe5, 0x7d, 0xbf, 0x94, 0x19, 0x0d, 0x34, 0x7d, 0xe1, 0xc4, 0xdc,
	0xbe, 0x22, 0xd8, 0xcf, 0xb9, 0x65, 0xb7, 0xe9, 0xb2, 0x01, 0x96, 0x35, 0x35, 0xca, 0x59, 0x58,
	0xd7, 0xd4, 0x1f, 0x9c, 0x9a, 0xba, 0x09, 0x38, 0xa7, 0xa6, 0x46, 0x16, 0x88, 0x7e, 0x4d, 0x26,
	0x4d, 0x89, 0xe0, 0xfc, 0x80, 0xe7, 0xde, 0xff, 0x72, 0xfb, 0x38, 0x55, 0x09, 0x00, 0xa7, 0x9b,
	0x30, 0x1b, 0x06, 0x3d, 0x8d, 0x2e, 0x90, 0x50, 0x60, 0xfe, 0xb7, 0x53, 0x5d, 0x55, 0x69, 0xb4,
	0xfa, 0xd0, 0x97, 0x35, 0x84, 0x3e, 0x22, 0xd3, 0x70, 0x55, 0xe1, 0x1f, 0x55, 0x7e, 0xce, 0xdb,
	0x39, 0x2f, 0x3a, 0xde, 0x6f, 0x9c, 0x64, 0xf6, 0x83, 0x44, 0x7f, 0x5f, 0xed, 0x22, 0xd2, 0x8a,
	0x9d, 0x63, 0x07, 0x21, 0xd5, 0x30, 0x92, 0x40, 0x8d, 0xff, 0xe3, 0xa8, 0xa1, 0xc4, 0x58, 0x6a,
	0x1c, 0xd7, 0x10, 0xfa, 0x3d, 0x59, 0xb4, 0xeb, 0x9b, 0x2c, 0xb5, 0xb9, 0x72, 0x68, 0x1f, 0xb4,
	0xb9, 0x66, 0xca, 0x8c, 0xa9, 0x6d, 0x7b, 0x25, 0xcb, 0xad, 0x4a, 0x33, 0xc7, 0x86, 0xa0, 0xe8,
	0x97, 0x64, 0x12, 0x04, 0xd6, 0x49, 0xec, 0xff, 0x3a, 0xdb, 0x23, 0xa9, 0xdd, 0x14, 0x36, 0x5e,
	0x5a, 0x20, 0xfa, 0x84, 0x4c, 0xab, 0x41, 0xcb, 0x9c, 0x26, 0x7b, 0x6c, 0x30, 0xc4, 0x86, 0x1d,
	0x40, 0x63, 0x88, 0xd5, 0x18, 0xba, 0x47, 0xe6, 0x51, 0x56, 0xc6, 0xf3, 0x58, 0x14, 0x85, 0x4c,
	0xf9, 0x70, 0x5c, 0xd3, 0x1a, 0x14, 0xb8, 0x63, 0x48, 0xea, 0x63, 0x1b, 0x3c, 0x9b, 0x76, 0x31,
	0xd2, 0x95, 0x61, 0x2c, 0xc3, 0x13, 0x13, 0x3d, 0xcc, 0x04, 0x8e, 0x2b, 0xcb, 0x51, 0x0c, 0xce,
	0x46, 0x9c, 0x71, 0x66, 0xfa, 0xb8, 0x01, 0xa6, 0x1f, 0x90, 0xf3, 0x05, 0x2f, 0x4b, 0x91, 0x44,
	0x5e, 0xe8, 0x9e, 0x2c, 0x94, 0xb9, 0x48, 0xa2, 0x1d, 0x26, 0xf2, 0x5d, 0x4d, 0x41, 0x6f, 0x90,
	0xb3, 0xe2, 0xa3, 0xbb, 0x89, 0xc7, 0x9d, 0x5e, 0xe2, 0xf1, 0x47, 0x77, 0xb7, 0x6b, 0x13, 0x00,
	0x85, 0x8c, 0x90, 0xa2, 0xcc, 0xd3, 0x24, 0xe2, 0x39, 0x6e, 0x41, 0xbb, 0xd9, 0xfa, 0x03, 0xce,
	0xda, 0x82, 0xc2, 0x02, 0xd1, 0x0d, 0xa2, 0xfb, 0x78, 0x3f, 0x6d, 0xb7, 0x45, 0x20, 0x58, 0xd7,
	0x8b, 0x86, 0x1d, 0x92, 0x3d, 0x53, 0x58, 0xb7, 0x87, 0xd2, 0x50, 0xfa, 0x21, 0xb9, 0xa0, 0x2f,
	0xd7, 0xbc, 0x8e, 0xa3, 0xf4, 0xb7, 0x0a, 0xac, 0x3a, 0x3f, 0x4d, 0x25, 0x7b, 0x6e, 0xfd, 0x6f,
	0xbf, 0x60, 0x32, 0xc0, 0x3c, 0xe1, 0x94, 0x52, 0xcd, 0xb8, 0x07, 0x48, 0x15, 0x17, 0xaf, 0x1c,
	0xa0, 0x0c, 0x70, 0x23, 0x04, 0x3d, 0xfa, 0xa5, 0x13, 0xe0, 0xf5, 0xc7, 0x8d, 0x2b, 0x4f, 0xbc,
	0xb2, 0x61, 0xd2, 0x7e, 0x46, 0x02, 0x44, 0xd6, 0x81, 0xe3, 0xc2, 0x5a, 0x40, 0x1d, 0x5a, 0xe3,
	0xaf, 0x2c, 0x10, 0xbd, 0x47, 0xc6, 0xf1, 0xa6, 0x4e, 0x55, 0xb2, 0xae, 0xd3, 0x70, 0xed, 0x01,
	0xca, 0x3e, 0xf8, 0x30, 0x80, 0x82, 0x3e, 0x23, 0x0b, 0x2c, 0x96, 0x85, 0x07, 0xfc, 0xd4, 0x2f,
	0xd2, 0x5c, 0x97, 0xc3, 0xd8, 0xb1, 0xc3, 0x03, 0x20, 0x92, 0xfe, 0xb8, 0x97, 0xe6, 0xea, 0xcc,
	0x61, 0x96, 0x39, 0x40, 0x14, 0xb8, 0x4d, 0xe6, 0x72, 0x5e, 0x88, 0xa2, 0xf4, 0xe1, 0x12, 0xd0,
	0x4f, 0x54, 0xae, 0x48, 0x60, 0x45, 0x97, 0x4d, 0x3a, 0x97, 0x24, 0xcf, 0x25, 0xc5, 0xb6, 0x95,
	0x31, 0x66, 0xf2, 0x26, 0x7c, 0x98, 0x3c, 0xf0, 0xb0, 0xd4, 0xe9, 0x4d, 0x1d, 0x79, 0x56, 0xb9,
	0xc9, 0x9b, 0x70, 0xfa, 0x2d, 0x99, 0x6f, 0xca, 0x2b, 0x82, 0x34, 0xe7, 0x5e, 0xe6, 0xe4, 0x44,
	0x47, 0xe0, 0x9e, 0x24, 0x50, 0x55, 0x3a, 0x1f, 0x40, 0xd0, 0xef, 0xc8, 0xc2, 0x51, 0x9a, 0x1f,
	0x14, 0x9d, 0x34, 0xd3, 0x19, 0x16, 0x0e, 0x5a, 0x0b, 0xef, 0x95, 0x13, 0xf6, 0xdf, 0x2b, 0x22,
	0x95, 0x4f, 0xeb, 0x13, 0xd7, 0xb9, 0xa3, 0x41, 0x4c, 0x21, 0x3b, 0xab, 0x0e, 0x67, 0x61, 0xe1,
	0xe5, 0x4e, 0x67, 0xf5, 0x88, 0x33, 0x75, 0x7b, 0x80, 0x68, 0x49, 0xd7, 0x4a, 0xc3, 0x7e, 0xe1,
	0x15, 0x0e, 0xdd, 0x6a, 0x1a, 0xaa, 0xd3, 0x79, 0x44, 0xd3, 0x8f, 0xc8, 0x68, 0xeb, 0xe8, 0xb8,
	0x8b, 0xf3, 0x41, 0xf9, 0xda, 0xc1, 0xe8, 0xe8, 0xb8, 0x0b, 0x73, 0xc1, 0x5d, 0x42, 0x80, 0x05,
	0xbd, 0xba, 0x72, 0xe7, 0xa2, 0xa3, 0xe3, 0x6e, 0xa3, 0xe5, 0x00, 0xf9, 0xe8, 0xd1, 0xd2, 0x25,
	0xe1, 0x2e, 0x57, 0x79, 0xd3, 0xa1, 0xeb, 0x92, 0x80, 0x72, 0xce, 0xe2, 0x34, 0xa0, 0x90, 0xd3,
	0x83, 0x62, 0x05, 0xc7, 0x39, 0x72, 0x66, 0x50, 0xe4, 0xac, 0x3d, 0x86, 0x14, 0x06, 0x40, 0x1f,
	0x92, 0x29, 0x2b, 0x51, 0x02, 0x73, 0xcf, 0xf1, 0x3a, 0x93, 0x25, 0xdd, 0x7a, 0x30, 0x71, 0x6c,
	0xc3, 0xe9, 0x03, 0x32, 0xd5, 0x66, 0x79, 0xec, 0xe7, 0xdc, 0x8c, 0xf1, 0x7d, 0x67, 0xe5, 0x1b,
	0x2c, 0x8f, 0x77, 0xb9, 0x33, 0xc8, 0x4f, 0xb4, 0x6d, 0x18, 0x5d, 0x27, 0xd3, 0x20, 0xc2, 0x9e,
	0xa5, 0x8f, 0x9d, 0xd6, 0x5a, 0xca, 0x68, 0xce, 0xd3, 0x93, 0x6d, 0x07, 0x28, 0x3b, 0x23, 0x55,
	0x4d, 0x72, 0x19, 0xec, 0x91, 0x1e, 0xcb, 0x7e, 0xeb, 0xf4, 0x94, 0x58, 0x4c, 0x14, 0x45, 0x63,
	0x43, 0x68, 0x34, 0x80, 0x94, 0xb9, 0x46, 0xdf, 0x96, 0xa3, 0x8d, 0x7e, 0xe7, 0xe4, 0x9a, 0x75,
	0x85, 0xb3, 0x72, 0x4d, 0x68, 0x81, 0xa0, 0x19, 0x82, 0x13, 0x0e, 0x7d, 0x65, 0xf6, 0x7b, 0x27,
	0xd5, 0xc3, 0x11, 0x87, 0x73, 0x5d, 0x86, 0x07, 0x22, 0xfa, 0xaa, 0xec, 0x53, 0x42, 0x3a, 0xbc,
	0x25, 0xd4, 0x4a, 0xfe, 0x38, 0xd2, 0xb8, 0xc5, 0x6c, 0x09, 0x2b, 0x49, 0x8e, 0x76, 0xf4, 0x6f,
	0x7a, 0x9b, 0xc0, 0x0f, 0x54, 0xf8, 0x4f, 0x23, 0xce, 0x91, 0xa6, 0xe4, 0xb2, 0x8e, 0x34, 0x3b,
	0xea, 0x27, 0xbd, 0x4f, 0x08, 0x5c, 0xd3, 0x63, 0xbe, 0xf8, 0xf3, 0x88, 0xdb, 0xfb, 0x49, 0x8c,
	0xaa, 0x8a, 0x96, 0x03, 0x03, 0x03, 0xe4, 0x89, 0xe7, 0x64, 0xa1, 0x14, 0x31, 0xf7, 0xbb, 0x22,
	0x16, 0xa5, 0x1f, 0x89, 0x76, 0xe9, 0x47, 0x79, 0x5a, 0x65, 0x85, 0xf7, 0x97, 0x11, 0xc7, 0xfe,
	0xfb, 0x22, 0xe6, 0x4f, 0x25, 0xd1, 0xa6, 0x68, 0x97, 0x9b, 0x92, 0xa4, 0x96, 0x37, 0x5b, 0x0e,
	0x20, 0x0b, 0xfa, 0x15, 0x19, 0xb7, 0x2f, 0xe4, 0xbd, 0xbf, 0x1b, 0x71, 0x4a, 0xdd, 0x2e, 0xe0,
	0x1a, 0x07, 0x7b, 0x63, 0x79, 0x0d, 0x5d, 0xf9, 0xc7, 0x09, 0x32, 0xdd, 0x3c, 0x4a, 0xa2, 0x9f,
	0x91, 0xc5, 0xfa, 0xe2, 0xb0, 0xca, 0x64, 0x07, 0xca, 0x7d, 0xbc, 0x46, 0x95, 0xe6, 0x3a, 0xb7,
	0x3b, 0x6f, 0xd0, 0xdf, 0x21, 0x16, 0x44, 0xb8, 0x7c, 0xea, 0xee, 0x52, 0xf1, 0x9d, 0x69, 0xf0,
	0xa9, 0x3b, 0x4a, 0xcd, 0x67, 0xdd, 0x9c, 0xd8, 0x5c, 0x6f, 0x5c, 0x7b, 0xe3, 0xc6, 0xb9, 0xd5,
	0x33, 0xd3, 0x3f, 0xb3, 0x2e, 0x47, 0x2c, 0xbe, 0x7b, 0xe4, 0x62, 0xd0, 0x61, 0x49, 0xc4, 0x7d,
	0xc3, 0xce, 0x02, 0xad, 0xe9, 0x59, 0xf8, 0xe2, 0x02, 0x12, 0xe8, 0x4b, 0x17, 0x16, 0xf0, 0x21,
	0x9f, 0xc4, 0xcb, 0x1a, 0x64, 0x3b, 0x37, 0xe4, 0x93, 0x80, 0x47, 0xbe, 0x77, 0xc9, 0x54, 0x9c,
	0x1e, 0x72, 0x3c, 0x56, 0x40, 0x8e, 0x37, 0xe1, 0x43, 0x13, 0x12, 0xbc, 0xca, 0x0a, 0x25, 0xff,
	0x63, 0xb2, 0xa0, 0x36, 0xa6, 0x49, 0x7e, 0x1e, 0xc8, 0x67, 0x11, 0xbb, 0xe5, 0x30, 0x69, 0xe1,
	0xa5, 0xb4, 0x1f, 0x52, 0x5f, 0xa8, 0x85, 0xef, 0xf3, 0xa4, 0x44, 0xba, 0xeb, 0x84, 0xc4, 0x82,
	0x25, 0x8a, 0x64, 0xd4, 0x68, 0x3c, 0x2a, 0xa1, 0x48, 0xb2, 0x45, 0x56, 0xcc, 0xe9, 0x23, 0xef,
	0x65, 0xfe, 0x70, 0xfb, 0x12, 0xc3, 0x7a, 0x59, 0x9d, 0x3c, 0x3e, 0xec, 0x65, 0x6b, 0x43, 0x2c,
	0xbd, 0x41, 0xae, 0xd8, 0x52, 0xe0, 0x78, 0xca, 0x75, 0x8c, 0x31, 0x23, 0x6a, 0x89, 0x1b, 0x19,
	0x7b, 0x69, 0xd5, 0x75, 0x3c, 0xa4, 0x61, 0x16, 0x6b, 0xa1, 0xe3, 0x4d, 0xb3, 0xd4, 0xcb, 0xfd,
	0x48, 0x77, 0xc2, 0x4d, 0x53, 0x4e, 0x00, 0x0f, 0x26, 0x26, 0xd7, 0x92, 0x37, 0xc8, 0x64, 0x91,
	0x71, 0x1e, 0xfa, 0x55, 0xa6, 0x68, 0x27, 0x8d, 0x7e, 0xe3, 0x80, 0xf9, 0x2e, 0x43, 0xca, 0x9f,
	0x93, 0x29, 0xb8, 0x2d, 0x06, 0x2b, 0x21, 0xe9, 0x94, 0x21, 0xc5, 0x8b, 0xe4, 0x87, 0x3d, 0x45,
	0xfb, 0x21, 0x31, 0x67, 0x32, 0x7e, 0x10, 0xe6, 0x8a, 0x7c, 0xda, 0x90, 0x4f, 0x6b, 0xec, 0x5a,
	0x98, 0x1b, 0x3d, 0xe4, 0x28, 0x60, 0x51, 0xcf, 0xd4, 0x7a, 0x48, 0x8c, 0xa1, 0xbc, 0x4e, 0x48,
	0x91, 0xf1, 0x40, 0x51, 0xd1, 0x7a, 0x4f, 0x25, 0xd4, 0x7c, 0xde, 0xf4, 0x06, 0xb5, 0xc0, 0xd9,
	0xfa, 0xf3, 0x1a, 0x6b, 0x0b, 0x8d, 0xd2, 0xae, 0xde, 0xed, 0xb9, 0x5a, 0xa8, 0x84, 0x6e, 0xaa,
	0x37, 0x0f, 0x0b, 0x40, 0x92, 0xa4, 0x79, 0xcc, 0xba, 0x3e, 0x08, 0x47, 0xf2, 0xf9, 0x3a, 0x12,
	0x24, 0xc5, 0x36, 0x10, 0xec, 0x75, 0x52, 0x65, 0x8c, 0xb7, 0xc8, 0x58, 0x51, 0xa6, 0x89, 0xde,
	0x8b, 0x05, 0x43, 0x4d, 0x00, 0xac, 0x23, 0x74, 0x11, 0x89, 0x06, 0xc5, 0x2f, 0x1a, 0x86, 0x39,
	0x20, 0x69, 0xca, 0xbf, 0x41, 0x26, 0x23, 0xd9, 0x54, 0xf5, 0x2a, 0xed, 0xe8, 0x5e, 0x6d, 0x3a,
	0x89, 0x79, 0x5e, 0x29, 0x5f, 0xbf, 0x4f, 0x2e, 0x0d, 0x4c, 0xfd, 0x22, 0xe6, 0x85, 0x62, 0xbb,
	0x08, 0x5e, 0xb2, 0xe8, 0xce, 0xf5, 0x12, 0x8f, 0xdc, 0x97, 0x09, 0x69, 0x8b, 0x42, 0x87, 0xff,
	0x12, 0x10, 0x8f, 0x4a, 0x08, 0xa2, 0x6f, 0x93, 0xd9, 0x20, 0xcd, 0xfa, 0x7e, 0xc8, 0xdb, 0x3c,
	0x29, 0xb8, 0xb6, 0xfa, 0x25, 0xa3, 0xcb, 0x8c, 0x44, 0xaf, 0x2b, 0xac, 0x31, 0x8d, 0xac, 0x91,
	0x9a, 0x76, 0xb9, 0x36, 0x0d, 0x80, 0x91, 0xe8, 0x53, 0xb2, 0x28, 0x92, 0x43, 0xe9, 0xcc, 0x1d,
	0x9e, 0xa7, 0x8e, 0xc6, 0x97, 0x41, 0x89, 0x39, 0x44, 0x3f, 0xe2, 0x79, 0x6a, 0xa9, 0x7b, 0x9f,
	0x2c, 0x89, 0x24, 0xe4, 0x41, 0x1a, 0x67, 0x69, 0xc1, 0x5a, 0x5d, 0x19, 0x10, 0xe9, 0x51, 0x85,
	0x37, 0x84, 0xde, 0x15, 0xe0, 0xf4, 0x5c, 0x8a, 0x55, 0x49, 0x00, 0xc7, 0x45, 0xd2, 0x21, 0x5a,
	0x55, 0xbb, 0xad, 0xbe, 0x73, 0xb5, 0x76, 0x08, 0x09, 0xad, 0x95, 0x87, 0x7b, 0x4b, 0xa4, 0xb9,
	0x66, 0x29, 0x2f, 0xc1, 0x48, 0xf4, 0x01, 0xb6, 0x47, 0xd8, 0x1d, 0x21, 0xe1, 0x75, 0x43, 0x38,
	0x69, 0x50, 0x3a, 0xd7, 0x7a, 0x2f, 0xab, 0xc4, 0x2f, 0x65, 0x2e, 0x6a, 0x6e, 0xce, 0x0a, 0x2e,
	0xf5, 0x65, 0x95, 0xec, 0x57, 0x2c, 0x71, 0x76, 0x66, 0xe5, 0xef, 0xcf, 0x92, 0xd9, 0x21, 0xf7,
	0x14, 0xf4, 0x6d, 0x32, 0x19, 0x71, 0x3c, 0x00, 0x51, 0xcb, 0xc6, 0xaa, 0x34, 0x1e, 0x71, 0x38,
	0xe5, 0xc0, 0xa5, 0xbe, 0x45, 0x26, 0x80, 0x22, 0xac, 0x72, 0x06, 0x53, 0x1c, 0x96, 0xa0, 0x71,
	0x09, 0x5c, 0x57, 0x30, 0x29, 0x0a, 0x88, 0x62, 0xd6, 0x43, 0xb5, 0xbc, 0x37, 0x6a, 0xaa, 0x2d,
	0xd6, 0x03, 0x6d, 0xe8, 0x3b, 0x64, 0xd2, 0x6c, 0x3f, 0x7e, 0x10, 0x8b, 0xcb, 0x84, 0x86, 0xe2,
	0x17, 0x6f, 0x90, 0xe9, 0xb6, 0xc8, 0xd5, 0x0b, 0x25, 0x2c, 0xf6, 0xde, 0x39, 0x20, 0x9c, 0x94,
	0x70, 0xf0, 0x3d, 0x28, 0xe0, 0xd2, 0xa9, 0xcc, 0x9b, 0x16, 0xd8, 0x7d, 0xbc, 0xe9, 0x7c, 0xb3,
	0x76, 0x2a, 0x8d, 0x36, 0x8f, 0xb1, 0x1c, 0x1e, 0x91, 0x88, 0x52, 0xf1, 0x9c, 0x1f, 0xe4, 0x79,
	0x9c, 0x88, 0x52, 0xbf, 0x99, 0x9a, 0x73, 0xdf, 0xce, 0x28, 0xad, 0x2e, 0x18, 0x26, 0xea, 0x3c,
	0x95, 0xb1, 0xb4, 0x4b, 0xd3, 0xac, 0xd0, 0x87, 0xd6, 0xf5, 0x9b, 0x2f, 0xf3, 0x25, 0x89, 0xc6,
	0x73, 0x69, 0xad, 0xdd, 0xbc, 0xf9, 0x92, 0x34, 0xa6, 0xb1, 0x3a, 0xc1, 0xbc, 0xae, 0x91, 0x5b,
	0xac, 0x67, 0x8c, 0xff, 0x31, 0x59, 0xd0, 0x05, 0x05, 0x16, 0x64, 0xf2, 0xb0, 0x37, 0x86, 0x4c,
	0x0a, 0x2b, 0xd7, 0xb3, 0xaf, 0x12, 0xf1, 0xca, 0xbf, 0x8c, 0x93, 0x99, 0x81, 0x9b, 0x27, 0xba,
	0x44, 0x46, 0x63, 0x96, 0xf9, 0x3d, 0xbf, 0xcb, 0x13, 0xe5, 0x0d, 0xe7, 0x63, 0x96, 0x3d, 0x7f,
	0xca, 0x13, 0x8d, 0xeb, 0x03, 0xee, 0x8c, 0xc1, 0xbd, 0x90, 0xb8, 0x4f, 0xc8, 0x02, 0xd4, 0xa0,
	0xfa, 0xbd, 0xa1, 0xd6, 0x1b, 0xfd, 0x60, 0x4e, 0x62, 0xcd, 0x83, 0x43, 0xad, 0xf8, 0xaf, 0xc8,
	0xa5, 0x58, 0xb0, 0xd4, 0x3f, 0x81, 0x15, 0x9d, 0xc3, 0x93, 0x24, 0xfb, 0xc3, 0xd8, 0x37, 0xc9,
	0xe2, 0x10, 0x76, 0x78, 0x4e, 0x73, 0xae, 0xf1, 0xde, 0xd0, 0x4c, 0x75, 0x4d, 0x61, 0xf0, 0xa0,
	0xe6, 0x26, 0x99, 0x3d, 0xea, 0x88, 0x92, 0xfb, 0xed, 0x2e, 0xb3, 0xbe, 0x8f, 0x0d, 0xc9, 0x0c,
	0xa0, 0x36, 0xba, 0xac, 0xfe, 0xf0, 0x5d, 0x72, 0xb1, 0x99, 0x28, 0x6b, 0xc7, 0xc7, 0xbe, 0x64,
	0xde, 0x49, 0x93, 0x26, 0x02, 0x4c, 0x09, 0xd6, 0x17, 0x82, 0x3c, 0x29, 0x79, 0xee, 0xf7, 0x54,
	0x7f, 0x82, 0x25, 0x58, 0x6d, 0x0b, 0xa0, 0x9e, 0x9f, 0xc4, 0xd2, 0xf7, 0x46, 0x4f, 0x60, 0x79,
	0x21, 0xfb, 0x47, 0x39, 0x5e, 0xa4, 0x39, 0xf7, 0x3b, 0x69, 0x2c, 0x47, 0x94, 0xb4, 0xc8, 0x78,
	0x2e, 0x27, 0x03, 0x74, 0xa3, 0x79, 0x85, 0x7e, 0x94, 0xc6, 0xb2, 0xaf, 0x57, 0x48, 0xba, 0x49,
	0xae, 0x9d, 0xc0, 0x57, 0x1b, 0x05, 0x5d, 0xea, 0xf2, 0x50, 0x01, 0xc6, 0x40, 0x5f, 0xd6, 0x2f,
	0x2e, 0xd4, 0x7d, 0x06, 0xf4, 0x25, 0xf5, 0xc8, 0x88, 0xb7, 0x18, 0xd6, 0xb8, 0xa7, 0xc8, 0x11,
	0x4e, 0x1f, 0x13, 0xd8, 0x75, 0x5f, 0x24, 0x87, 0x30, 0x26, 0xb1, 0x92, 0xfb, 0x41, 0x88, 0x5b,
	0x3b, 0x71, 0xc2, 0xd6, 0xce, 0x4b, 0x8e, 0xc7, 0x35, 0xc3, 0x5a, 0x08, 0x7b, 0x7b, 0x97, 0x78,
	0xb6, 0x94, 0x98, 0x89, 0x2e, 0x6c, 0x54, 0x5a, 0x95, 0xde, 0x24, 0xb6, 0xb6, 0x16, 0x7e, 0x8b,
	0x89, 0xee, 0x3e, 0x62, 0x65, 0xb6, 0x72, 0xbf, 0xef, 0x4d, 0x61, 0xb6, 0x12, 0xf6, 0x47, 0xe8,
	0x16, 0x79, 0xbb, 0xc5, 0x0a, 0x11, 0xa8, 0x6b, 0x14, 0xe8, 0xad, 0x0e, 0x79, 0x37, 0x85, 0xcb,
	0x8c, 0x8c, 0xe7, 0x7e, 0xc1, 0x83, 0x34, 0x09, 0xbd, 0x69, 0x60, 0xbe, 0x0a, 0xb4, 0x70, 0x83,
	0x22, 0x3b, 0xad, 0x5f, 0x2b, 0xc2, 0x1d, 0x9e, 0xef, 0x01, 0x19, 0xa5, 0xe4, 0x2c, 0x0f, 0x23,
	0xee, 0xcd, 0x00, 0x39, 0xfc, 0x5b, 0x06, 0x78, 0xc2, 0x8f, 0x30, 0xc3, 0x41, 0xc3, 0x6a, 0x76,
	0x83, 0x62, 0x80, 0x27, 0xfc, 0x48, 0x26, 0xb8, 0x2d, 0xc1, 0x12, 0xb3, 0x07, 0x6b, 0xe4, 0xaa,
	0x61, 0xca, 0x39, 0xa8, 0x05, 0xbc, 0xd6, 0xe3, 0xcf, 0x59, 0xe0, 0x5e, 0x52, 0xdc, 0xbb, 0x40,
	0x24, 0x65, 0x98, 0x67, 0xa0, 0xf4, 0x43, 0x32, 0x97, 0xf3, 0x56, 0x9a, 0x27, 0x8d, 0xef, 0xce,
	0xa1, 0xef, 0x21, 0xce, 0xf9, 0xec, 0x23, 0x72, 0xbd, 0x19, 0x1b, 0x39, 0x0f, 0xd2, 0x43, 0x9e,
	0x5b, 0x4e, 0x34, 0x8f, 0x4e, 0xe4, 0xc4, 0xc8, 0xae, 0xa2, 0x32, 0x92, 0xde, 0x27, 0x33, 0x72,
	0xf5, 0x7e, 0x92, 0x96, 0xe8, 0x8e, 0x32, 0xef, 0x2c, 0x60, 0x1d, 0x90, 0x88, 0xed, 0xb4, 0x94,
	0xee, 0x27, 0xd3, 0xcf, 0xc0, 0x26, 0xf7, 0xfc, 0x50, 0x14, 0x25, 0x4b, 0x02, 0xee, 0x2d, 0x0e,
	0xd9, 0xe4, 0xde, 0xba, 0xc2, 0xd2, 0x6d, 0xb2, 0xc2, 0x8a, 0x12, 0xbb, 0x12, 0x19, 0x62, 0xc3,
	0xa3, 0xc6, 0x93, 0x32, 0xe0, 0x39, 0xc8, 0x15, 0x56, 0x94, 0xd0, 0xa4, 0x84, 0xbb, 0x43, 0x43,
	0xe8, 0x80, 0xbc, 0xff, 0xb7, 0xe5, 0xf9, 0x78, 0x48, 0x07, 0x1d, 0xd5, 0xd8, 0x6d, 0xea, 0x1c,
	0xe7, 0xa1, 0x33, 0xbf, 0xfd, 0xfa, 0xcf, 0x20, 0x29, 0xfd, 0x82, 0x4c, 0x3b, 0x1e, 0x2a, 0xc3,
	0xe3, 0xca, 0x09, 0xe1, 0x31, 0x65, 0x7b, 0xad, 0x0c, 0x8c, 0x5b, 0x64, 0xd6, 0x66, 0x86, 0x66,
	0xbe, 0xca, 0xbc, 0xab, 0xb8, 0xb3, 0x16, 0x6a, 0x0f, 0x31, 0x2b, 0xff, 0xe5, 0x91, 0xa9, 0xc6,
	0xf1, 0x08, 0xbd, 0x45, 0xe6, 0x20, 0xa2, 0x62, 0x21, 0x1d, 0xab, 0x94, 0x1d, 0x3a, 0xac, 0x0c,
	0xcb, 0xc3, 0x8c, 0xc4, 0x6d, 0x89, 0x64, 0x55, 0x62, 0xb0, 0xb6, 0xdf, 0x23, 0x17, 0xb1, 0x2b,
	0x0a, 0x3a, 0xac, 0xdb, 0xe5, 0x72, 0xe6, 0x6c, 0xf6, 0x0c, 0x0b, 0x40, 0xb0, 0xa6, 0xf1, 0x26,
	0x77, 0x9a, 0x6f, 0xb1, 0x9e, 0xf3, 0xad, 0xb3, 0xd6, 0xb7, 0x58, 0xcf, 0xfd, 0x96, 0x1a, 0x6b,
	0x21, 0x08, 0x12, 0x16, 0xf3, 0xda, 0x05, 0xcf, 0xd9, 0x63, 0xad, 0x74, 0xff, 0x6d, 0x16, 0x73,
	0xe3, 0x7b, 0x8f, 0x89, 0xd7, 0x98, 0x88, 0x81, 0x1b, 0x2c, 0xfc, 0xe6, 0x49, 0x09, 0xc8, 0x19,
	0x91, 0xa5, 0x38, 0xb0, 0xf3, 0x06, 0xb9, 0x3c, 0xa0, 0x45, 0xbf, 0x62, 0x49, 0x8b, 0xa5, 0x28,
	0x0f, 0x3b, 0x8f, 0xb3, 0xd3, 0x3f, 0xf3, 0x46, 0x76, 0x2f, 0xba, 0xfa, 0xbc, 0x40, 0x3a, 0x90,
	0xf3, 0x15, 0x59, 0x1e, 0x36, 0xa4, 0x9b, 0x05, 0x61, 0x05, 0xb9, 0x38, 0x30, 0xa7, 0x9b, 0x35,
	0x9d, 0x30, 0xe5, 0xeb, 0xa6, 0x64, 0xf8, 0x94, 0xaf, 0x5f, 0x75, 0x5e, 0x86, 0x7c, 0x6c, 0x8a,
	0xac, 0x9c, 0x90, 0x78, 0xde, 0xac, 0x0a, 0x4b, 0x92, 0x48, 0x57, 0xd6, 0xef, 0x81, 0xc4, 0x7c,
	0xfd, 0x1b, 0x72, 0x71, 0xa8, 0x08, 0x30, 0xc1, 0xf8, 0x09, 0x26, 0x5d, 0x18, 0x14, 0x08, 0xb6,
	0xb8, 0xa7, 0x84, 0xc1, 0x4c, 0xd8, 0xd4, 0x05, 0xa7, 0xd9, 0x05, 0xac, 0xf4, 0x41, 0xa7, 0xa1,
	0xc7, 0x1a, 0x99, 0x1f, 0x60, 0x05, 0x1d, 0x26, 0x4f, 0xd0, 0x81, 0xba, 0x82, 0xe0, 0xfb, 0x9f,
	0x93, 0x8b, 0xfa, 0x9d, 0x94, 0x89, 0x71, 0xf3, 0x7d, 0xac, 0x12, 0x8b, 0x9a, 0x40, 0x05, 0xb0,
	0x51, 0xe0, 0x5b, 0xb2, 0xdc, 0x16, 0x79, 0x51, 0xfa, 0x03, 0x5e, 0x81, 0xe7, 0x6f, 0xd3, 0xa0,
	0x87, 0xbe, 0x03, 0xb2, 0x8e, 0xde, 0x3c, 0x60, 0x5b, 0x73, 0x1c, 0x04, 0x4f, 0xe2, 0x7e, 0x49,
	0x66, 0xe3, 0x34, 0x09, 0x59, 0xdf, 0x3f, 0x96, 0xc2, 0x52, 0x3f, 0x90, 0x0d, 0xa5, 0x4a, 0xd2,
	0xd3, 0x88, 0xfa, 0x81, 0xe7, 0xe9, 0xb3, 0x35, 0x09, 0x37, 0xbb, 0xd9, 0x3c, 0xb8, 0x69, 0xa4,
	0x67, 0xd8, 0x4d, 0xf7, 0x95, 0xed, 0xc0, 0x6e, 0x36, 0x45, 0x80, 0x25, 0x17, 0x5e, 0xb7, 0x9b,
	0xae, 0x40, 0xb0, 0xe6, 0x27, 0x04, 0x30, 0xbe, 0x19, 0xca, 0x8d, 0x22, 0x98, 0xbb, 0xa1, 0x69,
	0xd3, 0x07, 0xf5, 0x56, 0x8f, 0x41, 0x5d, 0x2e, 0xf8, 0xb6, 0x77, 0xc2, 0xb7, 0xa7, 0x6d, 0x19,
	0xf0, 0xd5, 0x1b, 0x44, 0xce, 0xf9, 0xdd, 0x50, 0xee, 0x83, 0x1e, 0x02, 0x70, 0xc4, 0x9d, 0x04,
	0xf8, 0x5a, 0x87, 0xa9, 0xee, 0x5f, 0xb6, 0x87, 0x35, 0xa5, 0x51, 0x6e, 0x49, 0xb5, 0x87, 0x9a,
	0xd8, 0x68, 0x76, 0x83, 0x4c, 0x03, 0x65, 0xc9, 0x7b, 0x52, 0x70, 0x12, 0x95, 0x1d, 0xef, 0x12,
	0x4a, 0x96, 0xf0, 0x7d, 0xde, 0x2b, 0x9f, 0x02, 0x54, 0x3a, 0xe3, 0x80, 0x17, 0xc0, 0x32, 0x96,
	0x9d, 0x6b, 0x03, 0xcb, 0x19, 0xdd, 0xfc, 0xa0, 0x17, 0x12, 0x32, 0xd1, 0x05, 0x4f, 0xe4, 0xb2,
	0x54, 0x56, 0xb9, 0xc7, 0xf1, 0x73, 0x00, 0xdf, 0x95, 0xe0, 0x47, 0x69, 0x95, 0xd3, 0x5f, 0x10,
	0x6a, 0x53, 0xc6, 0x22, 0xa9, 0x4a, 0xee, 0xb5, 0xd1, 0x4d, 0x6a, 0xda, 0x2d, 0x80, 0xd3, 0x35,
	0xb2, 0x3c, 0x70, 0x85, 0x22, 0x85, 0x6b, 0xbe, 0xc8, 0xcc, 0x31, 0x17, 0x1b, 0x77, 0x25, 0xf2,
	0x63, 0x4a, 0xc8, 0x1d, 0xe2, 0x41, 0x35, 0xe6, 0x59, 0x5a, 0xfa, 0xea, 0x65, 0x38, 0xcb, 0x98,
	0xec, 0x79, 0x3c, 0xa1, 0x3a, 0x65, 0xd6, 0x5b, 0x97, 0x68, 0x7c, 0x1b, 0xae, 0x90, 0xf4, 0x1a,
	0x19, 0x97, 0x8c, 0x85, 0x88, 0x12, 0x28, 0xfc, 0x2f, 0x81, 0x98, 0xc4, 0xac, 0xb7, 0x27, 0xa2,
	0x44, 0x16, 0xfd, 0x2f, 0xc8, 0x92, 0xa4, 0xc8, 0x79, 0x91, 0x56, 0x79, 0x20, 0x0d, 0xd7, 0xed,
	0xf2, 0xa0, 0x54, 0xb5, 0xe4, 0x40, 0x9d, 0x56, 0xb0, 0xde, 0xae, 0x22, 0x58, 0x43, 0x3c, 0x16,
	0x93, 0xfb, 0x64, 0xc9, 0x30, 0x0e, 0xf6, 0x27, 0x5d, 0x9c, 0x3c, 0x34, 0xc5, 0x40, 0x6b, 0xf2,
	0x31, 0x59, 0x90, 0x9f, 0x6e, 0xb3, 0xc3, 0x34, 0x97, 0x73, 0x43, 0x96, 0x16, 0xaa, 0x18, 0xc5,
	0xd8, 0x90, 0xc5, 0xac, 0xb7, 0xa1, 0x90, 0x3b, 0x69, 0x81, 0xe5, 0xe8, 0x3d, 0x32, 0xa5, 0xaf,
	0x5f, 0xf4, 0x77, 0x12, 0xdc, 0x26, 0x75, 0xd3, 0xa2, 0xa5, 0xdf, 0x21, 0x5e, 0x71, 0x20, 0x32,
	0xbf, 0x2d, 0xa2, 0x4e, 0xd9, 0x18, 0x6d, 0x53, 0xb4, 0x99, 0xc4, 0x6f, 0x28, 0x74, 0x3d, 0xda,
	0xbe, 0x67, 0x5d, 0xf9, 0x06, 0x29, 0x6f, 0xc3, 0xfd, 0x99, 0x3e, 0xac, 0x53, 0x88, 0xb5, 0x94,
	0xb7, 0xa5, 0x2a, 0xad, 0x3c, 0x65, 0x61, 0x20, 0x7b, 0x15, 0x3c, 0x40, 0x78, 0x85, 0xaa, 0x18,
	0xb0, 0x3e, 0x2a, 0xab, 0x5f, 0x5e, 0xc1, 0x6c, 0xc9, 0xdb, 0x6d, 0x1e, 0x94, 0x5e, 0x8e, 0x5d,
	0x82, 0xc6, 0xc9, 0xc9, 0xf2, 0x21, 0x60, 0xe8, 0x1a, 0x99, 0xe3, 0xbd, 0x32, 0x67, 0x70, 0x55,
	0x13, 0xf2, 0x80, 0xf5, 0x51, 0x95, 0xe2, 0xc4, 0x5e, 0x67, 0x06, 0xe8, 0x77, 0x79, 0xb1, 0x2e,
	0xa9, 0x41, 0xbf, 0x3b, 0xc4, 0x6b, 0x0a, 0x31, 0x36, 0x2b, 0xd5, 0x09, 0xb8, 0xcd, 0x64, 0x25,
	0x85, 0xe5, 0xa0, 0x9b, 0x16, 0x1c, 0x6d, 0xe7, 0x47, 0x95, 0x08, 0x65, 0x66, 0xc6, 0xe7, 0xc2,
	0x22, 0xf4, 0x2a, 0xdc, 0x58, 0xa0, 0x01, 0xfb, 0x6d, 0x4a, 0x0a, 0xf5, 0x68, 0xf8, 0x71, 0x48,
	0x1f, 0x92, 0xab, 0xda, 0xd5, 0xa5, 0x57, 0xc4, 0xb1, 0xec, 0xe2, 0xc0, 0xfc, 0xe6, 0xfb, 0x87,
	0x20, 0x62, 0x59, 0x91, 0xed, 0x6a, 0x2a, 0xb9, 0x0b, 0x46, 0x8d, 0x0d, 0x39, 0x48, 0x0d, 0x15,
	0x93, 0xb1, 0x88, 0xfb, 0x85, 0xcc, 0xf3, 0x47, 0x27, 0xcb, 0xd9, 0x61, 0x11, 0xdf, 0x93, 0x89,
	0xfd, 0x64, 0x39, 0xb1, 0xf9, 0x53, 0xa2, 0xde, 0xc9, 0x72, 0xb6, 0xf4, 0x1f, 0x10, 0x3d, 0x22,
	0xd7, 0x5f, 0xa7, 0x0f, 0xba, 0x6e, 0x5f, 0x4f, 0x76, 0xc3, 0x15, 0x42, 0x27, 0xfe, 0x90, 0xcc,
	0x15, 0x9c, 0xe5, 0x41, 0xa7, 0x61, 0x95, 0x63, 0x74, 0x08, 0xc4, 0x39, 0xb6, 0xf8, 0x98, 0x2c,
	0x40, 0x36, 0xcc, 0x72, 0x71, 0x08, 0xcd, 0xb9, 0xd1, 0xfc, 0xb7, 0xea, 0x74, 0xa2, 0xc3, 0xca,
	0x1d, 0x44, 0x1a, 0x85, 0xdf, 0x22, 0x13, 0x6e, 0xb2, 0xfd, 0x1d, 0x1e, 0x27, 0x05, 0x76, 0x9e,
	0xbd, 0x49, 0x80, 0xd7, 0x87, 0xbf, 0xab, 0xac, 0x49, 0x7f, 0x8f, 0x79, 0x59, 0xa2, 0xf6, 0x24,
	0xc6, 0xae, 0x18, 0x38, 0x8b, 0x39, 0x75, 0xff, 0xff, 0x9d, 0x54, 0x31, 0x90, 0xd6, 0xaa, 0xfa,
	0x0f, 0xc8, 0x65, 0x97, 0x5f, 0xbf, 0x45, 0xd4, 0x5f, 0xfe, 0x03, 0xd6, 0x4d, 0x9b, 0x51, 0xbd,
	0x39, 0xd4, 0x2a, 0x7c, 0x2e, 0x27, 0xf3, 0xd0, 0xcf, 0x58, 0x70, 0xc0, 0x4b, 0xf8, 0xbe, 0x1c,
	0x11, 0xe5, 0x48, 0xef, 0xfd, 0x71, 0xc4, 0x0c, 0x19, 0x73, 0x39, 0x0f, 0x77, 0x80, 0x04, 0xd4,
	0x41, 0x02, 0xdc, 0x44, 0xc3, 0xab, 0x4e, 0xf2, 0x79, 0xdc, 0x82, 0x3f, 0x8d, 0x48, 0xd4, 0x26,
	0xfe, 0x69, 0x44, 0xbb, 0x83, 0x92, 0x00, 0x57, 0x91, 0x5b, 0x40, 0xb6, 0x25, 0x12, 0xdc, 0xc4,
	0x0f, 0xc8, 0xcc, 0x11, 0xe7, 0x07, 0x6e, 0xc9, 0xf8, 0x33, 0x72, 0x4e, 0x21, 0xa6, 0x2e, 0x1a,
	0xb7, 0xc8, 0xac, 0x43, 0xac, 0xb2, 0xff, 0x5f, 0x46, 0x54, 0xf9, 0xab, 0xc9, 0x55, 0xca, 0xdf,
	0x23, 0xef, 0x36, 0x9c, 0x2c, 0x6d, 0xb7, 0xbb, 0x22, 0xe1, 0x3e, 0xef, 0x65, 0xc2, 0xde, 0xa9,
	0xff, 0x8f, 0x32, 0x56, 0x72, 0xdb, 0xd7, 0x9e, 0x21, 0xf1, 0x43, 0xa0, 0xd5, 0x86, 0x5b, 0xf9,
	0xe7, 0x19, 0x32, 0xdd, 0x7c, 0xb1, 0x4c, 0x3f, 0x20, 0x78, 0xfa, 0xe1, 0x27, 0x55, 0x0c, 0xa3,
	0xb6, 0xf4, 0x66, 0x35, 0xd5, 0xe3, 0x3b, 0xa0, 0xed, 0x2a, 0xde, 0xe1, 0xb9, 0x74, 0x5f, 0x7a,
	0x9f, 0xcc, 0x04, 0x39, 0x97, 0x1e, 0xa8, 0x1f, 0x45, 0x17, 0x25, 0xf4, 0x6a, 0x43, 0xa7, 0x25,
	0x24, 0x55, 0x5f, 0x2c, 0x4a, 0xfa, 0x90, 0xa8, 0xde, 0x58, 0x71, 0xd7, 0xa5, 0x7a, 0xfa, 0x04,
	0x11, 0xb3, 0x48, 0x0f, 0x22, 0x4c, 0xad, 0xfe, 0x82, 0x2c, 0x0d, 0x8a, 0x31, 0xf6, 0xc0, 0x99,
	0x7f, 0xb1, 0xc1, 0x68, 0x47, 0x92, 0xfa, 0xdb, 0x51, 0xd6, 0xd2, 0x47, 0x90, 0xb2, 0x27, 0xc9,
	0xf5, 0x31, 0x00, 0xfe, 0xb9, 0xa8, 0x44, 0xc2, 0x01, 0xe4, 0x5a, 0x87, 0xe5, 0xf4, 0x53, 0xb2,
	0x38, 0x84, 0x09, 0x7c, 0x05, 0xc7, 0xff, 0xb9, 0x26, 0x17, 0xb8, 0xc8, 0x36, 0x79, 0x5b, 0x29,
	0xda, 0xe5, 0x2c, 0xd4, 0xe7, 0xb5, 0xf0, 0x92, 0x52, 0xf9, 0x1c, 0xca, 0xc0, 0x1e, 0xf3, 0x1a,
	0xd2, 0x3e, 0x05, 0x52, 0xf3, 0xa0, 0x12, 0xbd, 0x0e, 0xe5, 0x6d, 0x92, 0x6b, 0x27, 0xc9, 0x6b,
	0x9e, 0x0a, 0x0c, 0x95, 0x65, 0x8c, 0xf0, 0x80, 0x5c, 0x16, 0x71, 0x06, 0x77, 0xc8, 0xb9, 0xec,
	0x27, 0x64, 0x48, 0x38, 0x1a, 0xe1, 0x09, 0xc1, 0x92, 0x22, 0xda, 0x55, 0x34, 0xb6, 0x2e, 0x0f,
	0xc9, 0x55, 0x2d, 0x42, 0x29, 0xa3, 0x1d, 0xb4, 0xd1, 0x78, 0x2e, 0x2b, 0x32, 0xd4, 0x45, 0x39,
	0xa6, 0xd1, 0xe4, 0x53, 0xb2, 0xa8, 0xc5, 0x24, 0x59, 0xa0, 0x45, 0x41, 0x2c, 0x79, 0xea, 0xe2,
	0x01, 0xd1, 0xdb, 0x59, 0x80, 0x12, 0x20, 0x9e, 0xee, 0x91, 0x8b, 0x43, 0xd8, 0x54, 0x54, 0x5d,
	0x54, 0x87, 0x15, 0x0d, 0x46, 0x15, 0x59, 0xf7, 0xc9, 0xa5, 0xaa, 0x90, 0xc4, 0xac, 0xe7, 0xbf,
	0x4c, 0xa1, 0xed, 0x86, 0x37, 0x47, 0x6a, 0xe5, 0xd8, 0x90, 0x2e, 0x4a, 0x92, 0x2d, 0xd6, 0x7b,
	0x92, 0xca, 0x2e, 0x1b, 0xf0, 0xb8, 0x6c, 0xe3, 0x3e, 0x92, 0x5d, 0x24, 0x87, 0x78, 0x64, 0x20,
	0x19, 0x2f, 0x59, 0xee, 0xb3, 0xc5, 0x7a, 0x8f, 0x01, 0x87, 0x4c, 0xb7, 0xc8, 0x1c, 0xb6, 0x8c,
	0x92, 0xe9, 0x40, 0x04, 0xfa, 0xa6, 0x60, 0x19, 0xa3, 0x1f, 0x70, 0x5b, 0xac, 0xf7, 0x8d, 0x08,
	0xd4, 0x75, 0xc1, 0x7d, 0x72, 0x69, 0xe0, 0x4f, 0xc8, 0x80, 0x19, 0xf9, 0xf0, 0x4a, 0x66, 0xb1,
	0xf1, 0xb7, 0x62, 0x5b, 0xac, 0xa7, 0xb7, 0xe6, 0xda, 0x09, 0xdc, 0x1d, 0x96, 0x3b, 0x77, 0x33,
	0x97, 0x86, 0x88, 0xe8, 0x30, 0xb5, 0xc3, 0x1b, 0x64, 0x01, 0x67, 0x2c, 0xb0, 0x92, 0x7e, 0xb0,
	0x21, 0xab, 0xee, 0xd5, 0x93, 0xa6, 0xab, 0x59, 0x60, 0x90, 0x46, 0x53, 0x8f, 0x37, 0x64, 0xfd,
	0x7d, 0x97, 0x4c, 0x61, 0x13, 0x5f, 0x87, 0xda, 0x35, 0x3c, 0x03, 0x94, 0xe0, 0x3a, 0xc8, 0xee,
	0x10, 0x4f, 0x24, 0x25, 0xcf, 0x13, 0xd6, 0xf5, 0x9b, 0x0c, 0xd7, 0xb1, 0x5f, 0xd1, 0xf8, 0x7d,
	0x87, 0xf1, 0x4b, 0xb2, 0xdc, 0xce, 0x85, 0x4c, 0x94, 0xfa, 0xbd, 0xa3, 0xcb, 0x8c, 0xd7, 0x3a,
	0x1e, 0xd2, 0xa8, 0x37, 0x8f, 0x36, 0xff, 0x7d, 0x72, 0x89, 0x27, 0x3c, 0xee, 0x9f, 0xc0, 0xfe,
	0x16, 0x5a, 0x1b, 0x48, 0x86, 0x70, 0xdf, 0x26, 0xf3, 0x41, 0x9a, 0x94, 0xb9, 0x68, 0x55, 0xf8,
	0x50, 0x4e, 0xfa, 0x2f, 0xef, 0x66, 0xde, 0xdb, 0xaa, 0x32, 0x5b, 0xc8, 0x1d, 0x9e, 0x3f, 0xe2,
	0xdd, 0x8c, 0xae, 0x92, 0x2b, 0x0e, 0x8f, 0xd9, 0x5a, 0xe0, 0x0e, 0x59, 0xdf, 0x7b, 0x07, 0x03,
	0xd0, 0xa6, 0xd2, 0xfb, 0xbb, 0xc3, 0xf3, 0x75, 0xd6, 0xa7, 0x5f, 0x91, 0x65, 0xf5, 0xde, 0x59,
	0x37, 0xed, 0x70, 0x01, 0x67, 0xa2, 0xef, 0x5d, 0x3c, 0xca, 0x68, 0xc1, 0x13, 0xe7, 0xb5, 0x9a,
	0xc2, 0x84, 0xde, 0x47, 0x64, 0xde, 0x7a, 0x7d, 0x6d, 0xb9, 0xd7, 0x7b, 0xd8, 0x86, 0x70, 0xf3,
	0xc2, 0xda, 0x78, 0xd6, 0x5d, 0xb2, 0x50, 0x65, 0xa1, 0xf1, 0xf9, 0xbc, 0xaf, 0x0f, 0x61, 0xbc,
	0x1b, 0x75, 0xdd, 0x45, 0x0a, 0xf5, 0x77, 0x60, 0xea, 0xf0, 0x85, 0x7e, 0x46, 0x16, 0x1b, 0x9c,
	0x46, 0xd1, 0xf7, 0x71, 0x6f, 0x1d, 0x36, 0xfb, 0x24, 0xb4, 0xc1, 0xd7, 0x85, 0x7a, 0xaf, 0x1f,
	0x0e, 0x41, 0x5b, 0xfc, 0x73, 0xcc, 0x79, 0x8e, 0x84, 0xa7, 0x50, 0x43, 0x90, 0x0a, 0xda, 0xe1,
	0x2f, 0xc9, 0xb2, 0xfd, 0xc7, 0xab, 0x7e, 0xc2, 0x79, 0x68, 0x0f, 0x05, 0x1f, 0xa0, 0x97, 0x58,
	0x7f, 0xb3, 0xba, 0xcd, 0x79, 0x58, 0xcf, 0x05, 0x5f, 0x90, 0xa5, 0x24, 0x2d, 0x45, 0xbb, 0x6f,
	0xc7, 0x83, 0x59, 0xc4, 0x2f, 0xd0, 0x49, 0x90, 0xc2, 0x04, 0x80, 0x59, 0xc6, 0x6f, 0xc8, 0x2f,
	0x4f, 0x66, 0xf6, 0xe1, 0x7f, 0x90, 0x3b, 0xd3, 0x5c, 0xe6, 0xb2, 0x43, 0x0e, 0x7f, 0xa5, 0x78,
	0x6e, 0xf7, 0xdd, 0x13, 0xe4, 0x3d, 0x4b, 0x9e, 0x01, 0xfd, 0xb3, 0xfc, 0xa9, 0xa4, 0xa6, 0x5f,
	0x93, 0xd9, 0x86, 0x95, 0xa0, 0xaa, 0xde, 0x3c, 0xa1, 0xaa, 0xce, 0x38, 0x96, 0x82, 0x9a, 0xba,
	0x4a, 0xae, 0xa8, 0x96, 0x34, 0x49, 0x95, 0x7a, 0xd2, 0x36, 0x45, 0xbd, 0xc2, 0x5b, 0xba, 0x2f,
	0x93, 0x54, 0xdb, 0x29, 0xe8, 0x23, 0xad, 0x53, 0x98, 0x45, 0x3e, 0x21, 0x6f, 0x0d, 0x97, 0xa1,
	0xbb, 0x0a, 0xec, 0xd9, 0x3f, 0xc4, 0xdd, 0x1a, 0x14, 0xa4, 0x9a, 0x0c, 0xd9, 0xb4, 0xaf, 0xfc,
	0x81, 0x4c, 0x38, 0xef, 0x71, 0xe9, 0x24, 0x39, 0x23, 0x42, 0xb8, 0x4d, 0x1b, 0xdd, 0x3d, 0x23,
	0x42, 0xba, 0x44, 0x2e, 0x74, 0x59, 0x12, 0x55, 0xb2, 0x59, 0x39, 0x03, 0x50, 0xf3, 0x9b, 0xde,
	0x20, 0x67, 0x33, 0x26, 0x72, 0xf5, 0x5f, 0xda, 0xb0, 0xdf, 0xf7, 0xee, 0x30, 0xa1, 0x9e, 0x10,
	0x03, 0x05, 0xf5, 0xc8, 0xf9, 0x50, 0x14, 0x59, 0x97, 0xf5, 0xe1, 0x04, 0xf4, 0xc2, 0xae, 0xfe,
	0xb9, 0x72, 0x07, 0x15, 0x30, 0x0c, 0x74, 0x9a, 0xbc, 0x71, 0xc0, 0xfb, 0xf0, 0xb4, 0x60, 0x74,
	0x57, 0xfe, 0x93, 0xce, 0x91, 0x73, 0x87, 0xac, 0x5b, 0xe1, 0xe9, 0xf8, 0xe8, 0x2e, 0xfe, 0x58,
	0xf9, 0xa7, 0x11, 0x32, 0x6a, 0x9e, 0x32, 0x0e, 0xa8, 0xbd, 0x48, 0xce, 0x8b, 0x00, 0xc7, 0x28,
	0xd4, 0xfa, 0x4d, 0xf9, 0xf3, 0x71, 0x28, 0xb3, 0x9f, 0xea, 0x84, 0xc1, 0x31, 0xed, 0xc7, 0x2d,
	0xea, 0x48, 0x77, 0x1e, 0xf1, 0xd2, 0x2b, 0xad, 0x17, 0x2d, 0xb2, 0x22, 0xd9, 0x8c, 0x96, 0x47,
	0xe3, 0x99, 0xee, 0x6c, 0xcd, 0x66, 0x9c, 0x19, 0x94, 0x34, 0xef, 0x28, 0x2d, 0x25, 0xcf, 0xfd,
	0x0f, 0x52, 0x72, 0xf5, 0xda, 0xbf, 0xfd, 0xf5, 0xca, 0xc8, 0xbf, 0xff, 0xf5, 0xca, 0xc8, 0x7f,
	0xfc, 0xf5, 0xca, 0xc8, 0x3f, 0xfc, 0xe7, 0x95, 0x9f, 0x3d, 0x1a, 0xf9, 0x61, 0xdc, 0xfe, 0xef,
	0xbf, 0xb4, 0xde, 0x84, 0xff, 0xfb, 0xf8, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x11, 0xef, 0x6c,
	0x74, 0xb7, 0x4d, 0x00, 0x00,
}
