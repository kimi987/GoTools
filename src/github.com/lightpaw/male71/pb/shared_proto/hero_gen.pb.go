// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/shared_proto/hero_gen.proto
// DO NOT EDIT!

package shared_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HeroGenProto struct {
	Xuanyuan      *HeroGenXuanyuanProto      `protobuf:"bytes,1,opt,name=xuanyuan" json:"xuanyuan,omitempty"`
	MiscData      *HeroGenMiscDataProto      `protobuf:"bytes,2,opt,name=misc_data,json=miscData" json:"misc_data,omitempty"`
	FarmExtra     *HeroGenFarmExtraProto     `protobuf:"bytes,3,opt,name=farm_extra,json=farmExtra" json:"farm_extra,omitempty"`
	Country       *HeroGenCountryProto       `protobuf:"bytes,4,opt,name=country" json:"country,omitempty"`
	Shop          *HeroGenShopProto          `protobuf:"bytes,5,opt,name=shop" json:"shop,omitempty"`
	GuildWorkshop *HeroGenGuildWorkshopProto `protobuf:"bytes,6,opt,name=guild_workshop,json=guildWorkshop" json:"guild_workshop,omitempty"`
	Product       *HeroGenProductProto       `protobuf:"bytes,7,opt,name=product" json:"product,omitempty"`
}

func (m *HeroGenProto) Reset()                    { *m = HeroGenProto{} }
func (m *HeroGenProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenProto) ProtoMessage()               {}
func (*HeroGenProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{0} }

func (m *HeroGenProto) GetXuanyuan() *HeroGenXuanyuanProto {
	if m != nil {
		return m.Xuanyuan
	}
	return nil
}

func (m *HeroGenProto) GetMiscData() *HeroGenMiscDataProto {
	if m != nil {
		return m.MiscData
	}
	return nil
}

func (m *HeroGenProto) GetFarmExtra() *HeroGenFarmExtraProto {
	if m != nil {
		return m.FarmExtra
	}
	return nil
}

func (m *HeroGenProto) GetCountry() *HeroGenCountryProto {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *HeroGenProto) GetShop() *HeroGenShopProto {
	if m != nil {
		return m.Shop
	}
	return nil
}

func (m *HeroGenProto) GetGuildWorkshop() *HeroGenGuildWorkshopProto {
	if m != nil {
		return m.GuildWorkshop
	}
	return nil
}

func (m *HeroGenProto) GetProduct() *HeroGenProductProto {
	if m != nil {
		return m.Product
	}
	return nil
}

type HeroGenXuanyuanProto struct {
	ChallengeTarget    [][]byte `protobuf:"bytes,1,rep,name=challenge_target,json=challengeTarget" json:"challenge_target,omitempty"`
	RankPrizeCollected bool     `protobuf:"varint,6,opt,name=rank_prize_collected,json=rankPrizeCollected,proto3" json:"rank_prize_collected,omitempty"`
}

func (m *HeroGenXuanyuanProto) Reset()                    { *m = HeroGenXuanyuanProto{} }
func (m *HeroGenXuanyuanProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenXuanyuanProto) ProtoMessage()               {}
func (*HeroGenXuanyuanProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{1} }

func (m *HeroGenXuanyuanProto) GetChallengeTarget() [][]byte {
	if m != nil {
		return m.ChallengeTarget
	}
	return nil
}

func (m *HeroGenXuanyuanProto) GetRankPrizeCollected() bool {
	if m != nil {
		return m.RankPrizeCollected
	}
	return false
}

type HeroGenMiscDataProto struct {
	WeeklyResetTime             int32 `protobuf:"varint,14,opt,name=weekly_reset_time,json=weeklyResetTime,proto3" json:"weekly_reset_time,omitempty"`
	DailyResetTime              int32 `protobuf:"varint,1,opt,name=daily_reset_time,json=dailyResetTime,proto3" json:"daily_reset_time,omitempty"`
	SeasonResetTime             int32 `protobuf:"varint,2,opt,name=season_reset_time,json=seasonResetTime,proto3" json:"season_reset_time,omitempty"`
	DefenserNextFullSoldierTime int32 `protobuf:"varint,3,opt,name=defenser_next_full_soldier_time,json=defenserNextFullSoldierTime,proto3" json:"defenser_next_full_soldier_time,omitempty"`
	DefenserDontAutoFullSoldier bool  `protobuf:"varint,4,opt,name=defenser_dont_auto_full_soldier,json=defenserDontAutoFullSoldier,proto3" json:"defenser_dont_auto_full_soldier,omitempty"`
	FishPoint                   int32 `protobuf:"varint,7,opt,name=fish_point,json=fishPoint,proto3" json:"fish_point,omitempty"`
	FishCombo                   int32 `protobuf:"varint,11,opt,name=fish_combo,json=fishCombo,proto3" json:"fish_combo,omitempty"`
	FishPointExchangeIndex      int32 `protobuf:"varint,10,opt,name=fishPointExchangeIndex,proto3" json:"fishPointExchangeIndex,omitempty"`
	BanChatEndTime              int32 `protobuf:"varint,8,opt,name=ban_chat_end_time,json=banChatEndTime,proto3" json:"ban_chat_end_time,omitempty"`
	DailyZeroResetTime          int32 `protobuf:"varint,12,opt,name=daily_zero_reset_time,json=dailyZeroResetTime,proto3" json:"daily_zero_reset_time,omitempty"`
	DailyMcResetTime            int32 `protobuf:"varint,13,opt,name=daily_mc_reset_time,json=dailyMcResetTime,proto3" json:"daily_mc_reset_time,omitempty"`
}

func (m *HeroGenMiscDataProto) Reset()                    { *m = HeroGenMiscDataProto{} }
func (m *HeroGenMiscDataProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenMiscDataProto) ProtoMessage()               {}
func (*HeroGenMiscDataProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{2} }

func (m *HeroGenMiscDataProto) GetWeeklyResetTime() int32 {
	if m != nil {
		return m.WeeklyResetTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetDailyResetTime() int32 {
	if m != nil {
		return m.DailyResetTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetSeasonResetTime() int32 {
	if m != nil {
		return m.SeasonResetTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetDefenserNextFullSoldierTime() int32 {
	if m != nil {
		return m.DefenserNextFullSoldierTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetDefenserDontAutoFullSoldier() bool {
	if m != nil {
		return m.DefenserDontAutoFullSoldier
	}
	return false
}

func (m *HeroGenMiscDataProto) GetFishPoint() int32 {
	if m != nil {
		return m.FishPoint
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetFishCombo() int32 {
	if m != nil {
		return m.FishCombo
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetFishPointExchangeIndex() int32 {
	if m != nil {
		return m.FishPointExchangeIndex
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetBanChatEndTime() int32 {
	if m != nil {
		return m.BanChatEndTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetDailyZeroResetTime() int32 {
	if m != nil {
		return m.DailyZeroResetTime
	}
	return 0
}

func (m *HeroGenMiscDataProto) GetDailyMcResetTime() int32 {
	if m != nil {
		return m.DailyMcResetTime
	}
	return 0
}

type HeroGenFarmExtraProto struct {
	DailyStealGold  int32 `protobuf:"varint,1,opt,name=daily_steal_gold,json=dailyStealGold,proto3" json:"daily_steal_gold,omitempty"`
	DailyStealStone int32 `protobuf:"varint,2,opt,name=daily_steal_stone,json=dailyStealStone,proto3" json:"daily_steal_stone,omitempty"`
}

func (m *HeroGenFarmExtraProto) Reset()                    { *m = HeroGenFarmExtraProto{} }
func (m *HeroGenFarmExtraProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenFarmExtraProto) ProtoMessage()               {}
func (*HeroGenFarmExtraProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{3} }

func (m *HeroGenFarmExtraProto) GetDailyStealGold() int32 {
	if m != nil {
		return m.DailyStealGold
	}
	return 0
}

func (m *HeroGenFarmExtraProto) GetDailyStealStone() int32 {
	if m != nil {
		return m.DailyStealStone
	}
	return 0
}

type HeroGenCountryProto struct {
	CountryId            int32 `protobuf:"varint,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	NewUserExpiredTime   int32 `protobuf:"varint,2,opt,name=new_user_expired_time,json=newUserExpiredTime,proto3" json:"new_user_expired_time,omitempty"`
	NormalExpiredTime    int32 `protobuf:"varint,3,opt,name=normal_expired_time,json=normalExpiredTime,proto3" json:"normal_expired_time,omitempty"`
	AppointOnSameDay     bool  `protobuf:"varint,4,opt,name=appoint_on_same_day,json=appointOnSameDay,proto3" json:"appoint_on_same_day,omitempty"`
	DailySalaryCollected bool  `protobuf:"varint,5,opt,name=daily_salary_collected,json=dailySalaryCollected,proto3" json:"daily_salary_collected,omitempty"`
}

func (m *HeroGenCountryProto) Reset()                    { *m = HeroGenCountryProto{} }
func (m *HeroGenCountryProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenCountryProto) ProtoMessage()               {}
func (*HeroGenCountryProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{4} }

func (m *HeroGenCountryProto) GetCountryId() int32 {
	if m != nil {
		return m.CountryId
	}
	return 0
}

func (m *HeroGenCountryProto) GetNewUserExpiredTime() int32 {
	if m != nil {
		return m.NewUserExpiredTime
	}
	return 0
}

func (m *HeroGenCountryProto) GetNormalExpiredTime() int32 {
	if m != nil {
		return m.NormalExpiredTime
	}
	return 0
}

func (m *HeroGenCountryProto) GetAppointOnSameDay() bool {
	if m != nil {
		return m.AppointOnSameDay
	}
	return false
}

func (m *HeroGenCountryProto) GetDailySalaryCollected() bool {
	if m != nil {
		return m.DailySalaryCollected
	}
	return false
}

type HeroGenShopProto struct {
	BlackMarketDailyRefreshTimes int32 `protobuf:"varint,1,opt,name=black_market_daily_refresh_times,json=blackMarketDailyRefreshTimes,proto3" json:"black_market_daily_refresh_times,omitempty"`
	BlackMarketNextRefreshTime   int32 `protobuf:"varint,2,opt,name=black_market_next_refresh_time,json=blackMarketNextRefreshTime,proto3" json:"black_market_next_refresh_time,omitempty"`
}

func (m *HeroGenShopProto) Reset()                    { *m = HeroGenShopProto{} }
func (m *HeroGenShopProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenShopProto) ProtoMessage()               {}
func (*HeroGenShopProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{5} }

func (m *HeroGenShopProto) GetBlackMarketDailyRefreshTimes() int32 {
	if m != nil {
		return m.BlackMarketDailyRefreshTimes
	}
	return 0
}

func (m *HeroGenShopProto) GetBlackMarketNextRefreshTime() int32 {
	if m != nil {
		return m.BlackMarketNextRefreshTime
	}
	return 0
}

type HeroGenGuildWorkshopProto struct {
	DailyBuildTimes int32 `protobuf:"varint,1,opt,name=daily_build_times,json=dailyBuildTimes,proto3" json:"daily_build_times,omitempty"`
	DailyHurtTimes  int32 `protobuf:"varint,3,opt,name=daily_hurt_times,json=dailyHurtTimes,proto3" json:"daily_hurt_times,omitempty"`
	NextHurtTime    int32 `protobuf:"varint,4,opt,name=next_hurt_time,json=nextHurtTime,proto3" json:"next_hurt_time,omitempty"`
}

func (m *HeroGenGuildWorkshopProto) Reset()                    { *m = HeroGenGuildWorkshopProto{} }
func (m *HeroGenGuildWorkshopProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenGuildWorkshopProto) ProtoMessage()               {}
func (*HeroGenGuildWorkshopProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{6} }

func (m *HeroGenGuildWorkshopProto) GetDailyBuildTimes() int32 {
	if m != nil {
		return m.DailyBuildTimes
	}
	return 0
}

func (m *HeroGenGuildWorkshopProto) GetDailyHurtTimes() int32 {
	if m != nil {
		return m.DailyHurtTimes
	}
	return 0
}

func (m *HeroGenGuildWorkshopProto) GetNextHurtTime() int32 {
	if m != nil {
		return m.NextHurtTime
	}
	return 0
}

type HeroGenProductProto struct {
	YuanbaoGiftLimit int32 `protobuf:"varint,1,opt,name=yuanbao_gift_limit,json=yuanbaoGiftLimit,proto3" json:"yuanbao_gift_limit,omitempty"`
}

func (m *HeroGenProductProto) Reset()                    { *m = HeroGenProductProto{} }
func (m *HeroGenProductProto) String() string            { return proto.CompactTextString(m) }
func (*HeroGenProductProto) ProtoMessage()               {}
func (*HeroGenProductProto) Descriptor() ([]byte, []int) { return fileDescriptorHeroGen, []int{7} }

func (m *HeroGenProductProto) GetYuanbaoGiftLimit() int32 {
	if m != nil {
		return m.YuanbaoGiftLimit
	}
	return 0
}

func init() {
	proto.RegisterType((*HeroGenProto)(nil), "proto.HeroGenProto")
	proto.RegisterType((*HeroGenXuanyuanProto)(nil), "proto.HeroGenXuanyuanProto")
	proto.RegisterType((*HeroGenMiscDataProto)(nil), "proto.HeroGenMiscDataProto")
	proto.RegisterType((*HeroGenFarmExtraProto)(nil), "proto.HeroGenFarmExtraProto")
	proto.RegisterType((*HeroGenCountryProto)(nil), "proto.HeroGenCountryProto")
	proto.RegisterType((*HeroGenShopProto)(nil), "proto.HeroGenShopProto")
	proto.RegisterType((*HeroGenGuildWorkshopProto)(nil), "proto.HeroGenGuildWorkshopProto")
	proto.RegisterType((*HeroGenProductProto)(nil), "proto.HeroGenProductProto")
}
func (m *HeroGenProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Xuanyuan != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Xuanyuan.Size()))
		n1, err := m.Xuanyuan.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.MiscData != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.MiscData.Size()))
		n2, err := m.MiscData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.FarmExtra != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FarmExtra.Size()))
		n3, err := m.FarmExtra.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Country != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Country.Size()))
		n4, err := m.Country.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.Shop != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Shop.Size()))
		n5, err := m.Shop.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.GuildWorkshop != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.GuildWorkshop.Size()))
		n6, err := m.GuildWorkshop.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.Product != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.Product.Size()))
		n7, err := m.Product.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}

func (m *HeroGenXuanyuanProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenXuanyuanProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ChallengeTarget) > 0 {
		for _, b := range m.ChallengeTarget {
			dAtA[i] = 0xa
			i++
			i = encodeVarintHeroGen(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	if m.RankPrizeCollected {
		dAtA[i] = 0x30
		i++
		if m.RankPrizeCollected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *HeroGenMiscDataProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenMiscDataProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyResetTime != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyResetTime))
	}
	if m.SeasonResetTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.SeasonResetTime))
	}
	if m.DefenserNextFullSoldierTime != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DefenserNextFullSoldierTime))
	}
	if m.DefenserDontAutoFullSoldier {
		dAtA[i] = 0x20
		i++
		if m.DefenserDontAutoFullSoldier {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FishPoint != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishPoint))
	}
	if m.BanChatEndTime != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BanChatEndTime))
	}
	if m.FishPointExchangeIndex != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishPointExchangeIndex))
	}
	if m.FishCombo != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.FishCombo))
	}
	if m.DailyZeroResetTime != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyZeroResetTime))
	}
	if m.DailyMcResetTime != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyMcResetTime))
	}
	if m.WeeklyResetTime != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.WeeklyResetTime))
	}
	return i, nil
}

func (m *HeroGenFarmExtraProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenFarmExtraProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyStealGold != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyStealGold))
	}
	if m.DailyStealStone != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyStealStone))
	}
	return i, nil
}

func (m *HeroGenCountryProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenCountryProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CountryId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.CountryId))
	}
	if m.NewUserExpiredTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NewUserExpiredTime))
	}
	if m.NormalExpiredTime != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NormalExpiredTime))
	}
	if m.AppointOnSameDay {
		dAtA[i] = 0x20
		i++
		if m.AppointOnSameDay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DailySalaryCollected {
		dAtA[i] = 0x28
		i++
		if m.DailySalaryCollected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	return i, nil
}

func (m *HeroGenShopProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenShopProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.BlackMarketDailyRefreshTimes != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BlackMarketDailyRefreshTimes))
	}
	if m.BlackMarketNextRefreshTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.BlackMarketNextRefreshTime))
	}
	return i, nil
}

func (m *HeroGenGuildWorkshopProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenGuildWorkshopProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DailyBuildTimes != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyBuildTimes))
	}
	if m.DailyHurtTimes != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.DailyHurtTimes))
	}
	if m.NextHurtTime != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.NextHurtTime))
	}
	return i, nil
}

func (m *HeroGenProductProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroGenProductProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.YuanbaoGiftLimit != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintHeroGen(dAtA, i, uint64(m.YuanbaoGiftLimit))
	}
	return i, nil
}

func encodeFixed64HeroGen(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32HeroGen(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintHeroGen(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *HeroGenProto) Size() (n int) {
	var l int
	_ = l
	if m.Xuanyuan != nil {
		l = m.Xuanyuan.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.MiscData != nil {
		l = m.MiscData.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.FarmExtra != nil {
		l = m.FarmExtra.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Country != nil {
		l = m.Country.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Shop != nil {
		l = m.Shop.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.GuildWorkshop != nil {
		l = m.GuildWorkshop.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	if m.Product != nil {
		l = m.Product.Size()
		n += 1 + l + sovHeroGen(uint64(l))
	}
	return n
}

func (m *HeroGenXuanyuanProto) Size() (n int) {
	var l int
	_ = l
	if len(m.ChallengeTarget) > 0 {
		for _, b := range m.ChallengeTarget {
			l = len(b)
			n += 1 + l + sovHeroGen(uint64(l))
		}
	}
	if m.RankPrizeCollected {
		n += 2
	}
	return n
}

func (m *HeroGenMiscDataProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyResetTime))
	}
	if m.SeasonResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.SeasonResetTime))
	}
	if m.DefenserNextFullSoldierTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DefenserNextFullSoldierTime))
	}
	if m.DefenserDontAutoFullSoldier {
		n += 2
	}
	if m.FishPoint != 0 {
		n += 1 + sovHeroGen(uint64(m.FishPoint))
	}
	if m.BanChatEndTime != 0 {
		n += 1 + sovHeroGen(uint64(m.BanChatEndTime))
	}
	if m.FishPointExchangeIndex != 0 {
		n += 1 + sovHeroGen(uint64(m.FishPointExchangeIndex))
	}
	if m.FishCombo != 0 {
		n += 1 + sovHeroGen(uint64(m.FishCombo))
	}
	if m.DailyZeroResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyZeroResetTime))
	}
	if m.DailyMcResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyMcResetTime))
	}
	if m.WeeklyResetTime != 0 {
		n += 1 + sovHeroGen(uint64(m.WeeklyResetTime))
	}
	return n
}

func (m *HeroGenFarmExtraProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyStealGold != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyStealGold))
	}
	if m.DailyStealStone != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyStealStone))
	}
	return n
}

func (m *HeroGenCountryProto) Size() (n int) {
	var l int
	_ = l
	if m.CountryId != 0 {
		n += 1 + sovHeroGen(uint64(m.CountryId))
	}
	if m.NewUserExpiredTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NewUserExpiredTime))
	}
	if m.NormalExpiredTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NormalExpiredTime))
	}
	if m.AppointOnSameDay {
		n += 2
	}
	if m.DailySalaryCollected {
		n += 2
	}
	return n
}

func (m *HeroGenShopProto) Size() (n int) {
	var l int
	_ = l
	if m.BlackMarketDailyRefreshTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.BlackMarketDailyRefreshTimes))
	}
	if m.BlackMarketNextRefreshTime != 0 {
		n += 1 + sovHeroGen(uint64(m.BlackMarketNextRefreshTime))
	}
	return n
}

func (m *HeroGenGuildWorkshopProto) Size() (n int) {
	var l int
	_ = l
	if m.DailyBuildTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyBuildTimes))
	}
	if m.DailyHurtTimes != 0 {
		n += 1 + sovHeroGen(uint64(m.DailyHurtTimes))
	}
	if m.NextHurtTime != 0 {
		n += 1 + sovHeroGen(uint64(m.NextHurtTime))
	}
	return n
}

func (m *HeroGenProductProto) Size() (n int) {
	var l int
	_ = l
	if m.YuanbaoGiftLimit != 0 {
		n += 1 + sovHeroGen(uint64(m.YuanbaoGiftLimit))
	}
	return n
}

func sovHeroGen(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozHeroGen(x uint64) (n int) {
	return sovHeroGen(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HeroGenProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Xuanyuan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Xuanyuan == nil {
				m.Xuanyuan = &HeroGenXuanyuanProto{}
			}
			if err := m.Xuanyuan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiscData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MiscData == nil {
				m.MiscData = &HeroGenMiscDataProto{}
			}
			if err := m.MiscData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FarmExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FarmExtra == nil {
				m.FarmExtra = &HeroGenFarmExtraProto{}
			}
			if err := m.FarmExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Country == nil {
				m.Country = &HeroGenCountryProto{}
			}
			if err := m.Country.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Shop == nil {
				m.Shop = &HeroGenShopProto{}
			}
			if err := m.Shop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuildWorkshop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuildWorkshop == nil {
				m.GuildWorkshop = &HeroGenGuildWorkshopProto{}
			}
			if err := m.GuildWorkshop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Product == nil {
				m.Product = &HeroGenProductProto{}
			}
			if err := m.Product.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenXuanyuanProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenXuanyuanProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenXuanyuanProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChallengeTarget", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthHeroGen
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChallengeTarget = append(m.ChallengeTarget, make([]byte, postIndex-iNdEx))
			copy(m.ChallengeTarget[len(m.ChallengeTarget)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankPrizeCollected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RankPrizeCollected = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenMiscDataProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenMiscDataProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenMiscDataProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyResetTime", wireType)
			}
			m.DailyResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyResetTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonResetTime", wireType)
			}
			m.SeasonResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonResetTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenserNextFullSoldierTime", wireType)
			}
			m.DefenserNextFullSoldierTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefenserNextFullSoldierTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefenserDontAutoFullSoldier", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefenserDontAutoFullSoldier = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishPoint", wireType)
			}
			m.FishPoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishPoint |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BanChatEndTime", wireType)
			}
			m.BanChatEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BanChatEndTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishPointExchangeIndex", wireType)
			}
			m.FishPointExchangeIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishPointExchangeIndex |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FishCombo", wireType)
			}
			m.FishCombo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FishCombo |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyZeroResetTime", wireType)
			}
			m.DailyZeroResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyZeroResetTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyMcResetTime", wireType)
			}
			m.DailyMcResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyMcResetTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeeklyResetTime", wireType)
			}
			m.WeeklyResetTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WeeklyResetTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenFarmExtraProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenFarmExtraProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenFarmExtraProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyStealGold", wireType)
			}
			m.DailyStealGold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyStealGold |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyStealStone", wireType)
			}
			m.DailyStealStone = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyStealStone |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenCountryProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenCountryProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenCountryProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CountryId", wireType)
			}
			m.CountryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CountryId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUserExpiredTime", wireType)
			}
			m.NewUserExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewUserExpiredTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NormalExpiredTime", wireType)
			}
			m.NormalExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NormalExpiredTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppointOnSameDay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AppointOnSameDay = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailySalaryCollected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DailySalaryCollected = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenShopProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenShopProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenShopProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackMarketDailyRefreshTimes", wireType)
			}
			m.BlackMarketDailyRefreshTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlackMarketDailyRefreshTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlackMarketNextRefreshTime", wireType)
			}
			m.BlackMarketNextRefreshTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlackMarketNextRefreshTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenGuildWorkshopProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenGuildWorkshopProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenGuildWorkshopProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyBuildTimes", wireType)
			}
			m.DailyBuildTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyBuildTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyHurtTimes", wireType)
			}
			m.DailyHurtTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DailyHurtTimes |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHurtTime", wireType)
			}
			m.NextHurtTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextHurtTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroGenProductProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroGenProductProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroGenProductProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YuanbaoGiftLimit", wireType)
			}
			m.YuanbaoGiftLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.YuanbaoGiftLimit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipHeroGen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthHeroGen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipHeroGen(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowHeroGen
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHeroGen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthHeroGen
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowHeroGen
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipHeroGen(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthHeroGen = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowHeroGen   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/shared_proto/hero_gen.proto", fileDescriptorHeroGen)
}

var fileDescriptorHeroGen = []byte{
	// 918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xcf, 0x6e, 0x1b, 0x45,
	0x18, 0x67, 0xeb, 0xb8, 0x4d, 0xa6, 0x6e, 0xea, 0x4c, 0xd2, 0x62, 0xda, 0x62, 0x2c, 0x8b, 0x43,
	0x0a, 0x34, 0xe6, 0x4f, 0x45, 0x2b, 0x71, 0x22, 0x76, 0xe2, 0x54, 0x22, 0x10, 0xd9, 0x45, 0xa0,
	0x5e, 0x46, 0xb3, 0xbb, 0x9f, 0x77, 0x57, 0x9e, 0x9d, 0x59, 0xcd, 0xcc, 0xca, 0x76, 0x5f, 0x04,
	0x4e, 0x88, 0x1b, 0xaf, 0xc2, 0x91, 0x47, 0x40, 0xe1, 0x35, 0x38, 0xa0, 0x99, 0x59, 0xaf, 0x77,
	0xa9, 0x73, 0xb2, 0xf6, 0xf7, 0xe7, 0x9b, 0x6f, 0xbe, 0x3f, 0x63, 0xf4, 0x32, 0x4a, 0x74, 0x9c,
	0xfb, 0x27, 0x81, 0x48, 0x07, 0x2c, 0x89, 0x62, 0x9d, 0xd1, 0xc5, 0x20, 0xa5, 0x0c, 0x5e, 0x0c,
	0x32, 0x7f, 0xa0, 0x62, 0x2a, 0x21, 0x24, 0x99, 0x14, 0x5a, 0x0c, 0x62, 0x90, 0x82, 0x44, 0xc0,
	0x4f, 0xec, 0x27, 0x6e, 0xda, 0x9f, 0xfe, 0xef, 0x0d, 0xd4, 0xba, 0x00, 0x29, 0xc6, 0xc0, 0xaf,
	0x2c, 0xfe, 0x02, 0xed, 0x2e, 0x73, 0xca, 0x57, 0x39, 0xe5, 0x1d, 0xaf, 0xe7, 0x1d, 0xdf, 0xfd,
	0xf2, 0xb1, 0x73, 0x9c, 0x14, 0xb2, 0x9f, 0x0b, 0xd6, 0xca, 0x27, 0xa5, 0x18, 0xbf, 0x44, 0x7b,
	0x69, 0xa2, 0x02, 0x12, 0x52, 0x4d, 0x3b, 0xb7, 0xb6, 0x39, 0x2f, 0x13, 0x15, 0x8c, 0xa8, 0xa6,
	0x85, 0x33, 0x2d, 0x3e, 0xf1, 0x37, 0x08, 0xcd, 0xa8, 0x4c, 0x09, 0x2c, 0xb5, 0xa4, 0x9d, 0x86,
	0xb5, 0x3e, 0xa9, 0x5b, 0xcf, 0xa9, 0x4c, 0xcf, 0x0c, 0xed, 0xbc, 0x7b, 0xb3, 0xf5, 0x37, 0x7e,
	0x8e, 0xee, 0x04, 0x22, 0xe7, 0x5a, 0xae, 0x3a, 0x3b, 0xd6, 0xf9, 0xa8, 0xee, 0x1c, 0x3a, 0xd2,
	0xf9, 0xd6, 0x52, 0xfc, 0x29, 0xda, 0x51, 0xb1, 0xc8, 0x3a, 0x4d, 0x6b, 0x79, 0xbf, 0x6e, 0x99,
	0xc6, 0x22, 0x73, 0x7a, 0x2b, 0xc2, 0x63, 0xb4, 0x1f, 0xe5, 0x09, 0x0b, 0xc9, 0x42, 0xc8, 0xb9,
	0xb5, 0xdd, 0xb6, 0xb6, 0x5e, 0xdd, 0x36, 0x36, 0x9a, 0x9f, 0x0a, 0x89, 0xf3, 0xdf, 0x8b, 0xaa,
	0x98, 0xc9, 0x35, 0x93, 0x22, 0xcc, 0x03, 0xdd, 0xb9, 0xb3, 0x2d, 0xd7, 0x2b, 0x47, 0x16, 0xb9,
	0x16, 0xd2, 0xbe, 0x42, 0x47, 0xdb, 0x4a, 0x8f, 0x9f, 0xa2, 0x76, 0x10, 0x53, 0xc6, 0x80, 0x47,
	0x40, 0x34, 0x95, 0x11, 0xe8, 0x8e, 0xd7, 0x6b, 0x1c, 0xb7, 0x26, 0xf7, 0x4b, 0xfc, 0xb5, 0x85,
	0xf1, 0xe7, 0xe8, 0x48, 0x52, 0x3e, 0x27, 0x99, 0x4c, 0xde, 0x02, 0x09, 0x04, 0x63, 0x10, 0x68,
	0x08, 0xed, 0x3d, 0x76, 0x27, 0xd8, 0x70, 0x57, 0x86, 0x1a, 0xae, 0x99, 0xfe, 0x1f, 0x3b, 0xe5,
	0xa9, 0xb5, 0xb6, 0xe1, 0x63, 0xd4, 0x0e, 0x69, 0xc2, 0x56, 0x44, 0x82, 0x02, 0x4d, 0x74, 0x92,
	0x82, 0x9d, 0x93, 0xe6, 0x64, 0xdf, 0xe2, 0x13, 0x03, 0xbf, 0x4e, 0x52, 0xc0, 0x9f, 0xa0, 0x03,
	0x05, 0x54, 0x09, 0x5e, 0x95, 0xde, 0xb2, 0xd2, 0xfb, 0x8e, 0xd8, 0x68, 0x47, 0xe8, 0xa3, 0x10,
	0x66, 0xc0, 0x15, 0x48, 0xc2, 0x61, 0xa9, 0xc9, 0x2c, 0x67, 0x8c, 0x28, 0xc1, 0xc2, 0x04, 0xa4,
	0x73, 0x36, 0xac, 0xf3, 0xf1, 0x5a, 0xf6, 0x3d, 0x2c, 0xf5, 0x79, 0xce, 0xd8, 0xd4, 0x69, 0xde,
	0x89, 0x12, 0x0a, 0xae, 0x09, 0xcd, 0xb5, 0xa8, 0x85, 0xb2, 0x33, 0xb2, 0xbb, 0x89, 0x32, 0x12,
	0x5c, 0x7f, 0x9b, 0x6b, 0x51, 0x89, 0x84, 0x3f, 0x44, 0x68, 0x96, 0xa8, 0x98, 0x64, 0x22, 0xe1,
	0xae, 0x51, 0xcd, 0xc9, 0x9e, 0x41, 0xae, 0x0c, 0x80, 0x9f, 0xa2, 0x03, 0x9f, 0x72, 0x12, 0xc4,
	0x54, 0x13, 0xe0, 0xa1, 0x4b, 0x6e, 0xd7, 0x55, 0xc0, 0xa7, 0x7c, 0x18, 0x53, 0x7d, 0xc6, 0x43,
	0x9b, 0xcf, 0xd7, 0xe8, 0x61, 0xe9, 0x3b, 0x5b, 0x06, 0x31, 0xe5, 0x11, 0xbc, 0xe2, 0x21, 0x2c,
	0x3b, 0xc8, 0xea, 0x6f, 0x60, 0xcb, 0x0c, 0x02, 0x91, 0xfa, 0xa2, 0x73, 0x77, 0x93, 0xc1, 0xd0,
	0x00, 0xf8, 0x0b, 0xf4, 0xc0, 0xb5, 0xe0, 0xad, 0x59, 0xe9, 0x4a, 0x71, 0x5b, 0x56, 0x89, 0x2d,
	0xf9, 0x06, 0xa4, 0xd8, 0xd4, 0xf7, 0x19, 0x3a, 0x74, 0x96, 0x34, 0xa8, 0x1a, 0xee, 0x59, 0x83,
	0x6b, 0xe8, 0x65, 0x50, 0x6b, 0xdd, 0x02, 0x60, 0x5e, 0xef, 0xf2, 0xbe, 0x6b, 0x9d, 0x23, 0x4a,
	0x6d, 0x3f, 0x45, 0x0f, 0xb6, 0x2e, 0xe9, 0x66, 0x52, 0x94, 0x06, 0xca, 0x48, 0x24, 0x58, 0x58,
	0x9b, 0x94, 0xa9, 0x81, 0xc7, 0x82, 0x85, 0xe6, 0xb8, 0xaa, 0x52, 0x69, 0xc1, 0xcb, 0x49, 0xd9,
	0x48, 0xa7, 0x06, 0xee, 0xff, 0xeb, 0xa1, 0xc3, 0x2d, 0xab, 0x6d, 0x6a, 0x56, 0x2c, 0x37, 0x49,
	0xd6, 0xe7, 0xec, 0x15, 0xc8, 0xab, 0xd0, 0xd4, 0x8c, 0xc3, 0x82, 0xe4, 0x66, 0x34, 0x60, 0x99,
	0x25, 0xe6, 0x5d, 0xac, 0x0c, 0x24, 0xe6, 0xb0, 0xf8, 0x51, 0x81, 0x3c, 0x73, 0x94, 0x2d, 0xc2,
	0x09, 0x3a, 0xe4, 0x42, 0xa6, 0x94, 0xd5, 0x0d, 0x6e, 0x0e, 0x0f, 0x1c, 0x55, 0xd5, 0x3f, 0x43,
	0x87, 0x34, 0xb3, 0x43, 0x43, 0x04, 0x27, 0x8a, 0xa6, 0x40, 0x42, 0xba, 0x2a, 0x26, 0xae, 0x5d,
	0x50, 0x3f, 0xf0, 0x29, 0x4d, 0x61, 0x44, 0x57, 0xf8, 0x39, 0x7a, 0x58, 0x5c, 0x9a, 0x32, 0x2a,
	0x57, 0x95, 0xad, 0x6c, 0x5a, 0xc7, 0x91, 0xbb, 0xb9, 0x25, 0x37, 0x7b, 0xf9, 0x9b, 0x87, 0xda,
	0xff, 0x7f, 0xa6, 0xf0, 0x39, 0xea, 0xf9, 0x8c, 0x06, 0x73, 0x92, 0x52, 0x39, 0x07, 0x4d, 0xd6,
	0x0b, 0x3a, 0x93, 0xa0, 0x62, 0x9b, 0xb5, 0x2a, 0x2a, 0xf2, 0xc4, 0xea, 0x2e, 0xad, 0x6c, 0xe4,
	0xd6, 0xd5, 0x8a, 0xcc, 0x05, 0x14, 0x3e, 0x45, 0xdd, 0x5a, 0x1c, 0xbb, 0x89, 0xd5, 0x30, 0x45,
	0xb5, 0x1e, 0x55, 0xa2, 0x98, 0x3d, 0xac, 0x04, 0xe9, 0xff, 0xe2, 0xa1, 0x0f, 0x6e, 0x7c, 0x10,
	0x37, 0x9d, 0xf6, 0xed, 0x83, 0x5a, 0x4d, 0xcd, 0x75, 0xfa, 0xd4, 0xe0, 0x2e, 0x9b, 0x72, 0x7e,
	0xe2, 0x5c, 0xea, 0x42, 0xda, 0xa8, 0xcc, 0xcf, 0x45, 0x2e, 0xb5, 0x53, 0x7e, 0x8c, 0xf6, 0x6d,
	0xaa, 0xa5, 0xd0, 0x16, 0xbd, 0x39, 0x69, 0x19, 0x74, 0x2d, 0xeb, 0x0f, 0xcb, 0xc1, 0xa9, 0xbe,
	0xb3, 0xf8, 0x33, 0x84, 0xcd, 0x9b, 0xea, 0x53, 0x41, 0xa2, 0x64, 0xa6, 0x09, 0x4b, 0xd2, 0x44,
	0x17, 0x39, 0xb5, 0x0b, 0x66, 0x9c, 0xcc, 0xf4, 0x77, 0x06, 0x3f, 0xed, 0xfd, 0x79, 0xdd, 0xf5,
	0xfe, 0xba, 0xee, 0x7a, 0x7f, 0x5f, 0x77, 0xbd, 0x5f, 0xff, 0xe9, 0xbe, 0x77, 0xe1, 0xbd, 0x69,
	0x55, 0xff, 0x67, 0xfd, 0xdb, 0xf6, 0xe7, 0xab, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x92, 0x3e,
	0xad, 0xa4, 0x9b, 0x07, 0x00, 0x00,
}
