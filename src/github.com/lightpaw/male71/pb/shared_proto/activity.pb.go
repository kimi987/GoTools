// Code generated by protoc-gen-gogo.
// source: github.com/lightpaw/male7/pb/shared_proto/activity.proto
// DO NOT EDIT!

/*
	Package shared_proto is a generated protocol buffer package.

	It is generated from these files:
		github.com/lightpaw/male7/pb/shared_proto/activity.proto
		github.com/lightpaw/male7/pb/shared_proto/bai_zhan.proto
		github.com/lightpaw/male7/pb/shared_proto/base.proto
		github.com/lightpaw/male7/pb/shared_proto/buff.proto
		github.com/lightpaw/male7/pb/shared_proto/buffer.proto
		github.com/lightpaw/male7/pb/shared_proto/captain_soul.proto
		github.com/lightpaw/male7/pb/shared_proto/charge.proto
		github.com/lightpaw/male7/pb/shared_proto/chat.proto
		github.com/lightpaw/male7/pb/shared_proto/client.proto
		github.com/lightpaw/male7/pb/shared_proto/combat.proto
		github.com/lightpaw/male7/pb/shared_proto/combatx.proto
		github.com/lightpaw/male7/pb/shared_proto/config.proto
		github.com/lightpaw/male7/pb/shared_proto/config_gen.proto
		github.com/lightpaw/male7/pb/shared_proto/country.proto
		github.com/lightpaw/male7/pb/shared_proto/depot.proto
		github.com/lightpaw/male7/pb/shared_proto/dianquan.proto
		github.com/lightpaw/male7/pb/shared_proto/domestic.proto
		github.com/lightpaw/male7/pb/shared_proto/dungeon.proto
		github.com/lightpaw/male7/pb/shared_proto/farm.proto
		github.com/lightpaw/male7/pb/shared_proto/fishing.proto
		github.com/lightpaw/male7/pb/shared_proto/function.proto
		github.com/lightpaw/male7/pb/shared_proto/garden.proto
		github.com/lightpaw/male7/pb/shared_proto/gm.proto
		github.com/lightpaw/male7/pb/shared_proto/goods.proto
		github.com/lightpaw/male7/pb/shared_proto/guild.proto
		github.com/lightpaw/male7/pb/shared_proto/guizu.proto
		github.com/lightpaw/male7/pb/shared_proto/hebi.proto
		github.com/lightpaw/male7/pb/shared_proto/hero.proto
		github.com/lightpaw/male7/pb/shared_proto/hero_gen.proto
		github.com/lightpaw/male7/pb/shared_proto/mail.proto
		github.com/lightpaw/male7/pb/shared_proto/military.proto
		github.com/lightpaw/male7/pb/shared_proto/mingc.proto
		github.com/lightpaw/male7/pb/shared_proto/mingc_war.proto
		github.com/lightpaw/male7/pb/shared_proto/monster.proto
		github.com/lightpaw/male7/pb/shared_proto/promotion.proto
		github.com/lightpaw/male7/pb/shared_proto/question.proto
		github.com/lightpaw/male7/pb/shared_proto/random_event.proto
		github.com/lightpaw/male7/pb/shared_proto/rank.proto
		github.com/lightpaw/male7/pb/shared_proto/red_packet.proto
		github.com/lightpaw/male7/pb/shared_proto/region.proto
		github.com/lightpaw/male7/pb/shared_proto/season.proto
		github.com/lightpaw/male7/pb/shared_proto/setting.proto
		github.com/lightpaw/male7/pb/shared_proto/shop.proto
		github.com/lightpaw/male7/pb/shared_proto/snapshot.proto
		github.com/lightpaw/male7/pb/shared_proto/spell.proto
		github.com/lightpaw/male7/pb/shared_proto/survey.proto
		github.com/lightpaw/male7/pb/shared_proto/tag.proto
		github.com/lightpaw/male7/pb/shared_proto/task.proto
		github.com/lightpaw/male7/pb/shared_proto/teach.proto
		github.com/lightpaw/male7/pb/shared_proto/tencent.proto
		github.com/lightpaw/male7/pb/shared_proto/tower.proto
		github.com/lightpaw/male7/pb/shared_proto/vip.proto
		github.com/lightpaw/male7/pb/shared_proto/xiongnu.proto
		github.com/lightpaw/male7/pb/shared_proto/xuanyuan.proto
		github.com/lightpaw/male7/pb/shared_proto/zhanjiang.proto
		github.com/lightpaw/male7/pb/shared_proto/zhengwu.proto

	It has these top-level messages:
		HeroAllCollectionProto
		HeroCollectionProto
		ActivityCollectionProto
		ActivityTaskListModeProto
		HeroActivityTaskListModeProto
		ActiviyShowProto
		BaiZhanMiscProto
		JunXianLevelDataProto
		JunXianLevelPrizeProto
		BaiZhanReplayProto
		CombatObjProto
		BaiZhanObjProto
		BaiZhanRankObjProto
		RaceDataProto
		ResProto
		AmountProto
		CombineCostProto
		CostProto
		PrizeProto
		GuildLevelPrizeProto
		AmountShowSortProto
		ExchangeDataProto
		UnlockConditionProto
		Int32Pair
		StringPair
		StringInt32Pair
		BytesInt32Pair
		Int32ArrayProto
		StringArrayProto
		BytesArrayProto
		Int32PairInt32ArrayProto
		SpriteStatProto
		SpriteStatArrayProto
		IconProto
		ExtraTimesListProto
		ExtraTimesProto
		RecoverableTimesWithExtraTimesProto
		CaptainNameProto
		StatBuffProto
		HeroBuffProto
		BuffInfoProto
		BufferEffectProto
		DebufEffectProto
		HeroBufferProto
		CaptainSoulMiscProto
		CaptainSoulDataProto
		CaptainSoulLevelDataProto
		CaptainSoulSpellProto
		CaptainSoulFettersProto
		HeroCaptainSoulProto
		HeroCaptainSoulOtherProto
		CaptainSoulProto
		ChargeProto
		BroughtBargainProto
		DurationCardProto
		ChatSenderProto
		ChatRoomId
		ChatMsgProto
		AllTable
		Table
		Row
		Cell
		CombatShareProto
		CombatProto
		MultiCombatProto
		CombatRoundProto
		CombatActionProto
		WallActionProto
		CombatPlayerProto
		CombatTroopsProto
		CombatTroopsPosProto
		CombatTroopsInitProto
		CombatXProto
		CombatFrameProto
		TroopActionProto
		TroopTriggerPassiveSpellActionProto
		TroopMoveActionProto
		TroopReleaseSpellActionProto
		TroopReleaseSpellEffectProto
		TroopRageUpdateProto
		TroopTickEffectProto
		Config
		GoodsConfigProto
		MilitaryConfigProto
		RegionConfigProto
		MiscConfigProto
		GuildConfigProto
		I18NDataProto
		I18NPairProto
		HeadProto
		BodyProto
		ConfigGen
		ActivityCollectionDataProto
		ActivityShowDataProto
		ActivityTaskDataProto
		ActivityTaskListModeDataProto
		AreaDataProto
		CaptainStarDataProto
		CollectionExchangeDataProto
		CombatConfigProto
		PassiveSpellDataProto
		SpellDataProto
		SpellTargetDataProto
		StateDataProto
		MingcBaseDataProto
		XuanyuanMiscDataProto
		XuanyuanRangeDataProto
		XuanyuanRankPrizeDataProto
		MiscGenConfigProto
		BaowuDataProto
		BaozNpcDataProto
		PushDataProto
		TitleDataProto
		TitleTaskDataProto
		SecretTowerWordsDataProto
		GuildGenConfigProto
		LocationDataProto
		CountryDataProto
		CountryMiscDataProto
		FamilyNameDataProto
		LoginDayDataProto
		HeroLevelFundDataProto
		PromotionMiscDataProto
		BlackMarketGoodsDataProto
		ShopMiscDataProto
		MingcMiscDataProto
		MingcTimeDataProto
		MingcWarBuildingDataProto
		MingcWarMapDataProto
		MingcWarSceneDataProto
		RegionGenConfigProto
		OuterCityBuildingDataProto
		DiscountColorDataProto
		MingcWarTroopLastBeatWhenFailDataProto
		MingcWarTouShiBuildingTargetDataProto
		CaptainDataProto
		CaptainRarityDataProto
		NamelessCaptainDataProto
		SpellFacadeDataProto
		BufferDataProto
		GuildRankPrizeDataProto
		ChargePrizeDataProto
		SpCollectionDataProto
		StrategyEffectDataProto
		DailyBargainDataProto
		DurationCardDataProto
		CombatMiscConfigProto
		FreeGiftDataProto
		ChargeObjDataProto
		BuffEffectDataProto
		AssemblyDataProto
		JunTuanNpcDataProto
		ProsperityDamageBuffDataProto
		BufferTypeDataProto
		VipContinueDaysDataProto
		VipLevelDataProto
		VipMiscDataProto
		PrivacySettingDataProto
		TimeLimitGiftDataProto
		EventLimitGiftDataProto
		McBuildAddSupportDataProto
		McBuildGuildMemberPrizeDataProto
		McBuildMcSupportDataProto
		McBuildMiscDataProto
		CaptainFriendshipDataProto
		RedPacketDataProto
		TroopDialogueDataProto
		TroopDialogueTextDataProto
		CountryOfficialDataProto
		CountryOfficialNpcDataProto
		RegionAreaDataProto
		FishingCaptainProbabilityDataProto
		CountryMiscProto
		DefaultCountryProto
		CountryProto
		CountryDetailProto
		CountryChangeNameVoteProto
		CountriesProto
		CountryOfficialProto
		CountryOfficialHeroProto
		HeroCountryMiscProto
		HeroCountryChangeNameVoteProto
		HeroDepotProto
		HeroOpenCombineEquipProto
		BaowuLogProto
		DianquanMiscProto
		HeroLevelProto
		BaseLevelProto
		BuildingLayoutProto
		BuildingDataProto
		BuildingUnlockDataProto
		DomesticEffectProto
		GuanFuLevelProto
		TieJiangPuLevelProto
		TechnologyDataProto
		CountdownPrizeDescDataProto
		HeroDomesticProto
		HeroDomesticOtherProto
		ResourcePointV2Proto
		SingleResourcePointV2Proto
		CityEventProto
		CityEventDataProto
		CityEventMiscProto
		WorkshopRefreshCostProto
		StrategyDataProto
		HeroResourcePointProto
		OuterCitiesProto
		OuterCityProto
		OuterCityDataProto
		OuterCityBuildingDescDataProto
		OuterCityLayoutDataProto
		DungeonChapterProto
		DungeonDataProto
		DungeonMiscProto
		DungeonGuideTroopDataProto
		DungeonChapterStar
		DungeonStar
		DungeonPassLimit
		CollectedChapterStarPrizes
		HeroDungeonProto
		HeroVipBoughtTimes
		FarmResConfigProto
		FarmMiscConfigProto
		HeroFarmProto
		FarmCubeProto
		FarmStealLogProto
		FarmStealLogListProto
		FishingCostProto
		FishingShowProto
		HeroFishingProto
		FunctionOpenDataProto
		HeroFunctionProto
		TreasuryTreeDataProto
		GradonConfigProto
		HeroTreasuryTreeProto
		GmCmdListProto
		GmCmdProto
		GoodsDataProto
		GoodsQualityProto
		GoodsEffectProto
		EquipmentDataProto
		EquipmentQualityProto
		EquipmentRefinedProto
		EquipmentTaozProto
		EquipmentProto
		GoodsCombineDataProto
		EquipCombineDataProto
		GemDataProto
		GemSlotDataProto
		GuildWorkshopLogProto
		GuildTechnologyDataProto
		GuildEventPrizeDataProto
		GuildPrestigePrizeDataProto
		GuildBigBoxDataProto
		GuildLevelCdrProto
		GuildLevelProto
		GuildClassTitleDataProto
		GuildClassLevelProto
		GuildPermissionProto
		GuildDonateProto
		GuildProto
		GuildBasicProto
		GuildSnapshotProto
		GuildMemberProto
		GuildImpeachProto
		GuildClassTitleProto
		HeroUpgradeClassLevelProto
		GuildTargetProto
		GuildDonateRecordProto
		GuildBigEventProto
		StatueProto
		LevelUpProto
		ImpeachProto
		DemiseProto
		GuildDynamicProto
		FightProto
		JoinProto
		GuildSeekHelpProto
		GuildLogProto
		GuildPermissionShowProto
		GuildRecommendInviteHeros
		GuildMarkProto
		McWarRecordProto
		McWarAllRecordProto
		McWarAllRecordWithJoinedProto
		GuildAllYinliangRecordProto
		GuildYinliangRecordProto
		GuildAllYinliangSendToGuildProto
		GuildYinliangSendToGuildProto
		GuildYinliangSendProto
		GuildTaskEvaluateDataProto
		GuildTaskDataProto
		GuiZuLevelDataProto
		HeroGuiZuProto
		HebiMiscProto
		HebiPrizeProto
		HeroHebiProto
		HebiInfoProto
		HebiHeroRecordProto
		HebiHeroSingleRecordProto
		HebiRoomProto
		HebiCaptainProto
		HeroProto
		HeroGuildProto
		HeroRelationProto
		HeroRandomEventProto
		HeroEnemyProto
		HeroImportantFriendProto
		HeroServerInfoProto
		OtherHeroProto
		HeroRegionProto
		HeroMultiLevelNpcProto
		FavoritePosesProto
		FavoritePosProto
		FavoritePosListProto
		FavoritePosDetailProto
		HeroBaseProto
		StratagemProto
		TrappedStratagemProto
		StratagemTargetTimesProto
		HeroStrategyProto
		HeroClientDatasProto
		HeroGenProto
		HeroGenXuanyuanProto
		HeroGenMiscDataProto
		HeroGenFarmExtraProto
		HeroGenCountryProto
		HeroGenShopProto
		HeroGenGuildWorkshopProto
		HeroGenProductProto
		MailProto
		FightReportProto
		AssemblyFightProto
		ReportHeroProto
		ReportCaptainProto
		StrongerDataProto
		JiuGuanMiscDataProto
		TutorDataProto
		JiuGuanDataProto
		JunYingLevelDataProto
		JunYingMiscProto
		TrainingLevelProto
		CaptainAbilityProto
		CaptainGeneratorProto
		CaptainLevelProto
		CaptainRebirthLevelProto
		CaptainSeekerProto
		SoldierLevelProto
		CaptainOfficialProto
		MilitaryInfoProto
		AssemblyInfoProto
		AssemblyMemberProto
		BaseDefenserProto
		CaptainInfoProto
		HeroMilitaryProto
		HeroCaptainOfficialCount
		PveTroopDataProto
		HeroTroopProto
		HeroPveTroopProto
		CaptainProto
		HeroCaptainProto
		HeroCaptainGemProto
		CaptainSkillProto
		HeroCaptainOtherProto
		MingcsProto
		MingcProto
		HeroMcBuildProto
		GuildMcBuildProto
		SingleGuildMcBuildProto
		McWarGuildProto
		McWarGuildApplyAstListProto
		McWarProto
		McWarMcProto
		McApplyAtkProto
		McApplyAstProto
		McFightProto
		McWarSceneProto
		McWarSceneBuildingProto
		McWarTroopProto
		McWarTroopAllRecordProto
		McWarTroopRecordProto
		McWarFightRecordProto
		McWarFightGuildRecordProto
		McWarTroopsRankProto
		McWarTroopRankProto
		McWarTroopsInfoProto
		McWarTroopInfoProto
		McWarTroopScoreProto
		NpcBaseDataProto
		MonsterMasterDataProto
		MonsterCaptainDataProto
		HeroPromotionProto
		TimeLimitGiftProto
		TimeLimitGiftBoughtProto
		EventLimitGiftProto
		TimeLimitGiftBuyTimesProto
		TimeLimitGiftGroupDataProto
		QuestionProto
		QuestionSayingProto
		QuestionPrizeProto
		QuestionMiscProto
		HeroQuestionProto
		HeroEachQuestionProto
		RandomEventDataProto
		EventOptionProto
		EventPositionProto
		RankMiscProto
		RankProto
		CountryRankProto
		GuildRankProto
		TowerRankProto
		BaiZhanRankProto
		StarTaskRankProto
		XuanyRankProto
		HeroRedPacketProto
		BoughtRedPacketProto
		RedPacketProto
		RedPacketPartProto
		RedPacketStateProto
		SingleRedPacketStateProto
		BlockInfoProto
		BlockLayoutProto
		BaseUnitProto
		TroopUnitProto
		RegionDataProto
		RegionMultiLevelNpcTypeProto
		RegionMultiLevelNpcDataProto
		DiaoKeDataProto
		DiaoKeMiscDataProto
		AstDefendLogProto
		SeasonDataProto
		SeasonMiscProto
		HeroSettingsProto
		ShopProto
		NormalShopGoodsProto
		ZhenBaoGeShopGoodsProto
		HeroShopProto
		HeroBasicSnapshotProto
		HeroBasicProto
		SpellProto
		SpellIdProto
		SurveyDataProto
		HeroSurveyProto
		TagMiscProto
		HeroTagProto
		TagProto
		TagRecordProto
		TaskMiscDataProto
		TaskDataProto
		TaskTargetProto
		BaYeStageDataProto
		ActiveDegreePrizeProto
		AchieveTaskStarPrizeProto
		BwzlPrizeDataProto
		TaskBoxProto
		HeroTaskProto
		HeroBaYeStageProto
		SelectShowAchievesProto
		AchieveTaskListProto
		OtherAchieveTaskListProto
		AchieveTaskProto
		ActiveDegreeTaskListProto
		ActiveDegreeTaskProto
		BwzlTaskListProto
		BwzlTaskProto
		TitleTaskListProto
		TitleTaskProto
		HeroTeachProto
		TeachChapterDataProto
		TencentInfoProto
		TowerDataProto
		TowerFloorReplayProto
		TowerReplayProto
		SecretTowerDataProto
		SecretTowerMiscProto
		SecretTeamShowProto
		SecretTeamDetailProto
		SecretTowerTeamMemberProto
		SecretChallengeResultProto
		SecretMemberResultProto
		SecretRecordProto
		HeroTowerProto
		HeroSecretTowerProto
		SecretTowerChatRecordProto
		HeroVipProto
		ResistXiongNuMiscProto
		ResistXiongNuDataProto
		ResistXiongNuScoreProto
		XiongNuProto
		LastResistXiongNuProto
		ResistXiongNuFightProto
		XiongNuBaseTroopProto
		XiongNuTroopProto
		XuanyuanTargetProto
		XuanyuanRecordProto
		XuanyuanRecordHeroProto
		ZhanJiangChapterProto
		ZhanJiangGuanQiaProto
		ZhanJiangDataProto
		ZhanJiangMiscDataProto
		HeroZhanJiangProto
		ZhanJiangChallengeProto
		ZhengWuDataProto
		ZhengWuRefreshDataProto
		ZhengWuMiscProto
		HeroZhengWuProto
		ZhengWuProto
*/
package shared_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 一堆收集活动
type HeroAllCollectionProto struct {
	Collections []*HeroCollectionProto `protobuf:"bytes,1,rep,name=collections" json:"collections,omitempty"`
}

func (m *HeroAllCollectionProto) Reset()                    { *m = HeroAllCollectionProto{} }
func (m *HeroAllCollectionProto) String() string            { return proto.CompactTextString(m) }
func (*HeroAllCollectionProto) ProtoMessage()               {}
func (*HeroAllCollectionProto) Descriptor() ([]byte, []int) { return fileDescriptorActivity, []int{0} }

func (m *HeroAllCollectionProto) GetCollections() []*HeroCollectionProto {
	if m != nil {
		return m.Collections
	}
	return nil
}

// 收集活动
type HeroCollectionProto struct {
	Id            int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExchangeTimes []*Int32Pair `protobuf:"bytes,2,rep,name=exchange_times,json=exchangeTimes" json:"exchange_times,omitempty"`
}

func (m *HeroCollectionProto) Reset()                    { *m = HeroCollectionProto{} }
func (m *HeroCollectionProto) String() string            { return proto.CompactTextString(m) }
func (*HeroCollectionProto) ProtoMessage()               {}
func (*HeroCollectionProto) Descriptor() ([]byte, []int) { return fileDescriptorActivity, []int{1} }

func (m *HeroCollectionProto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HeroCollectionProto) GetExchangeTimes() []*Int32Pair {
	if m != nil {
		return m.ExchangeTimes
	}
	return nil
}

type ActivityCollectionProto struct {
	Data    *ActivityCollectionDataProto `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EndTime int32                        `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (m *ActivityCollectionProto) Reset()                    { *m = ActivityCollectionProto{} }
func (m *ActivityCollectionProto) String() string            { return proto.CompactTextString(m) }
func (*ActivityCollectionProto) ProtoMessage()               {}
func (*ActivityCollectionProto) Descriptor() ([]byte, []int) { return fileDescriptorActivity, []int{2} }

func (m *ActivityCollectionProto) GetData() *ActivityCollectionDataProto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ActivityCollectionProto) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ActivityTaskListModeProto struct {
	Data    *ActivityTaskListModeDataProto `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EndTime int32                          `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (m *ActivityTaskListModeProto) Reset()         { *m = ActivityTaskListModeProto{} }
func (m *ActivityTaskListModeProto) String() string { return proto.CompactTextString(m) }
func (*ActivityTaskListModeProto) ProtoMessage()    {}
func (*ActivityTaskListModeProto) Descriptor() ([]byte, []int) {
	return fileDescriptorActivity, []int{3}
}

func (m *ActivityTaskListModeProto) GetData() *ActivityTaskListModeDataProto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ActivityTaskListModeProto) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 列表式活动任务进度
type HeroActivityTaskListModeProto struct {
	Id        int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Progress  []*Int32Pair `protobuf:"bytes,2,rep,name=progress" json:"progress,omitempty"`
	Collected []int32      `protobuf:"varint,3,rep,name=collected" json:"collected,omitempty"`
}

func (m *HeroActivityTaskListModeProto) Reset()         { *m = HeroActivityTaskListModeProto{} }
func (m *HeroActivityTaskListModeProto) String() string { return proto.CompactTextString(m) }
func (*HeroActivityTaskListModeProto) ProtoMessage()    {}
func (*HeroActivityTaskListModeProto) Descriptor() ([]byte, []int) {
	return fileDescriptorActivity, []int{4}
}

func (m *HeroActivityTaskListModeProto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HeroActivityTaskListModeProto) GetProgress() []*Int32Pair {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *HeroActivityTaskListModeProto) GetCollected() []int32 {
	if m != nil {
		return m.Collected
	}
	return nil
}

type ActiviyShowProto struct {
	Data    *ActivityShowDataProto `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EndTime int32                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (m *ActiviyShowProto) Reset()                    { *m = ActiviyShowProto{} }
func (m *ActiviyShowProto) String() string            { return proto.CompactTextString(m) }
func (*ActiviyShowProto) ProtoMessage()               {}
func (*ActiviyShowProto) Descriptor() ([]byte, []int) { return fileDescriptorActivity, []int{5} }

func (m *ActiviyShowProto) GetData() *ActivityShowDataProto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ActiviyShowProto) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func init() {
	proto.RegisterType((*HeroAllCollectionProto)(nil), "proto.HeroAllCollectionProto")
	proto.RegisterType((*HeroCollectionProto)(nil), "proto.HeroCollectionProto")
	proto.RegisterType((*ActivityCollectionProto)(nil), "proto.ActivityCollectionProto")
	proto.RegisterType((*ActivityTaskListModeProto)(nil), "proto.ActivityTaskListModeProto")
	proto.RegisterType((*HeroActivityTaskListModeProto)(nil), "proto.HeroActivityTaskListModeProto")
	proto.RegisterType((*ActiviyShowProto)(nil), "proto.ActiviyShowProto")
}
func (m *HeroAllCollectionProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroAllCollectionProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Collections) > 0 {
		for _, msg := range m.Collections {
			dAtA[i] = 0xa
			i++
			i = encodeVarintActivity(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *HeroCollectionProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroCollectionProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
	}
	if len(m.ExchangeTimes) > 0 {
		for _, msg := range m.ExchangeTimes {
			dAtA[i] = 0x12
			i++
			i = encodeVarintActivity(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *ActivityCollectionProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityCollectionProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.Data.Size()))
		n1, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.EndTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.EndTime))
	}
	return i, nil
}

func (m *ActivityTaskListModeProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivityTaskListModeProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.Data.Size()))
		n2, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.EndTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.EndTime))
	}
	return i, nil
}

func (m *HeroActivityTaskListModeProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeroActivityTaskListModeProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.Id))
	}
	if len(m.Progress) > 0 {
		for _, msg := range m.Progress {
			dAtA[i] = 0x12
			i++
			i = encodeVarintActivity(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Collected) > 0 {
		for _, num := range m.Collected {
			dAtA[i] = 0x18
			i++
			i = encodeVarintActivity(dAtA, i, uint64(num))
		}
	}
	return i, nil
}

func (m *ActiviyShowProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiviyShowProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.Data.Size()))
		n3, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.EndTime != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintActivity(dAtA, i, uint64(m.EndTime))
	}
	return i, nil
}

func encodeFixed64Activity(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Activity(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintActivity(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *HeroAllCollectionProto) Size() (n int) {
	var l int
	_ = l
	if len(m.Collections) > 0 {
		for _, e := range m.Collections {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *HeroCollectionProto) Size() (n int) {
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	if len(m.ExchangeTimes) > 0 {
		for _, e := range m.ExchangeTimes {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	return n
}

func (m *ActivityCollectionProto) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	if m.EndTime != 0 {
		n += 1 + sovActivity(uint64(m.EndTime))
	}
	return n
}

func (m *ActivityTaskListModeProto) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	if m.EndTime != 0 {
		n += 1 + sovActivity(uint64(m.EndTime))
	}
	return n
}

func (m *HeroActivityTaskListModeProto) Size() (n int) {
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovActivity(uint64(m.Id))
	}
	if len(m.Progress) > 0 {
		for _, e := range m.Progress {
			l = e.Size()
			n += 1 + l + sovActivity(uint64(l))
		}
	}
	if len(m.Collected) > 0 {
		for _, e := range m.Collected {
			n += 1 + sovActivity(uint64(e))
		}
	}
	return n
}

func (m *ActiviyShowProto) Size() (n int) {
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovActivity(uint64(l))
	}
	if m.EndTime != 0 {
		n += 1 + sovActivity(uint64(m.EndTime))
	}
	return n
}

func sovActivity(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozActivity(x uint64) (n int) {
	return sovActivity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HeroAllCollectionProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroAllCollectionProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroAllCollectionProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collections", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Collections = append(m.Collections, &HeroCollectionProto{})
			if err := m.Collections[len(m.Collections)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroCollectionProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroCollectionProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroCollectionProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExchangeTimes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExchangeTimes = append(m.ExchangeTimes, &Int32Pair{})
			if err := m.ExchangeTimes[len(m.ExchangeTimes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityCollectionProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityCollectionProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityCollectionProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ActivityCollectionDataProto{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivityTaskListModeProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivityTaskListModeProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivityTaskListModeProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ActivityTaskListModeDataProto{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeroActivityTaskListModeProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeroActivityTaskListModeProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeroActivityTaskListModeProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Progress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Progress = append(m.Progress, &Int32Pair{})
			if err := m.Progress[len(m.Progress)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Collected = append(m.Collected, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthActivity
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowActivity
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Collected = append(m.Collected, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Collected", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiviyShowProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiviyShowProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiviyShowProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthActivity
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ActivityShowDataProto{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipActivity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthActivity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipActivity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowActivity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowActivity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthActivity
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowActivity
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipActivity(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthActivity = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowActivity   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/lightpaw/male7/pb/shared_proto/activity.proto", fileDescriptorActivity)
}

var fileDescriptorActivity = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4e, 0xe2, 0x40,
	0x1c, 0xc7, 0x69, 0x59, 0x76, 0xd9, 0x61, 0x97, 0x90, 0x9a, 0x68, 0x21, 0xda, 0x34, 0x8d, 0x07,
	0x0e, 0x86, 0x1a, 0x30, 0x42, 0x8c, 0x17, 0xd0, 0x03, 0x26, 0x9a, 0x90, 0x4a, 0x3c, 0x78, 0xb0,
	0x99, 0x76, 0xc6, 0x76, 0x62, 0xe9, 0x34, 0xed, 0x28, 0x72, 0xf2, 0x35, 0x7c, 0x24, 0x8f, 0x3e,
	0x82, 0xc1, 0x17, 0x31, 0x9d, 0x16, 0x84, 0x2a, 0x09, 0x9e, 0x26, 0x9d, 0x7c, 0xbe, 0xf3, 0xf9,
	0xfd, 0x29, 0xe8, 0x38, 0x84, 0xb9, 0xf7, 0x56, 0xc3, 0xa6, 0x23, 0xdd, 0x23, 0x8e, 0xcb, 0x02,
	0x38, 0xd6, 0x47, 0xd0, 0xc3, 0x6d, 0x3d, 0xb0, 0xf4, 0xc8, 0x85, 0x21, 0x46, 0x66, 0x10, 0x52,
	0x46, 0x75, 0x68, 0x33, 0xf2, 0x40, 0xd8, 0xa4, 0xc1, 0x3f, 0xa5, 0x02, 0x3f, 0x6a, 0x07, 0xeb,
	0x3f, 0x60, 0xc1, 0x08, 0x27, 0xe1, 0xda, 0xd1, 0xfa, 0x29, 0x9b, 0xfa, 0xb7, 0xc4, 0x31, 0x1d,
	0xec, 0x27, 0x59, 0xed, 0x0a, 0x6c, 0xf6, 0x71, 0x48, 0xbb, 0x9e, 0x77, 0x42, 0x3d, 0x0f, 0xdb,
	0x8c, 0x50, 0x7f, 0xc0, 0x4b, 0x3a, 0x06, 0x25, 0x7b, 0x7e, 0x15, 0xc9, 0x82, 0x9a, 0xaf, 0x97,
	0x9a, 0xb5, 0x24, 0xd6, 0x88, 0x33, 0x99, 0x80, 0xb1, 0x88, 0x6b, 0x37, 0x60, 0xe3, 0x1b, 0x46,
	0x2a, 0x03, 0x91, 0x20, 0x59, 0x50, 0x85, 0x7a, 0xc1, 0x10, 0x09, 0x92, 0xda, 0xa0, 0x8c, 0x1f,
	0x6d, 0x17, 0xfa, 0x0e, 0x36, 0x19, 0x19, 0xe1, 0x48, 0x16, 0xb9, 0xa7, 0x92, 0x7a, 0xce, 0x7c,
	0xd6, 0x6a, 0x0e, 0x20, 0x09, 0x8d, 0xff, 0x33, 0x6e, 0x18, 0x63, 0x9a, 0x07, 0xb6, 0xba, 0xe9,
	0x08, 0xb3, 0x8e, 0x43, 0xf0, 0x0b, 0x41, 0x06, 0xb9, 0xa5, 0xd4, 0xd4, 0xd2, 0x97, 0xbe, 0xd2,
	0xa7, 0x90, 0xc1, 0xa4, 0x72, 0xce, 0x4b, 0x55, 0x50, 0xc4, 0x3e, 0xe2, 0x65, 0xc8, 0x22, 0xaf,
	0xf0, 0x0f, 0xf6, 0x51, 0xac, 0xd3, 0x02, 0x50, 0x9d, 0xe5, 0x87, 0x30, 0xba, 0x3b, 0x27, 0x11,
	0xbb, 0xa0, 0x08, 0x27, 0xbe, 0xce, 0x92, 0x6f, 0x37, 0xe3, 0x5b, 0xe4, 0x7f, 0x60, 0x7c, 0x02,
	0x3b, 0x7c, 0x2f, 0x2b, 0xad, 0xd9, 0x49, 0xee, 0x81, 0x62, 0x10, 0x52, 0x27, 0xc4, 0xd1, 0xea,
	0x19, 0xce, 0x09, 0x49, 0x05, 0x7f, 0xd3, 0x6d, 0x61, 0x24, 0xe7, 0xd5, 0x7c, 0xbd, 0xd0, 0x13,
	0x2b, 0x39, 0xe3, 0xf3, 0x52, 0x33, 0x41, 0x25, 0x91, 0x4f, 0x2e, 0x5d, 0x3a, 0x4e, 0x9c, 0xfb,
	0x4b, 0x9d, 0x6e, 0x67, 0x3a, 0x8d, 0xb9, 0xf5, 0x3b, 0xec, 0xa9, 0x2f, 0x53, 0x45, 0x78, 0x9d,
	0x2a, 0xc2, 0xdb, 0x54, 0x11, 0x9e, 0xdf, 0x95, 0x5c, 0x5f, 0xb8, 0xfe, 0xb7, 0xf8, 0xb3, 0x5a,
	0xbf, 0xf9, 0xd1, 0xfa, 0x08, 0x00, 0x00, 0xff, 0xff, 0x43, 0xf6, 0xd7, 0xcf, 0x57, 0x03, 0x00,
	0x00,
}
