// Code generated by protoc-gen-go.
// source: CMessage.proto
// DO NOT EDIT!

/*
Package conData is a generated protocol buffer package.

It is generated from these files:
	CMessage.proto

It has these top-level messages:
	SystemData
	MapStatusDatas
	MapStatusData
	MapResData
	MapResDatas
	OnlineData
	OnlineDatas
	PlayerData
	ItemData
	AddItemData
	ItemDatas
	DragonData
	DragonDatas
	FairyData
	FairyDatas
	HeroData
	HeroDatas
	ResData
	ResDatas
	LogStruct
	LogStructs
	ServerData
	ServerDatas
	SysData
	BlackShopData
	DiamondData
	ReqItemDatas
	ReqItemData
	ReqHeroData
	ReqPlayerData
	ReqFormationData
*/
package conData

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SystemData struct {
	SCpu        float32 `protobuf:"fixed32,1,opt,name=SCpu,json=sCpu" json:"SCpu,omitempty"`
	SMemUse     int64   `protobuf:"varint,2,opt,name=SMem_use,json=sMemUse" json:"SMem_use,omitempty"`
	SMemFree    int64   `protobuf:"varint,3,opt,name=SMem_free,json=sMemFree" json:"SMem_free,omitempty"`
	SMemPercent float32 `protobuf:"fixed32,4,opt,name=SMem_percent,json=sMemPercent" json:"SMem_percent,omitempty"`
}

func (m *SystemData) Reset()                    { *m = SystemData{} }
func (m *SystemData) String() string            { return proto.CompactTextString(m) }
func (*SystemData) ProtoMessage()               {}
func (*SystemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MapStatusDatas struct {
	SId  int32            `protobuf:"varint,1,opt,name=SId,json=sId" json:"SId,omitempty"`
	MSTD []*MapStatusData `protobuf:"bytes,2,rep,name=MSTD,json=mSTD" json:"MSTD,omitempty"`
}

func (m *MapStatusDatas) Reset()                    { *m = MapStatusDatas{} }
func (m *MapStatusDatas) String() string            { return proto.CompactTextString(m) }
func (*MapStatusDatas) ProtoMessage()               {}
func (*MapStatusDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MapStatusDatas) GetMSTD() []*MapStatusData {
	if m != nil {
		return m.MSTD
	}
	return nil
}

type MapStatusData struct {
	MapId       int32 `protobuf:"varint,1,opt,name=MapId,json=mapId" json:"MapId,omitempty"`
	MapLv       int32 `protobuf:"varint,2,opt,name=MapLv,json=mapLv" json:"MapLv,omitempty"`
	MapNum      int32 `protobuf:"varint,3,opt,name=MapNum,json=mapNum" json:"MapNum,omitempty"`
	MapTotalNum int32 `protobuf:"varint,4,opt,name=MapTotalNum,json=mapTotalNum" json:"MapTotalNum,omitempty"`
}

func (m *MapStatusData) Reset()                    { *m = MapStatusData{} }
func (m *MapStatusData) String() string            { return proto.CompactTextString(m) }
func (*MapStatusData) ProtoMessage()               {}
func (*MapStatusData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MapResData struct {
	MRId     int32  `protobuf:"varint,1,opt,name=MRId,json=mRId" json:"MRId,omitempty"`
	MRBaId   int32  `protobuf:"varint,2,opt,name=MRBaId,json=mRBaId" json:"MRBaId,omitempty"`
	MRName   string `protobuf:"bytes,3,opt,name=MRName,json=mRName" json:"MRName,omitempty"`
	MRType   int32  `protobuf:"varint,4,opt,name=MRType,json=mRType" json:"MRType,omitempty"`
	MRX      int32  `protobuf:"varint,5,opt,name=MRX,json=mRX" json:"MRX,omitempty"`
	MRY      int32  `protobuf:"varint,6,opt,name=MRY,json=mRY" json:"MRY,omitempty"`
	MRStatus int32  `protobuf:"varint,7,opt,name=MRStatus,json=mRStatus" json:"MRStatus,omitempty"`
	MRTime   int32  `protobuf:"varint,8,opt,name=MRTime,json=mRTime" json:"MRTime,omitempty"`
	MRSpec   string `protobuf:"bytes,9,opt,name=MRSpec,json=mRSpec" json:"MRSpec,omitempty"`
}

func (m *MapResData) Reset()                    { *m = MapResData{} }
func (m *MapResData) String() string            { return proto.CompactTextString(m) }
func (*MapResData) ProtoMessage()               {}
func (*MapResData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type MapResDatas struct {
	MapId int32         `protobuf:"varint,1,opt,name=MapId,json=mapId" json:"MapId,omitempty"`
	REDS  []*MapResData `protobuf:"bytes,2,rep,name=REDS,json=rEDS" json:"REDS,omitempty"`
}

func (m *MapResDatas) Reset()                    { *m = MapResDatas{} }
func (m *MapResDatas) String() string            { return proto.CompactTextString(m) }
func (*MapResDatas) ProtoMessage()               {}
func (*MapResDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MapResDatas) GetREDS() []*MapResData {
	if m != nil {
		return m.REDS
	}
	return nil
}

type OnlineData struct {
	OnlineTime string `protobuf:"bytes,1,opt,name=OnlineTime,json=onlineTime" json:"OnlineTime,omitempty"`
	OnlineNum  int32  `protobuf:"varint,2,opt,name=OnlineNum,json=onlineNum" json:"OnlineNum,omitempty"`
}

func (m *OnlineData) Reset()                    { *m = OnlineData{} }
func (m *OnlineData) String() string            { return proto.CompactTextString(m) }
func (*OnlineData) ProtoMessage()               {}
func (*OnlineData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type OnlineDatas struct {
	Datas []*OnlineData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *OnlineDatas) Reset()                    { *m = OnlineDatas{} }
func (m *OnlineDatas) String() string            { return proto.CompactTextString(m) }
func (*OnlineDatas) ProtoMessage()               {}
func (*OnlineDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OnlineDatas) GetDatas() []*OnlineData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type PlayerData struct {
	PlayerID                int32  `protobuf:"varint,1,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	PlayerName              string `protobuf:"bytes,2,opt,name=PlayerName,json=playerName" json:"PlayerName,omitempty"`
	PlayerLv                int32  `protobuf:"varint,3,opt,name=PlayerLv,json=playerLv" json:"PlayerLv,omitempty"`
	PlayerExp               int32  `protobuf:"varint,4,opt,name=PlayerExp,json=playerExp" json:"PlayerExp,omitempty"`
	PlayerVip               int32  `protobuf:"varint,5,opt,name=PlayerVip,json=playerVip" json:"PlayerVip,omitempty"`
	PlayerMoveAction        int32  `protobuf:"varint,6,opt,name=PlayerMoveAction,json=playerMoveAction" json:"PlayerMoveAction,omitempty"`
	PlayerReserveSoldier    int32  `protobuf:"varint,7,opt,name=PlayerReserveSoldier,json=playerReserveSoldier" json:"PlayerReserveSoldier,omitempty"`
	PlayerWoundedSoldierNum int32  `protobuf:"varint,8,opt,name=PlayerWoundedSoldierNum,json=playerWoundedSoldierNum" json:"PlayerWoundedSoldierNum,omitempty"`
}

func (m *PlayerData) Reset()                    { *m = PlayerData{} }
func (m *PlayerData) String() string            { return proto.CompactTextString(m) }
func (*PlayerData) ProtoMessage()               {}
func (*PlayerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ItemData struct {
	ID       string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	ItemID   int32  `protobuf:"varint,2,opt,name=ItemID,json=itemID" json:"ItemID,omitempty"`
	ItemName string `protobuf:"bytes,3,opt,name=ItemName,json=itemName" json:"ItemName,omitempty"`
	ItemNum  int32  `protobuf:"varint,4,opt,name=ItemNum,json=itemNum" json:"ItemNum,omitempty"`
}

func (m *ItemData) Reset()                    { *m = ItemData{} }
func (m *ItemData) String() string            { return proto.CompactTextString(m) }
func (*ItemData) ProtoMessage()               {}
func (*ItemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type AddItemData struct {
	ItemID   int32 `protobuf:"varint,1,opt,name=ItemID,json=itemID" json:"ItemID,omitempty"`
	ItemNum  int32 `protobuf:"varint,2,opt,name=ItemNum,json=itemNum" json:"ItemNum,omitempty"`
	PlayerID int32 `protobuf:"varint,3,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	ServerID int32 `protobuf:"varint,4,opt,name=ServerID,json=serverID" json:"ServerID,omitempty"`
}

func (m *AddItemData) Reset()                    { *m = AddItemData{} }
func (m *AddItemData) String() string            { return proto.CompactTextString(m) }
func (*AddItemData) ProtoMessage()               {}
func (*AddItemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type ItemDatas struct {
	Datas []*ItemData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *ItemDatas) Reset()                    { *m = ItemDatas{} }
func (m *ItemDatas) String() string            { return proto.CompactTextString(m) }
func (*ItemDatas) ProtoMessage()               {}
func (*ItemDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ItemDatas) GetDatas() []*ItemData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type DragonData struct {
	ID           string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	DragonID     int32  `protobuf:"varint,2,opt,name=DragonID,json=dragonID" json:"DragonID,omitempty"`
	DragonName   string `protobuf:"bytes,3,opt,name=DragonName,json=dragonName" json:"DragonName,omitempty"`
	DragonQua    int32  `protobuf:"varint,4,opt,name=DragonQua,json=dragonQua" json:"DragonQua,omitempty"`
	DragonEquips string `protobuf:"bytes,5,opt,name=DragonEquips,json=dragonEquips" json:"DragonEquips,omitempty"`
	DragonLv     int32  `protobuf:"varint,6,opt,name=DragonLv,json=dragonLv" json:"DragonLv,omitempty"`
	DragonExp    int32  `protobuf:"varint,7,opt,name=DragonExp,json=dragonExp" json:"DragonExp,omitempty"`
	DragonSkills string `protobuf:"bytes,8,opt,name=DragonSkills,json=dragonSkills" json:"DragonSkills,omitempty"`
}

func (m *DragonData) Reset()                    { *m = DragonData{} }
func (m *DragonData) String() string            { return proto.CompactTextString(m) }
func (*DragonData) ProtoMessage()               {}
func (*DragonData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type DragonDatas struct {
	Datas []*DragonData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *DragonDatas) Reset()                    { *m = DragonDatas{} }
func (m *DragonDatas) String() string            { return proto.CompactTextString(m) }
func (*DragonDatas) ProtoMessage()               {}
func (*DragonDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DragonDatas) GetDatas() []*DragonData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type FairyData struct {
	ID         string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	FairyID    int32  `protobuf:"varint,2,opt,name=FairyID,json=fairyID" json:"FairyID,omitempty"`
	FairyName  string `protobuf:"bytes,3,opt,name=FairyName,json=fairyName" json:"FairyName,omitempty"`
	FairyLv    int32  `protobuf:"varint,4,opt,name=FairyLv,json=fairyLv" json:"FairyLv,omitempty"`
	FairyStar  int32  `protobuf:"varint,5,opt,name=FairyStar,json=fairyStar" json:"FairyStar,omitempty"`
	FairyEquip int32  `protobuf:"varint,6,opt,name=FairyEquip,json=fairyEquip" json:"FairyEquip,omitempty"`
}

func (m *FairyData) Reset()                    { *m = FairyData{} }
func (m *FairyData) String() string            { return proto.CompactTextString(m) }
func (*FairyData) ProtoMessage()               {}
func (*FairyData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type FairyDatas struct {
	Datas []*FairyData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *FairyDatas) Reset()                    { *m = FairyDatas{} }
func (m *FairyDatas) String() string            { return proto.CompactTextString(m) }
func (*FairyDatas) ProtoMessage()               {}
func (*FairyDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *FairyDatas) GetDatas() []*FairyData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type HeroData struct {
	ID         string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	HeroID     int32  `protobuf:"varint,2,opt,name=HeroID,json=heroID" json:"HeroID,omitempty"`
	HeroName   string `protobuf:"bytes,3,opt,name=HeroName,json=heroName" json:"HeroName,omitempty"`
	HeroLv     int32  `protobuf:"varint,4,opt,name=HeroLv,json=heroLv" json:"HeroLv,omitempty"`
	HeroStar   int32  `protobuf:"varint,5,opt,name=HeroStar,json=heroStar" json:"HeroStar,omitempty"`
	HeroEquips string `protobuf:"bytes,6,opt,name=HeroEquips,json=heroEquips" json:"HeroEquips,omitempty"`
	SoldierId  int32  `protobuf:"varint,7,opt,name=SoldierId,json=soldierId" json:"SoldierId,omitempty"`
	SoldierNum int32  `protobuf:"varint,8,opt,name=SoldierNum,json=soldierNum" json:"SoldierNum,omitempty"`
}

func (m *HeroData) Reset()                    { *m = HeroData{} }
func (m *HeroData) String() string            { return proto.CompactTextString(m) }
func (*HeroData) ProtoMessage()               {}
func (*HeroData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type HeroDatas struct {
	Datas []*HeroData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *HeroDatas) Reset()                    { *m = HeroDatas{} }
func (m *HeroDatas) String() string            { return proto.CompactTextString(m) }
func (*HeroDatas) ProtoMessage()               {}
func (*HeroDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *HeroDatas) GetDatas() []*HeroData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type ResData struct {
	ID      string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	ResID   int32  `protobuf:"varint,2,opt,name=ResID,json=resID" json:"ResID,omitempty"`
	ResType int32  `protobuf:"varint,3,opt,name=ResType,json=resType" json:"ResType,omitempty"`
	ResName string `protobuf:"bytes,4,opt,name=ResName,json=resName" json:"ResName,omitempty"`
	ResX    int32  `protobuf:"varint,5,opt,name=ResX,json=resX" json:"ResX,omitempty"`
	ResY    int32  `protobuf:"varint,6,opt,name=ResY,json=resY" json:"ResY,omitempty"`
}

func (m *ResData) Reset()                    { *m = ResData{} }
func (m *ResData) String() string            { return proto.CompactTextString(m) }
func (*ResData) ProtoMessage()               {}
func (*ResData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type ResDatas struct {
	Datas []*ResData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *ResDatas) Reset()                    { *m = ResDatas{} }
func (m *ResDatas) String() string            { return proto.CompactTextString(m) }
func (*ResDatas) ProtoMessage()               {}
func (*ResDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ResDatas) GetDatas() []*ResData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type LogStruct struct {
	LogTime   string `protobuf:"bytes,1,opt,name=LogTime,json=logTime" json:"LogTime,omitempty"`
	LogDetail string `protobuf:"bytes,2,opt,name=LogDetail,json=logDetail" json:"LogDetail,omitempty"`
}

func (m *LogStruct) Reset()                    { *m = LogStruct{} }
func (m *LogStruct) String() string            { return proto.CompactTextString(m) }
func (*LogStruct) ProtoMessage()               {}
func (*LogStruct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type LogStructs struct {
	SId int32        `protobuf:"varint,1,opt,name=SId,json=sId" json:"SId,omitempty"`
	LSS []*LogStruct `protobuf:"bytes,2,rep,name=LSS,json=lSS" json:"LSS,omitempty"`
}

func (m *LogStructs) Reset()                    { *m = LogStructs{} }
func (m *LogStructs) String() string            { return proto.CompactTextString(m) }
func (*LogStructs) ProtoMessage()               {}
func (*LogStructs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *LogStructs) GetLSS() []*LogStruct {
	if m != nil {
		return m.LSS
	}
	return nil
}

type ServerData struct {
	SID      int32  `protobuf:"varint,1,opt,name=SID,json=sID" json:"SID,omitempty"`
	SName    string `protobuf:"bytes,2,opt,name=SName,json=sName" json:"SName,omitempty"`
	SType    int32  `protobuf:"varint,3,opt,name=SType,json=sType" json:"SType,omitempty"`
	SAddr    string `protobuf:"bytes,4,opt,name=SAddr,json=sAddr" json:"SAddr,omitempty"`
	SRpc     string `protobuf:"bytes,5,opt,name=SRpc,json=sRpc" json:"SRpc,omitempty"`
	SPprof   string `protobuf:"bytes,6,opt,name=SPprof,json=sPprof" json:"SPprof,omitempty"`
	SConnNum int32  `protobuf:"varint,7,opt,name=SConnNum,json=sConnNum" json:"SConnNum,omitempty"`
}

func (m *ServerData) Reset()                    { *m = ServerData{} }
func (m *ServerData) String() string            { return proto.CompactTextString(m) }
func (*ServerData) ProtoMessage()               {}
func (*ServerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type ServerDatas struct {
	Datas []*ServerData `protobuf:"bytes,1,rep,name=Datas,json=datas" json:"Datas,omitempty"`
}

func (m *ServerDatas) Reset()                    { *m = ServerDatas{} }
func (m *ServerDatas) String() string            { return proto.CompactTextString(m) }
func (*ServerDatas) ProtoMessage()               {}
func (*ServerDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ServerDatas) GetDatas() []*ServerData {
	if m != nil {
		return m.Datas
	}
	return nil
}

type SysData struct {
	SID    int32             `protobuf:"varint,1,opt,name=SID,json=sID" json:"SID,omitempty"`
	SDatas map[string]string `protobuf:"bytes,2,rep,name=SDatas,json=sDatas" json:"SDatas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SysData) Reset()                    { *m = SysData{} }
func (m *SysData) String() string            { return proto.CompactTextString(m) }
func (*SysData) ProtoMessage()               {}
func (*SysData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *SysData) GetSDatas() map[string]string {
	if m != nil {
		return m.SDatas
	}
	return nil
}

type BlackShopData struct {
	PlayerID  int32           `protobuf:"varint,1,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	ShopID    int32           `protobuf:"varint,2,opt,name=ShopID,json=shopID" json:"ShopID,omitempty"`
	IsSuccess bool            `protobuf:"varint,3,opt,name=IsSuccess,json=isSuccess" json:"IsSuccess,omitempty"`
	MyPrice   int32           `protobuf:"varint,4,opt,name=MyPrice,json=myPrice" json:"MyPrice,omitempty"`
	BuyPrice  int32           `protobuf:"varint,5,opt,name=BuyPrice,json=buyPrice" json:"BuyPrice,omitempty"`
	Items     map[int32]int32 `protobuf:"bytes,6,rep,name=Items,json=items" json:"Items,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BlackShopData) Reset()                    { *m = BlackShopData{} }
func (m *BlackShopData) String() string            { return proto.CompactTextString(m) }
func (*BlackShopData) ProtoMessage()               {}
func (*BlackShopData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *BlackShopData) GetItems() map[int32]int32 {
	if m != nil {
		return m.Items
	}
	return nil
}

type DiamondData struct {
	PlayerID int32 `protobuf:"varint,1,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	Price    int32 `protobuf:"varint,2,opt,name=Price,json=price" json:"Price,omitempty"`
}

func (m *DiamondData) Reset()                    { *m = DiamondData{} }
func (m *DiamondData) String() string            { return proto.CompactTextString(m) }
func (*DiamondData) ProtoMessage()               {}
func (*DiamondData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ReqItemDatas struct {
	PlayerID  int32          `protobuf:"varint,1,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	Datas     []*ReqItemData `protobuf:"bytes,2,rep,name=Datas,json=datas" json:"Datas,omitempty"`
	HeroDatas []*ReqHeroData `protobuf:"bytes,3,rep,name=HeroDatas,json=heroDatas" json:"HeroDatas,omitempty"`
}

func (m *ReqItemDatas) Reset()                    { *m = ReqItemDatas{} }
func (m *ReqItemDatas) String() string            { return proto.CompactTextString(m) }
func (*ReqItemDatas) ProtoMessage()               {}
func (*ReqItemDatas) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ReqItemDatas) GetDatas() []*ReqItemData {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ReqItemDatas) GetHeroDatas() []*ReqHeroData {
	if m != nil {
		return m.HeroDatas
	}
	return nil
}

type ReqItemData struct {
	ItemID  int32 `protobuf:"varint,1,opt,name=ItemID,json=itemID" json:"ItemID,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum,json=itemNum" json:"ItemNum,omitempty"`
}

func (m *ReqItemData) Reset()                    { *m = ReqItemData{} }
func (m *ReqItemData) String() string            { return proto.CompactTextString(m) }
func (*ReqItemData) ProtoMessage()               {}
func (*ReqItemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type ReqHeroData struct {
	HeroID  string `protobuf:"bytes,1,opt,name=HeroID,json=heroID" json:"HeroID,omitempty"`
	HeroPos int32  `protobuf:"varint,2,opt,name=HeroPos,json=heroPos" json:"HeroPos,omitempty"`
}

func (m *ReqHeroData) Reset()                    { *m = ReqHeroData{} }
func (m *ReqHeroData) String() string            { return proto.CompactTextString(m) }
func (*ReqHeroData) ProtoMessage()               {}
func (*ReqHeroData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

type ReqPlayerData struct {
	SID       int32 `protobuf:"varint,1,opt,name=SID,json=sID" json:"SID,omitempty"`
	PlayerID  int32 `protobuf:"varint,2,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	ItemID    int32 `protobuf:"varint,3,opt,name=ItemID,json=itemID" json:"ItemID,omitempty"`
	ItemValue int32 `protobuf:"varint,4,opt,name=ItemValue,json=itemValue" json:"ItemValue,omitempty"`
}

func (m *ReqPlayerData) Reset()                    { *m = ReqPlayerData{} }
func (m *ReqPlayerData) String() string            { return proto.CompactTextString(m) }
func (*ReqPlayerData) ProtoMessage()               {}
func (*ReqPlayerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type ReqFormationData struct {
	PlayerID         int32  `protobuf:"varint,1,opt,name=PlayerID,json=playerID" json:"PlayerID,omitempty"`
	HeroData         string `protobuf:"bytes,2,opt,name=HeroData,json=heroData" json:"HeroData,omitempty"`
	DragonID         int32  `protobuf:"varint,3,opt,name=DragonID,json=dragonID" json:"DragonID,omitempty"`
	HeroSkillPoses   string `protobuf:"bytes,4,opt,name=HeroSkillPoses,json=heroSkillPoses" json:"HeroSkillPoses,omitempty"`
	DragonSkillPoses string `protobuf:"bytes,5,opt,name=DragonSkillPoses,json=dragonSkillPoses" json:"DragonSkillPoses,omitempty"`
}

func (m *ReqFormationData) Reset()                    { *m = ReqFormationData{} }
func (m *ReqFormationData) String() string            { return proto.CompactTextString(m) }
func (*ReqFormationData) ProtoMessage()               {}
func (*ReqFormationData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func init() {
	proto.RegisterType((*SystemData)(nil), "conData.SystemData")
	proto.RegisterType((*MapStatusDatas)(nil), "conData.MapStatusDatas")
	proto.RegisterType((*MapStatusData)(nil), "conData.MapStatusData")
	proto.RegisterType((*MapResData)(nil), "conData.MapResData")
	proto.RegisterType((*MapResDatas)(nil), "conData.MapResDatas")
	proto.RegisterType((*OnlineData)(nil), "conData.OnlineData")
	proto.RegisterType((*OnlineDatas)(nil), "conData.OnlineDatas")
	proto.RegisterType((*PlayerData)(nil), "conData.PlayerData")
	proto.RegisterType((*ItemData)(nil), "conData.ItemData")
	proto.RegisterType((*AddItemData)(nil), "conData.AddItemData")
	proto.RegisterType((*ItemDatas)(nil), "conData.ItemDatas")
	proto.RegisterType((*DragonData)(nil), "conData.DragonData")
	proto.RegisterType((*DragonDatas)(nil), "conData.DragonDatas")
	proto.RegisterType((*FairyData)(nil), "conData.FairyData")
	proto.RegisterType((*FairyDatas)(nil), "conData.FairyDatas")
	proto.RegisterType((*HeroData)(nil), "conData.HeroData")
	proto.RegisterType((*HeroDatas)(nil), "conData.HeroDatas")
	proto.RegisterType((*ResData)(nil), "conData.ResData")
	proto.RegisterType((*ResDatas)(nil), "conData.ResDatas")
	proto.RegisterType((*LogStruct)(nil), "conData.LogStruct")
	proto.RegisterType((*LogStructs)(nil), "conData.LogStructs")
	proto.RegisterType((*ServerData)(nil), "conData.ServerData")
	proto.RegisterType((*ServerDatas)(nil), "conData.ServerDatas")
	proto.RegisterType((*SysData)(nil), "conData.SysData")
	proto.RegisterType((*BlackShopData)(nil), "conData.BlackShopData")
	proto.RegisterType((*DiamondData)(nil), "conData.DiamondData")
	proto.RegisterType((*ReqItemDatas)(nil), "conData.ReqItemDatas")
	proto.RegisterType((*ReqItemData)(nil), "conData.ReqItemData")
	proto.RegisterType((*ReqHeroData)(nil), "conData.ReqHeroData")
	proto.RegisterType((*ReqPlayerData)(nil), "conData.ReqPlayerData")
	proto.RegisterType((*ReqFormationData)(nil), "conData.ReqFormationData")
}

func init() { proto.RegisterFile("CMessage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x57, 0xcf, 0x6e, 0xdb, 0xc6,
	0x13, 0x06, 0x25, 0x51, 0x22, 0x47, 0x8e, 0xe1, 0x1f, 0x7f, 0x46, 0xc2, 0xba, 0x41, 0xe1, 0x10,
	0x45, 0xe2, 0xe6, 0xe0, 0x83, 0x1b, 0xb4, 0x6e, 0x2f, 0x45, 0x62, 0x39, 0xa8, 0x0a, 0x31, 0x75,
	0x97, 0x6e, 0x9a, 0x9c, 0x0a, 0x46, 0x5c, 0x5b, 0x44, 0x44, 0x71, 0xcd, 0x95, 0xd4, 0x08, 0x7d,
	0x83, 0xb4, 0x0f, 0x52, 0xa0, 0x6f, 0x90, 0x27, 0xe9, 0xb1, 0x8f, 0xd1, 0x63, 0x31, 0xbb, 0xb3,
	0x4b, 0xca, 0x76, 0x1c, 0xf4, 0xa6, 0xef, 0xfb, 0xb8, 0xb3, 0x3b, 0xdf, 0xcc, 0xfe, 0x11, 0x6c,
	0x1e, 0xc5, 0x5c, 0xca, 0xf4, 0x9c, 0xef, 0x8b, 0xaa, 0x9c, 0x97, 0x41, 0x6f, 0x5c, 0xce, 0x06,
	0xe9, 0x3c, 0x8d, 0x7e, 0x05, 0x48, 0x56, 0x72, 0xce, 0x0b, 0x44, 0x41, 0x00, 0x9d, 0xe4, 0x48,
	0x2c, 0x42, 0x67, 0xd7, 0xd9, 0x6b, 0xb1, 0x8e, 0x3c, 0x12, 0x8b, 0xe0, 0x23, 0xf0, 0x92, 0x98,
	0x17, 0x3f, 0x2f, 0x24, 0x0f, 0x5b, 0xbb, 0xce, 0x5e, 0x9b, 0xf5, 0x64, 0xcc, 0x8b, 0x1f, 0x25,
	0x0f, 0x3e, 0x06, 0x5f, 0x49, 0x67, 0x15, 0xe7, 0x61, 0x5b, 0x69, 0x1e, 0x6a, 0x4f, 0x2b, 0xce,
	0x83, 0x7b, 0xb0, 0xa1, 0x44, 0xc1, 0xab, 0x31, 0x9f, 0xcd, 0xc3, 0x8e, 0x8a, 0xd9, 0x47, 0xfd,
	0x44, 0x53, 0xd1, 0x33, 0xd8, 0x8c, 0x53, 0x91, 0xcc, 0xd3, 0xf9, 0x42, 0xe2, 0xfc, 0x32, 0xd8,
	0x82, 0x76, 0x32, 0xcc, 0xd4, 0xfc, 0x2e, 0x6b, 0xcb, 0x61, 0x16, 0x3c, 0x84, 0x4e, 0x9c, 0x9c,
	0x0e, 0xc2, 0xd6, 0x6e, 0x7b, 0xaf, 0x7f, 0x70, 0x7b, 0x9f, 0x16, 0xbe, 0xbf, 0x36, 0x90, 0x75,
	0x8a, 0xe4, 0x74, 0x10, 0x2d, 0xe0, 0xd6, 0x1a, 0x1d, 0x6c, 0x83, 0x1b, 0xa7, 0xc2, 0x06, 0x74,
	0x0b, 0x04, 0xc4, 0x8e, 0x96, 0x2a, 0x1d, 0xcd, 0x8e, 0x96, 0xc1, 0x6d, 0xe8, 0xc6, 0xa9, 0x78,
	0xb6, 0x28, 0x54, 0x26, 0x2e, 0xeb, 0x16, 0x0a, 0x05, 0xbb, 0xd0, 0x8f, 0x53, 0x71, 0x5a, 0xce,
	0xd3, 0x29, 0x8a, 0x1d, 0x25, 0xf6, 0x8b, 0x9a, 0x8a, 0xfe, 0x72, 0x00, 0xe2, 0x54, 0x30, 0x2e,
	0x8d, 0x89, 0x31, 0xb3, 0x73, 0x76, 0x0a, 0x36, 0xcc, 0x54, 0x70, 0xf6, 0x24, 0x1d, 0x66, 0x34,
	0x67, 0xb7, 0x50, 0x48, 0xf3, 0xcf, 0xd2, 0x42, 0xdb, 0xe7, 0x23, 0x8f, 0x48, 0xf3, 0xa7, 0x2b,
	0xc1, 0x69, 0xbe, 0x6e, 0xa1, 0x10, 0xfa, 0x13, 0xb3, 0x17, 0xa1, 0xab, 0xfd, 0x29, 0xd8, 0x0b,
	0xcd, 0xbc, 0x0c, 0xbb, 0x86, 0x79, 0x19, 0xec, 0x80, 0x17, 0x33, 0x6d, 0x42, 0xd8, 0x53, 0xb4,
	0x57, 0x10, 0xa6, 0xb8, 0x79, 0xc1, 0x43, 0xcf, 0xc6, 0xcd, 0xcd, 0x7c, 0x89, 0xe0, 0xe3, 0xd0,
	0x37, 0xeb, 0x40, 0x14, 0x8d, 0x54, 0xf2, 0x94, 0x99, 0x7c, 0x8f, 0x9f, 0x0f, 0xa0, 0xc3, 0x8e,
	0x07, 0x09, 0x95, 0xe8, 0xff, 0xcd, 0x12, 0xd1, 0x48, 0xd6, 0xa9, 0x8e, 0x07, 0x49, 0xf4, 0x1d,
	0xc0, 0xf7, 0xb3, 0x69, 0x3e, 0xe3, 0xca, 0xa7, 0x4f, 0x0c, 0x52, 0xeb, 0x71, 0xd4, 0xbc, 0x50,
	0x5a, 0x26, 0xb8, 0x0b, 0xbe, 0xd6, 0xd1, 0x76, 0x6d, 0x9b, 0x5f, 0x1a, 0x22, 0x3a, 0x84, 0x7e,
	0x1d, 0x4b, 0x06, 0x9f, 0x81, 0xab, 0x7e, 0x84, 0xce, 0xa5, 0x45, 0xd4, 0x1f, 0x31, 0x37, 0xc3,
	0x2f, 0xa2, 0x77, 0x2d, 0x80, 0x93, 0x69, 0xba, 0xe2, 0x95, 0x5a, 0xc6, 0x0e, 0x78, 0x1a, 0x0d,
	0x07, 0x94, 0x96, 0x27, 0x08, 0xe3, 0x12, 0xb5, 0xa6, 0x4a, 0xd4, 0xd2, 0x4b, 0x14, 0x96, 0xa9,
	0xc7, 0x8e, 0x96, 0xd4, 0x35, 0x34, 0x76, 0xb4, 0xc4, 0xe5, 0x6b, 0xed, 0xf8, 0x8d, 0xa0, 0x2a,
	0xfa, 0xc2, 0x10, 0xb5, 0xfa, 0x3c, 0x17, 0x54, 0x4e, 0x52, 0x9f, 0xe7, 0x22, 0x78, 0x08, 0x5b,
	0x5a, 0x8d, 0xcb, 0x25, 0x7f, 0x3c, 0x9e, 0xe7, 0xe5, 0x8c, 0x2a, 0xbc, 0x25, 0x2e, 0xf1, 0xc1,
	0x01, 0x6c, 0xeb, 0x6f, 0x19, 0x97, 0xbc, 0x5a, 0xf2, 0xa4, 0x9c, 0x66, 0x39, 0xaf, 0xa8, 0xf4,
	0xdb, 0xe2, 0x1a, 0x2d, 0x38, 0x84, 0x3b, 0x7a, 0xcc, 0x4f, 0xe5, 0x62, 0x96, 0xf1, 0x8c, 0x78,
	0x34, 0x5a, 0xf7, 0xc5, 0x1d, 0x71, 0xbd, 0x1c, 0x4d, 0xc0, 0x1b, 0x9a, 0xd3, 0x62, 0x13, 0x5a,
	0xe4, 0x99, 0xcf, 0x5a, 0xf9, 0x00, 0x9b, 0x08, 0xb5, 0xe1, 0xc0, 0x34, 0x79, 0xae, 0x10, 0xba,
	0x84, 0x7c, 0xa3, 0xcd, 0xbd, 0x9c, 0x70, 0x10, 0x42, 0x4f, 0x69, 0x76, 0x67, 0xf5, 0x72, 0x0d,
	0xa3, 0x5f, 0xa0, 0xff, 0x38, 0xcb, 0xec, 0x64, 0x75, 0x70, 0x67, 0x2d, 0x78, 0x23, 0x40, 0x6b,
	0x2d, 0xc0, 0x5a, 0x61, 0xdb, 0x97, 0x0a, 0xbb, 0x03, 0x5e, 0x82, 0x86, 0xa0, 0xa6, 0xe7, 0xf5,
	0x24, 0xe1, 0xe8, 0x11, 0xf8, 0x66, 0x56, 0x19, 0x3c, 0x58, 0xef, 0xab, 0xff, 0xd9, 0xbe, 0x32,
	0x9f, 0x98, 0xae, 0xfa, 0xc7, 0x01, 0x18, 0x54, 0xe9, 0xb9, 0x96, 0xaf, 0x78, 0xb3, 0x03, 0x9e,
	0x56, 0xad, 0x3b, 0x5e, 0x46, 0x18, 0xbb, 0x4c, 0x6b, 0x0d, 0x87, 0x20, 0xb3, 0x0c, 0xf6, 0x8a,
	0xd6, 0x7f, 0x58, 0xa4, 0xa6, 0x93, 0x32, 0x43, 0x04, 0x11, 0x6c, 0x68, 0xf5, 0xf8, 0x62, 0x91,
	0x0b, 0xa9, 0x9a, 0xc9, 0x67, 0x1b, 0x59, 0x83, 0xab, 0x67, 0x1f, 0x2d, 0xa9, 0x8f, 0x68, 0x76,
	0xdd, 0xa7, 0x34, 0xfe, 0x8d, 0xa0, 0xa6, 0xa1, 0xe8, 0xd8, 0xa7, 0x36, 0x7a, 0xf2, 0x3a, 0x9f,
	0x4e, 0xa5, 0x6a, 0x0f, 0x1b, 0x5d, 0x73, 0xb8, 0x15, 0xeb, 0xcc, 0x6f, 0xd8, 0x8a, 0xf5, 0x47,
	0xc6, 0xb4, 0x3f, 0x1d, 0xf0, 0x9f, 0xa6, 0x79, 0xb5, 0xba, 0xd6, 0xb3, 0x10, 0x7a, 0x4a, 0xb4,
	0x96, 0xf5, 0xce, 0x34, 0xc4, 0x35, 0x2b, 0xa5, 0x61, 0x98, 0x7f, 0x66, 0x08, 0x3b, 0x6e, 0xb4,
	0x34, 0x3d, 0x75, 0xa6, 0xa1, 0x1d, 0x97, 0xcc, 0xd3, 0xca, 0xec, 0xba, 0x33, 0x43, 0x60, 0x1d,
	0x94, 0xaa, 0x4c, 0x23, 0x9f, 0xe0, 0xcc, 0x32, 0xd1, 0x17, 0xa4, 0xeb, 0x34, 0xf7, 0xd6, 0xd3,
	0x0c, 0x6c, 0x9a, 0xf6, 0x1b, 0x93, 0xe5, 0xdf, 0x0e, 0x78, 0xdf, 0xf2, 0xaa, 0x7c, 0xdf, 0xa6,
	0x41, 0xad, 0xde, 0x34, 0x13, 0x85, 0xb0, 0x64, 0xc8, 0x37, 0x37, 0xcd, 0x84, 0xb0, 0x19, 0x63,
	0xf3, 0x53, 0x63, 0x46, 0x4b, 0x33, 0xa6, 0x91, 0x9d, 0x1a, 0x63, 0x92, 0x43, 0x8d, 0x9a, 0xa4,
	0xab, 0x9b, 0x6c, 0x62, 0x19, 0xb4, 0x86, 0xb6, 0xf9, 0x30, 0x33, 0x6d, 0x20, 0x0d, 0x81, 0xa3,
	0xaf, 0x9c, 0x11, 0x20, 0xeb, 0x63, 0xe1, 0x11, 0xf8, 0x26, 0xc3, 0x1b, 0xf6, 0x8c, 0xf9, 0xc4,
	0x18, 0xf3, 0x9b, 0x03, 0x3d, 0x73, 0x6b, 0x5e, 0xf6, 0x65, 0x1b, 0x5c, 0xc6, 0xa5, 0xb5, 0xc5,
	0xad, 0x10, 0x60, 0x69, 0x19, 0x97, 0xea, 0x62, 0xd4, 0x5b, 0xba, 0x57, 0x69, 0x48, 0x8a, 0xb2,
	0xab, 0xa3, 0x82, 0xa0, 0xa2, 0xdc, 0x0a, 0xa0, 0xc3, 0xb8, 0x34, 0x97, 0x66, 0xa7, 0xe2, 0xf2,
	0x05, 0x71, 0xe6, 0xda, 0x44, 0xee, 0x65, 0x74, 0x00, 0x9e, 0xbd, 0xe8, 0xee, 0xaf, 0xa7, 0xb0,
	0x65, 0x53, 0x30, 0x17, 0x1a, 0x65, 0x70, 0x04, 0xfe, 0xa8, 0x3c, 0x4f, 0xe6, 0xd5, 0x62, 0x3c,
	0xc7, 0x25, 0x8c, 0xca, 0xf3, 0xc6, 0x6d, 0xd6, 0x9b, 0x6a, 0x88, 0xe6, 0x8e, 0xca, 0xf3, 0x01,
	0x9f, 0xa7, 0xf9, 0x94, 0xae, 0x11, 0x7f, 0x6a, 0x88, 0x68, 0x00, 0x60, 0x83, 0x5c, 0xf7, 0x04,
	0xfa, 0x14, 0xda, 0xa3, 0xc4, 0x5c, 0xaf, 0x75, 0x9f, 0xd9, 0x31, 0xac, 0x3d, 0x4d, 0x92, 0xe8,
	0x0f, 0x07, 0x40, 0x9f, 0x69, 0xca, 0x4f, 0x15, 0x66, 0x50, 0x87, 0x51, 0x8e, 0x26, 0x8d, 0x7b,
	0xcc, 0xd5, 0xee, 0x20, 0xdb, 0xf0, 0xd3, 0xd5, 0x6e, 0x22, 0xfb, 0x38, 0xcb, 0x2a, 0xf2, 0xd2,
	0x95, 0x08, 0xd4, 0xf3, 0x90, 0x89, 0x31, 0x1d, 0x31, 0x1d, 0xc9, 0xc4, 0x18, 0x7b, 0x31, 0x39,
	0x11, 0x55, 0x79, 0x46, 0x3d, 0xd5, 0x95, 0x0a, 0xa9, 0x13, 0xf6, 0xa8, 0x9c, 0xcd, 0xb0, 0x5f,
	0xe8, 0x15, 0x22, 0x09, 0xe3, 0x81, 0x51, 0xaf, 0xf4, 0x86, 0x03, 0xa3, 0xfe, 0xc8, 0xf8, 0xfd,
	0xbb, 0x03, 0xbd, 0x64, 0x25, 0xdf, 0x93, 0xe1, 0x23, 0xe8, 0x26, 0x3a, 0x92, 0xf6, 0xea, 0x6e,
	0x1d, 0x49, 0x8f, 0xd9, 0xd7, 0xf2, 0xf1, 0x6c, 0x5e, 0xad, 0x58, 0x57, 0xd7, 0x7a, 0xe7, 0x2b,
	0xe8, 0x37, 0x68, 0x0c, 0xfb, 0x9a, 0xaf, 0xa8, 0x82, 0xf8, 0x13, 0xcd, 0x58, 0xa6, 0xd3, 0x85,
	0x35, 0x4e, 0x81, 0xaf, 0x5b, 0x87, 0x4e, 0xf4, 0xb6, 0x05, 0xb7, 0x9e, 0x4c, 0xd3, 0xf1, 0xeb,
	0x64, 0x52, 0x8a, 0x0f, 0xbe, 0x26, 0xd0, 0xaa, 0x49, 0x29, 0xea, 0xad, 0x2e, 0x15, 0xc2, 0xee,
	0x18, 0xca, 0x64, 0x31, 0x1e, 0x73, 0x29, 0x55, 0x19, 0x3c, 0xe6, 0xe7, 0x86, 0xc0, 0xae, 0x8a,
	0x57, 0x27, 0x55, 0x3e, 0x36, 0x6f, 0xc1, 0x5e, 0xa1, 0x21, 0xce, 0xf5, 0x64, 0x41, 0x12, 0x6d,
	0xf7, 0x57, 0x84, 0x83, 0x2f, 0xc1, 0xc5, 0x1b, 0x0a, 0x77, 0x3a, 0x3a, 0x71, 0xcf, 0x3a, 0xb1,
	0xb6, 0x5c, 0x75, 0x8b, 0x91, 0x1d, 0x2e, 0xde, 0x9b, 0x72, 0xe7, 0x10, 0xa0, 0x26, 0x9b, 0x66,
	0xb8, 0xd7, 0x98, 0xe1, 0x36, 0xcd, 0xf8, 0x06, 0xfa, 0x83, 0x3c, 0x2d, 0xca, 0x59, 0xf6, 0x41,
	0x27, 0xb6, 0xc1, 0xd5, 0xcb, 0xa6, 0x20, 0x02, 0x41, 0xf4, 0xd6, 0x81, 0x0d, 0xc6, 0x2f, 0xea,
	0xcb, 0xf7, 0xa6, 0x10, 0x0f, 0x4d, 0xd3, 0xe8, 0x52, 0x6f, 0x37, 0x76, 0xe8, 0xc5, 0xa5, 0xbb,
	0x39, 0x38, 0x68, 0x9c, 0x4e, 0x61, 0xfb, 0xea, 0xf7, 0xf6, 0x5c, 0xf2, 0x27, 0xe6, 0x33, 0xcc,
	0xa6, 0x11, 0xe9, 0xbf, 0x3f, 0x3f, 0x28, 0x80, 0x3d, 0xf7, 0xeb, 0x73, 0x5e, 0x77, 0x96, 0x39,
	0xe7, 0x43, 0xe8, 0x21, 0x7f, 0x52, 0x4a, 0x13, 0x60, 0xa2, 0x61, 0x24, 0xe1, 0x16, 0xe3, 0x17,
	0x8d, 0x97, 0xea, 0xd5, 0x86, 0x6f, 0x1a, 0xd4, 0xba, 0xda, 0x6d, 0xb4, 0xe2, 0xf6, 0xda, 0x8a,
	0xef, 0xea, 0xe7, 0xcd, 0x73, 0x55, 0x44, 0x7a, 0x4d, 0xe4, 0x86, 0x88, 0xde, 0x39, 0xb0, 0xc5,
	0xf8, 0xc5, 0xd3, 0xb2, 0x2a, 0x52, 0x7c, 0x5e, 0x7e, 0xb0, 0x94, 0x3b, 0xf5, 0xdd, 0x46, 0xfb,
	0xc3, 0x33, 0x26, 0xae, 0x3d, 0x7a, 0xda, 0x97, 0x1e, 0x3d, 0xf7, 0x61, 0x53, 0xdd, 0x55, 0xf8,
	0x84, 0x38, 0x29, 0x25, 0x97, 0x74, 0xd4, 0x6c, 0x4e, 0xd6, 0x58, 0x7c, 0x0a, 0x37, 0x1e, 0x20,
	0xfa, 0x4b, 0x7d, 0xfe, 0x6c, 0x65, 0x97, 0xf8, 0x57, 0x5d, 0xf5, 0xe7, 0xf6, 0xf3, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xce, 0x23, 0x2d, 0xe8, 0xee, 0x0e, 0x00, 0x00,
}
